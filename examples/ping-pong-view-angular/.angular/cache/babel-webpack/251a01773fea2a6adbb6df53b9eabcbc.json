{
  "ast": null,
  "code": "import { map } from './map';\nexport function pluck() {\n  for (var _len = arguments.length, properties = new Array(_len), _key = 0; _key < _len; _key++) {\n    properties[_key] = arguments[_key];\n  }\n\n  var length = properties.length;\n\n  if (length === 0) {\n    throw new Error('list of properties cannot be empty.');\n  }\n\n  return map(function (x) {\n    var currentProp = x;\n\n    for (var i = 0; i < length; i++) {\n      var p = currentProp === null || currentProp === void 0 ? void 0 : currentProp[properties[i]];\n\n      if (typeof p !== 'undefined') {\n        currentProp = p;\n      } else {\n        return undefined;\n      }\n    }\n\n    return currentProp;\n  });\n}",
  "map": {
    "version": 3,
    "sources": [
      "/home/koda/redhat/kogito-tooling/examples/ping-pong-view-angular/node_modules/rxjs/dist/esm/internal/operators/pluck.js"
    ],
    "names": ["map", "pluck", "properties", "length", "Error", "x", "currentProp", "i", "p", "undefined"],
    "mappings": "AAAA,SAASA,GAAT,QAAoB,OAApB;AACA,OAAO,SAASC,KAAT,GAA8B;AAAA,oCAAZC,UAAY;AAAZA,IAAAA,UAAY;AAAA;;AACjC,MAAMC,MAAM,GAAGD,UAAU,CAACC,MAA1B;;AACA,MAAIA,MAAM,KAAK,CAAf,EAAkB;AACd,UAAM,IAAIC,KAAJ,CAAU,qCAAV,CAAN;AACH;;AACD,SAAOJ,GAAG,CAAC,UAACK,CAAD,EAAO;AACd,QAAIC,WAAW,GAAGD,CAAlB;;AACA,SAAK,IAAIE,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGJ,MAApB,EAA4BI,CAAC,EAA7B,EAAiC;AAC7B,UAAMC,CAAC,GAAGF,WAAW,KAAK,IAAhB,IAAwBA,WAAW,KAAK,KAAK,CAA7C,GAAiD,KAAK,CAAtD,GAA0DA,WAAW,CAACJ,UAAU,CAACK,CAAD,CAAX,CAA/E;;AACA,UAAI,OAAOC,CAAP,KAAa,WAAjB,EAA8B;AAC1BF,QAAAA,WAAW,GAAGE,CAAd;AACH,OAFD,MAGK;AACD,eAAOC,SAAP;AACH;AACJ;;AACD,WAAOH,WAAP;AACH,GAZS,CAAV;AAaH",
    "sourcesContent": [
      "import { map } from './map';\nexport function pluck(...properties) {\n    const length = properties.length;\n    if (length === 0) {\n        throw new Error('list of properties cannot be empty.');\n    }\n    return map((x) => {\n        let currentProp = x;\n        for (let i = 0; i < length; i++) {\n            const p = currentProp === null || currentProp === void 0 ? void 0 : currentProp[properties[i]];\n            if (typeof p !== 'undefined') {\n                currentProp = p;\n            }\n            else {\n                return undefined;\n            }\n        }\n        return currentProp;\n    });\n}\n"
    ]
  },
  "metadata": {},
  "sourceType": "module"
}
