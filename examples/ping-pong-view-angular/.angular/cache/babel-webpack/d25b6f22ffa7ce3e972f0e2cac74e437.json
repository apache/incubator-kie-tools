{
  "ast": null,
  "code": "import { distinctUntilChanged } from './distinctUntilChanged';\nexport function distinctUntilKeyChanged(key, compare) {\n  return distinctUntilChanged(function (x, y) {\n    return compare ? compare(x[key], y[key]) : x[key] === y[key];\n  });\n}",
  "map": {
    "version": 3,
    "sources": [
      "/home/koda/redhat/kogito-tooling/examples/ping-pong-view-angular/node_modules/rxjs/dist/esm/internal/operators/distinctUntilKeyChanged.js"
    ],
    "names": ["distinctUntilChanged", "distinctUntilKeyChanged", "key", "compare", "x", "y"],
    "mappings": "AAAA,SAASA,oBAAT,QAAqC,wBAArC;AACA,OAAO,SAASC,uBAAT,CAAiCC,GAAjC,EAAsCC,OAAtC,EAA+C;AAClD,SAAOH,oBAAoB,CAAC,UAACI,CAAD,EAAIC,CAAJ;AAAA,WAAUF,OAAO,GAAGA,OAAO,CAACC,CAAC,CAACF,GAAD,CAAF,EAASG,CAAC,CAACH,GAAD,CAAV,CAAV,GAA6BE,CAAC,CAACF,GAAD,CAAD,KAAWG,CAAC,CAACH,GAAD,CAA1D;AAAA,GAAD,CAA3B;AACH",
    "sourcesContent": [
      "import { distinctUntilChanged } from './distinctUntilChanged';\nexport function distinctUntilKeyChanged(key, compare) {\n    return distinctUntilChanged((x, y) => compare ? compare(x[key], y[key]) : x[key] === y[key]);\n}\n"
    ]
  },
  "metadata": {},
  "sourceType": "module"
}
