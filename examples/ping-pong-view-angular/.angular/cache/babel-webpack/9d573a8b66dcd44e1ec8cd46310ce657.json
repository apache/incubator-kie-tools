{
  "ast": null,
  "code": "import { config } from '../config';\nimport { timeoutProvider } from '../scheduler/timeoutProvider';\nexport function reportUnhandledError(err) {\n  timeoutProvider.setTimeout(function () {\n    var onUnhandledError = config.onUnhandledError;\n\n    if (onUnhandledError) {\n      onUnhandledError(err);\n    } else {\n      throw err;\n    }\n  });\n}",
  "map": {
    "version": 3,
    "sources": [
      "/home/koda/redhat/kogito-tooling/examples/ping-pong-view-angular/node_modules/rxjs/dist/esm/internal/util/reportUnhandledError.js"
    ],
    "names": ["config", "timeoutProvider", "reportUnhandledError", "err", "setTimeout", "onUnhandledError"],
    "mappings": "AAAA,SAASA,MAAT,QAAuB,WAAvB;AACA,SAASC,eAAT,QAAgC,8BAAhC;AACA,OAAO,SAASC,oBAAT,CAA8BC,GAA9B,EAAmC;AACtCF,EAAAA,eAAe,CAACG,UAAhB,CAA2B,YAAM;AAC7B,QAAQC,gBAAR,GAA6BL,MAA7B,CAAQK,gBAAR;;AACA,QAAIA,gBAAJ,EAAsB;AAClBA,MAAAA,gBAAgB,CAACF,GAAD,CAAhB;AACH,KAFD,MAGK;AACD,YAAMA,GAAN;AACH;AACJ,GARD;AASH",
    "sourcesContent": [
      "import { config } from '../config';\nimport { timeoutProvider } from '../scheduler/timeoutProvider';\nexport function reportUnhandledError(err) {\n    timeoutProvider.setTimeout(() => {\n        const { onUnhandledError } = config;\n        if (onUnhandledError) {\n            onUnhandledError(err);\n        }\n        else {\n            throw err;\n        }\n    });\n}\n"
    ]
  },
  "metadata": {},
  "sourceType": "module"
}
