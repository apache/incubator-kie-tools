{
  "ast": null,
  "code": "import _toConsumableArray from \"/home/koda/redhat/kogito-tooling/node_modules/@angular-devkit/build-angular/node_modules/@babel/runtime/helpers/esm/toConsumableArray.js\";\nimport _createForOfIteratorHelper from \"/home/koda/redhat/kogito-tooling/node_modules/@angular-devkit/build-angular/node_modules/@babel/runtime/helpers/esm/createForOfIteratorHelper.js\";\nimport _classCallCheck from \"/home/koda/redhat/kogito-tooling/node_modules/@angular-devkit/build-angular/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nimport _createClass from \"/home/koda/redhat/kogito-tooling/node_modules/@angular-devkit/build-angular/node_modules/@babel/runtime/helpers/esm/createClass.js\";\nimport { isFunction } from './util/isFunction';\nimport { UnsubscriptionError } from './util/UnsubscriptionError';\nimport { arrRemove } from './util/arrRemove';\nexport var Subscription = /*#__PURE__*/function () {\n  function Subscription(initialTeardown) {\n    _classCallCheck(this, Subscription);\n\n    this.initialTeardown = initialTeardown;\n    this.closed = false;\n    this._parentage = null;\n    this._teardowns = null;\n  }\n\n  _createClass(Subscription, [{\n    key: \"unsubscribe\",\n    value: function unsubscribe() {\n      var errors;\n\n      if (!this.closed) {\n        this.closed = true;\n        var _parentage = this._parentage;\n\n        if (_parentage) {\n          this._parentage = null;\n\n          if (Array.isArray(_parentage)) {\n            var _iterator = _createForOfIteratorHelper(_parentage),\n                _step;\n\n            try {\n              for (_iterator.s(); !(_step = _iterator.n()).done;) {\n                var parent = _step.value;\n                parent.remove(this);\n              }\n            } catch (err) {\n              _iterator.e(err);\n            } finally {\n              _iterator.f();\n            }\n          } else {\n            _parentage.remove(this);\n          }\n        }\n\n        var initialTeardown = this.initialTeardown;\n\n        if (isFunction(initialTeardown)) {\n          try {\n            initialTeardown();\n          } catch (e) {\n            errors = e instanceof UnsubscriptionError ? e.errors : [e];\n          }\n        }\n\n        var _teardowns = this._teardowns;\n\n        if (_teardowns) {\n          this._teardowns = null;\n\n          var _iterator2 = _createForOfIteratorHelper(_teardowns),\n              _step2;\n\n          try {\n            for (_iterator2.s(); !(_step2 = _iterator2.n()).done;) {\n              var teardown = _step2.value;\n\n              try {\n                execTeardown(teardown);\n              } catch (err) {\n                errors = errors !== null && errors !== void 0 ? errors : [];\n\n                if (err instanceof UnsubscriptionError) {\n                  errors = [].concat(_toConsumableArray(errors), _toConsumableArray(err.errors));\n                } else {\n                  errors.push(err);\n                }\n              }\n            }\n          } catch (err) {\n            _iterator2.e(err);\n          } finally {\n            _iterator2.f();\n          }\n        }\n\n        if (errors) {\n          throw new UnsubscriptionError(errors);\n        }\n      }\n    }\n  }, {\n    key: \"add\",\n    value: function add(teardown) {\n      var _a;\n\n      if (teardown && teardown !== this) {\n        if (this.closed) {\n          execTeardown(teardown);\n        } else {\n          if (teardown instanceof Subscription) {\n            if (teardown.closed || teardown._hasParent(this)) {\n              return;\n            }\n\n            teardown._addParent(this);\n          }\n\n          (this._teardowns = (_a = this._teardowns) !== null && _a !== void 0 ? _a : []).push(teardown);\n        }\n      }\n    }\n  }, {\n    key: \"_hasParent\",\n    value: function _hasParent(parent) {\n      var _parentage = this._parentage;\n      return _parentage === parent || Array.isArray(_parentage) && _parentage.includes(parent);\n    }\n  }, {\n    key: \"_addParent\",\n    value: function _addParent(parent) {\n      var _parentage = this._parentage;\n      this._parentage = Array.isArray(_parentage) ? (_parentage.push(parent), _parentage) : _parentage ? [_parentage, parent] : parent;\n    }\n  }, {\n    key: \"_removeParent\",\n    value: function _removeParent(parent) {\n      var _parentage = this._parentage;\n\n      if (_parentage === parent) {\n        this._parentage = null;\n      } else if (Array.isArray(_parentage)) {\n        arrRemove(_parentage, parent);\n      }\n    }\n  }, {\n    key: \"remove\",\n    value: function remove(teardown) {\n      var _teardowns = this._teardowns;\n      _teardowns && arrRemove(_teardowns, teardown);\n\n      if (teardown instanceof Subscription) {\n        teardown._removeParent(this);\n      }\n    }\n  }]);\n\n  return Subscription;\n}();\n\nSubscription.EMPTY = function () {\n  var empty = new Subscription();\n  empty.closed = true;\n  return empty;\n}();\n\nexport var EMPTY_SUBSCRIPTION = Subscription.EMPTY;\nexport function isSubscription(value) {\n  return value instanceof Subscription || value && 'closed' in value && isFunction(value.remove) && isFunction(value.add) && isFunction(value.unsubscribe);\n}\n\nfunction execTeardown(teardown) {\n  if (isFunction(teardown)) {\n    teardown();\n  } else {\n    teardown.unsubscribe();\n  }\n}",
  "map": {
    "version": 3,
    "sources": [
      "/home/koda/redhat/kogito-tooling/examples/ping-pong-view-angular/node_modules/rxjs/dist/esm/internal/Subscription.js"
    ],
    "names": [
      "isFunction",
      "UnsubscriptionError",
      "arrRemove",
      "Subscription",
      "initialTeardown",
      "closed",
      "_parentage",
      "_teardowns",
      "errors",
      "Array",
      "isArray",
      "parent",
      "remove",
      "e",
      "teardown",
      "execTeardown",
      "err",
      "push",
      "_a",
      "_hasParent",
      "_addParent",
      "includes",
      "_removeParent",
      "EMPTY",
      "empty",
      "EMPTY_SUBSCRIPTION",
      "isSubscription",
      "value",
      "add",
      "unsubscribe"
    ],
    "mappings": "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",
    "sourcesContent": [
      "import { isFunction } from './util/isFunction';\nimport { UnsubscriptionError } from './util/UnsubscriptionError';\nimport { arrRemove } from './util/arrRemove';\nexport class Subscription {\n    constructor(initialTeardown) {\n        this.initialTeardown = initialTeardown;\n        this.closed = false;\n        this._parentage = null;\n        this._teardowns = null;\n    }\n    unsubscribe() {\n        let errors;\n        if (!this.closed) {\n            this.closed = true;\n            const { _parentage } = this;\n            if (_parentage) {\n                this._parentage = null;\n                if (Array.isArray(_parentage)) {\n                    for (const parent of _parentage) {\n                        parent.remove(this);\n                    }\n                }\n                else {\n                    _parentage.remove(this);\n                }\n            }\n            const { initialTeardown } = this;\n            if (isFunction(initialTeardown)) {\n                try {\n                    initialTeardown();\n                }\n                catch (e) {\n                    errors = e instanceof UnsubscriptionError ? e.errors : [e];\n                }\n            }\n            const { _teardowns } = this;\n            if (_teardowns) {\n                this._teardowns = null;\n                for (const teardown of _teardowns) {\n                    try {\n                        execTeardown(teardown);\n                    }\n                    catch (err) {\n                        errors = errors !== null && errors !== void 0 ? errors : [];\n                        if (err instanceof UnsubscriptionError) {\n                            errors = [...errors, ...err.errors];\n                        }\n                        else {\n                            errors.push(err);\n                        }\n                    }\n                }\n            }\n            if (errors) {\n                throw new UnsubscriptionError(errors);\n            }\n        }\n    }\n    add(teardown) {\n        var _a;\n        if (teardown && teardown !== this) {\n            if (this.closed) {\n                execTeardown(teardown);\n            }\n            else {\n                if (teardown instanceof Subscription) {\n                    if (teardown.closed || teardown._hasParent(this)) {\n                        return;\n                    }\n                    teardown._addParent(this);\n                }\n                (this._teardowns = (_a = this._teardowns) !== null && _a !== void 0 ? _a : []).push(teardown);\n            }\n        }\n    }\n    _hasParent(parent) {\n        const { _parentage } = this;\n        return _parentage === parent || (Array.isArray(_parentage) && _parentage.includes(parent));\n    }\n    _addParent(parent) {\n        const { _parentage } = this;\n        this._parentage = Array.isArray(_parentage) ? (_parentage.push(parent), _parentage) : _parentage ? [_parentage, parent] : parent;\n    }\n    _removeParent(parent) {\n        const { _parentage } = this;\n        if (_parentage === parent) {\n            this._parentage = null;\n        }\n        else if (Array.isArray(_parentage)) {\n            arrRemove(_parentage, parent);\n        }\n    }\n    remove(teardown) {\n        const { _teardowns } = this;\n        _teardowns && arrRemove(_teardowns, teardown);\n        if (teardown instanceof Subscription) {\n            teardown._removeParent(this);\n        }\n    }\n}\nSubscription.EMPTY = (() => {\n    const empty = new Subscription();\n    empty.closed = true;\n    return empty;\n})();\nexport const EMPTY_SUBSCRIPTION = Subscription.EMPTY;\nexport function isSubscription(value) {\n    return (value instanceof Subscription ||\n        (value && 'closed' in value && isFunction(value.remove) && isFunction(value.add) && isFunction(value.unsubscribe)));\n}\nfunction execTeardown(teardown) {\n    if (isFunction(teardown)) {\n        teardown();\n    }\n    else {\n        teardown.unsubscribe();\n    }\n}\n"
    ]
  },
  "metadata": {},
  "sourceType": "module"
}
