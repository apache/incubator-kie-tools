{
  "ast": null,
  "code": "import { concat } from '../observable/concat';\nimport { of } from '../observable/of';\nexport function endWith() {\n  for (var _len = arguments.length, values = new Array(_len), _key = 0; _key < _len; _key++) {\n    values[_key] = arguments[_key];\n  }\n\n  return function (source) {\n    return concat(source, of.apply(void 0, values));\n  };\n}",
  "map": {
    "version": 3,
    "sources": [
      "/home/koda/redhat/kogito-tooling/examples/ping-pong-view-angular/node_modules/rxjs/dist/esm/internal/operators/endWith.js"
    ],
    "names": ["concat", "of", "endWith", "values", "source"],
    "mappings": "AAAA,SAASA,MAAT,QAAuB,sBAAvB;AACA,SAASC,EAAT,QAAmB,kBAAnB;AACA,OAAO,SAASC,OAAT,GAA4B;AAAA,oCAARC,MAAQ;AAARA,IAAAA,MAAQ;AAAA;;AAC/B,SAAO,UAACC,MAAD;AAAA,WAAYJ,MAAM,CAACI,MAAD,EAASH,EAAE,MAAF,SAAME,MAAN,CAAT,CAAlB;AAAA,GAAP;AACH",
    "sourcesContent": [
      "import { concat } from '../observable/concat';\nimport { of } from '../observable/of';\nexport function endWith(...values) {\n    return (source) => concat(source, of(...values));\n}\n"
    ]
  },
  "metadata": {},
  "sourceType": "module"
}
