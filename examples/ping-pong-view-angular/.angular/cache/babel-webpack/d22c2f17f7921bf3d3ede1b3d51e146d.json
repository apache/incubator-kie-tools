{
  "ast": null,
  "code": "import { operate } from '../util/lift';\nimport { OperatorSubscriber } from './OperatorSubscriber';\nexport function every(predicate, thisArg) {\n  return operate(function (source, subscriber) {\n    var index = 0;\n    source.subscribe(new OperatorSubscriber(subscriber, function (value) {\n      if (!predicate.call(thisArg, value, index++, source)) {\n        subscriber.next(false);\n        subscriber.complete();\n      }\n    }, function () {\n      subscriber.next(true);\n      subscriber.complete();\n    }));\n  });\n}",
  "map": {
    "version": 3,
    "sources": [
      "/home/koda/redhat/kogito-tooling/examples/ping-pong-view-angular/node_modules/rxjs/dist/esm/internal/operators/every.js"
    ],
    "names": [
      "operate",
      "OperatorSubscriber",
      "every",
      "predicate",
      "thisArg",
      "source",
      "subscriber",
      "index",
      "subscribe",
      "value",
      "call",
      "next",
      "complete"
    ],
    "mappings": "AAAA,SAASA,OAAT,QAAwB,cAAxB;AACA,SAASC,kBAAT,QAAmC,sBAAnC;AACA,OAAO,SAASC,KAAT,CAAeC,SAAf,EAA0BC,OAA1B,EAAmC;AACtC,SAAOJ,OAAO,CAAC,UAACK,MAAD,EAASC,UAAT,EAAwB;AACnC,QAAIC,KAAK,GAAG,CAAZ;AACAF,IAAAA,MAAM,CAACG,SAAP,CAAiB,IAAIP,kBAAJ,CAAuBK,UAAvB,EAAmC,UAACG,KAAD,EAAW;AAC3D,UAAI,CAACN,SAAS,CAACO,IAAV,CAAeN,OAAf,EAAwBK,KAAxB,EAA+BF,KAAK,EAApC,EAAwCF,MAAxC,CAAL,EAAsD;AAClDC,QAAAA,UAAU,CAACK,IAAX,CAAgB,KAAhB;AACAL,QAAAA,UAAU,CAACM,QAAX;AACH;AACJ,KALgB,EAKd,YAAM;AACLN,MAAAA,UAAU,CAACK,IAAX,CAAgB,IAAhB;AACAL,MAAAA,UAAU,CAACM,QAAX;AACH,KARgB,CAAjB;AASH,GAXa,CAAd;AAYH",
    "sourcesContent": [
      "import { operate } from '../util/lift';\nimport { OperatorSubscriber } from './OperatorSubscriber';\nexport function every(predicate, thisArg) {\n    return operate((source, subscriber) => {\n        let index = 0;\n        source.subscribe(new OperatorSubscriber(subscriber, (value) => {\n            if (!predicate.call(thisArg, value, index++, source)) {\n                subscriber.next(false);\n                subscriber.complete();\n            }\n        }, () => {\n            subscriber.next(true);\n            subscriber.complete();\n        }));\n    });\n}\n"
    ]
  },
  "metadata": {},
  "sourceType": "module"
}
