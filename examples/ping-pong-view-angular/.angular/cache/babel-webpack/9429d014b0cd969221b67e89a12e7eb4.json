{
  "ast": null,
  "code": "import { identity } from '../util/identity';\nimport { operate } from '../util/lift';\nimport { OperatorSubscriber } from './OperatorSubscriber';\nexport function distinctUntilChanged(comparator) {\n  var keySelector = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : identity;\n  comparator = comparator !== null && comparator !== void 0 ? comparator : defaultCompare;\n  return operate(function (source, subscriber) {\n    var previousKey;\n    var first = true;\n    source.subscribe(new OperatorSubscriber(subscriber, function (value) {\n      var currentKey = keySelector(value);\n\n      if (first || !comparator(previousKey, currentKey)) {\n        first = false;\n        previousKey = currentKey;\n        subscriber.next(value);\n      }\n    }));\n  });\n}\n\nfunction defaultCompare(a, b) {\n  return a === b;\n}",
  "map": {
    "version": 3,
    "sources": [
      "/home/koda/redhat/kogito-tooling/examples/ping-pong-view-angular/node_modules/rxjs/dist/esm/internal/operators/distinctUntilChanged.js"
    ],
    "names": [
      "identity",
      "operate",
      "OperatorSubscriber",
      "distinctUntilChanged",
      "comparator",
      "keySelector",
      "defaultCompare",
      "source",
      "subscriber",
      "previousKey",
      "first",
      "subscribe",
      "value",
      "currentKey",
      "next",
      "a",
      "b"
    ],
    "mappings": "AAAA,SAASA,QAAT,QAAyB,kBAAzB;AACA,SAASC,OAAT,QAAwB,cAAxB;AACA,SAASC,kBAAT,QAAmC,sBAAnC;AACA,OAAO,SAASC,oBAAT,CAA8BC,UAA9B,EAAkE;AAAA,MAAxBC,WAAwB,uEAAVL,QAAU;AACrEI,EAAAA,UAAU,GAAGA,UAAU,KAAK,IAAf,IAAuBA,UAAU,KAAK,KAAK,CAA3C,GAA+CA,UAA/C,GAA4DE,cAAzE;AACA,SAAOL,OAAO,CAAC,UAACM,MAAD,EAASC,UAAT,EAAwB;AACnC,QAAIC,WAAJ;AACA,QAAIC,KAAK,GAAG,IAAZ;AACAH,IAAAA,MAAM,CAACI,SAAP,CAAiB,IAAIT,kBAAJ,CAAuBM,UAAvB,EAAmC,UAACI,KAAD,EAAW;AAC3D,UAAMC,UAAU,GAAGR,WAAW,CAACO,KAAD,CAA9B;;AACA,UAAIF,KAAK,IAAI,CAACN,UAAU,CAACK,WAAD,EAAcI,UAAd,CAAxB,EAAmD;AAC/CH,QAAAA,KAAK,GAAG,KAAR;AACAD,QAAAA,WAAW,GAAGI,UAAd;AACAL,QAAAA,UAAU,CAACM,IAAX,CAAgBF,KAAhB;AACH;AACJ,KAPgB,CAAjB;AAQH,GAXa,CAAd;AAYH;;AACD,SAASN,cAAT,CAAwBS,CAAxB,EAA2BC,CAA3B,EAA8B;AAC1B,SAAOD,CAAC,KAAKC,CAAb;AACH",
    "sourcesContent": [
      "import { identity } from '../util/identity';\nimport { operate } from '../util/lift';\nimport { OperatorSubscriber } from './OperatorSubscriber';\nexport function distinctUntilChanged(comparator, keySelector = identity) {\n    comparator = comparator !== null && comparator !== void 0 ? comparator : defaultCompare;\n    return operate((source, subscriber) => {\n        let previousKey;\n        let first = true;\n        source.subscribe(new OperatorSubscriber(subscriber, (value) => {\n            const currentKey = keySelector(value);\n            if (first || !comparator(previousKey, currentKey)) {\n                first = false;\n                previousKey = currentKey;\n                subscriber.next(value);\n            }\n        }));\n    });\n}\nfunction defaultCompare(a, b) {\n    return a === b;\n}\n"
    ]
  },
  "metadata": {},
  "sourceType": "module"
}
