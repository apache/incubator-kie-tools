{
  "ast": null,
  "code": "import { Observable } from '../Observable';\nimport { async as asyncScheduler } from '../scheduler/async';\nimport { isScheduler } from '../util/isScheduler';\nimport { isValidDate } from '../util/isDate';\nexport function timer() {\n  var dueTime = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 0;\n  var intervalOrScheduler = arguments.length > 1 ? arguments[1] : undefined;\n  var scheduler = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : asyncScheduler;\n  var intervalDuration = -1;\n\n  if (intervalOrScheduler != null) {\n    if (isScheduler(intervalOrScheduler)) {\n      scheduler = intervalOrScheduler;\n    } else {\n      intervalDuration = intervalOrScheduler;\n    }\n  }\n\n  return new Observable(function (subscriber) {\n    var due = isValidDate(dueTime) ? +dueTime - scheduler.now() : dueTime;\n\n    if (due < 0) {\n      due = 0;\n    }\n\n    var n = 0;\n    return scheduler.schedule(function () {\n      if (!subscriber.closed) {\n        subscriber.next(n++);\n\n        if (0 <= intervalDuration) {\n          this.schedule(undefined, intervalDuration);\n        } else {\n          subscriber.complete();\n        }\n      }\n    }, due);\n  });\n} //# sourceMappingURL=timer.js.map",
  "map": null,
  "metadata": {},
  "sourceType": "module"
}
