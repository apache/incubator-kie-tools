{
  "ast": null,
  "code": "import _regeneratorRuntime from \"/home/koda/redhat/kogito-tooling/node_modules/@angular-devkit/build-angular/node_modules/@babel/runtime/regenerator/index.js\";\nimport { identity } from '../util/identity';\nimport { isScheduler } from '../util/isScheduler';\nimport { defer } from './defer';\nimport { scheduleIterable } from '../scheduled/scheduleIterable';\nexport function generate(initialStateOrOptions, condition, iterate, resultSelectorOrScheduler, scheduler) {\n  var _marked = /*#__PURE__*/_regeneratorRuntime.mark(gen);\n\n  var resultSelector;\n  var initialState;\n\n  if (arguments.length === 1) {\n    initialState = initialStateOrOptions.initialState;\n    condition = initialStateOrOptions.condition;\n    iterate = initialStateOrOptions.iterate;\n    var _initialStateOrOption = initialStateOrOptions.resultSelector;\n    resultSelector = _initialStateOrOption === void 0 ? identity : _initialStateOrOption;\n    scheduler = initialStateOrOptions.scheduler;\n  } else {\n    initialState = initialStateOrOptions;\n\n    if (!resultSelectorOrScheduler || isScheduler(resultSelectorOrScheduler)) {\n      resultSelector = identity;\n      scheduler = resultSelectorOrScheduler;\n    } else {\n      resultSelector = resultSelectorOrScheduler;\n    }\n  }\n\n  function gen() {\n    var state;\n    return _regeneratorRuntime.wrap(function gen$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            state = initialState;\n\n          case 1:\n            if (!(!condition || condition(state))) {\n              _context.next = 7;\n              break;\n            }\n\n            _context.next = 4;\n            return resultSelector(state);\n\n          case 4:\n            state = iterate(state);\n            _context.next = 1;\n            break;\n\n          case 7:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _marked);\n  }\n\n  return defer(scheduler ? function () {\n    return scheduleIterable(gen(), scheduler);\n  } : gen);\n} //# sourceMappingURL=generate.js.map",
  "map": null,
  "metadata": {},
  "sourceType": "module"
}
