{
  "ast": null,
  "code": "import { innerFrom } from '../observable/innerFrom';\nimport { OperatorSubscriber } from './OperatorSubscriber';\nimport { operate } from '../util/lift';\nexport function catchError(selector) {\n  return operate(function (source, subscriber) {\n    var innerSub = null;\n    var syncUnsub = false;\n    var handledResult;\n    innerSub = source.subscribe(new OperatorSubscriber(subscriber, undefined, undefined, function (err) {\n      handledResult = innerFrom(selector(err, catchError(selector)(source)));\n\n      if (innerSub) {\n        innerSub.unsubscribe();\n        innerSub = null;\n        handledResult.subscribe(subscriber);\n      } else {\n        syncUnsub = true;\n      }\n    }));\n\n    if (syncUnsub) {\n      innerSub.unsubscribe();\n      innerSub = null;\n      handledResult.subscribe(subscriber);\n    }\n  });\n}",
  "map": {
    "version": 3,
    "sources": [
      "/home/koda/redhat/kogito-tooling/examples/ping-pong-view-angular/node_modules/rxjs/dist/esm/internal/operators/catchError.js"
    ],
    "names": [
      "innerFrom",
      "OperatorSubscriber",
      "operate",
      "catchError",
      "selector",
      "source",
      "subscriber",
      "innerSub",
      "syncUnsub",
      "handledResult",
      "subscribe",
      "undefined",
      "err",
      "unsubscribe"
    ],
    "mappings": "AAAA,SAASA,SAAT,QAA0B,yBAA1B;AACA,SAASC,kBAAT,QAAmC,sBAAnC;AACA,SAASC,OAAT,QAAwB,cAAxB;AACA,OAAO,SAASC,UAAT,CAAoBC,QAApB,EAA8B;AACjC,SAAOF,OAAO,CAAC,UAACG,MAAD,EAASC,UAAT,EAAwB;AACnC,QAAIC,QAAQ,GAAG,IAAf;AACA,QAAIC,SAAS,GAAG,KAAhB;AACA,QAAIC,aAAJ;AACAF,IAAAA,QAAQ,GAAGF,MAAM,CAACK,SAAP,CAAiB,IAAIT,kBAAJ,CAAuBK,UAAvB,EAAmCK,SAAnC,EAA8CA,SAA9C,EAAyD,UAACC,GAAD,EAAS;AAC1FH,MAAAA,aAAa,GAAGT,SAAS,CAACI,QAAQ,CAACQ,GAAD,EAAMT,UAAU,CAACC,QAAD,CAAV,CAAqBC,MAArB,CAAN,CAAT,CAAzB;;AACA,UAAIE,QAAJ,EAAc;AACVA,QAAAA,QAAQ,CAACM,WAAT;AACAN,QAAAA,QAAQ,GAAG,IAAX;AACAE,QAAAA,aAAa,CAACC,SAAd,CAAwBJ,UAAxB;AACH,OAJD,MAKK;AACDE,QAAAA,SAAS,GAAG,IAAZ;AACH;AACJ,KAV2B,CAAjB,CAAX;;AAWA,QAAIA,SAAJ,EAAe;AACXD,MAAAA,QAAQ,CAACM,WAAT;AACAN,MAAAA,QAAQ,GAAG,IAAX;AACAE,MAAAA,aAAa,CAACC,SAAd,CAAwBJ,UAAxB;AACH;AACJ,GApBa,CAAd;AAqBH",
    "sourcesContent": [
      "import { innerFrom } from '../observable/innerFrom';\nimport { OperatorSubscriber } from './OperatorSubscriber';\nimport { operate } from '../util/lift';\nexport function catchError(selector) {\n    return operate((source, subscriber) => {\n        let innerSub = null;\n        let syncUnsub = false;\n        let handledResult;\n        innerSub = source.subscribe(new OperatorSubscriber(subscriber, undefined, undefined, (err) => {\n            handledResult = innerFrom(selector(err, catchError(selector)(source)));\n            if (innerSub) {\n                innerSub.unsubscribe();\n                innerSub = null;\n                handledResult.subscribe(subscriber);\n            }\n            else {\n                syncUnsub = true;\n            }\n        }));\n        if (syncUnsub) {\n            innerSub.unsubscribe();\n            innerSub = null;\n            handledResult.subscribe(subscriber);\n        }\n    });\n}\n"
    ]
  },
  "metadata": {},
  "sourceType": "module"
}
