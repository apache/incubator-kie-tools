{
  "ast": null,
  "code": "import _classCallCheck from \"/home/koda/redhat/kogito-tooling/node_modules/@angular-devkit/build-angular/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nimport _createClass from \"/home/koda/redhat/kogito-tooling/node_modules/@angular-devkit/build-angular/node_modules/@babel/runtime/helpers/esm/createClass.js\";\nimport _inherits from \"/home/koda/redhat/kogito-tooling/node_modules/@angular-devkit/build-angular/node_modules/@babel/runtime/helpers/esm/inherits.js\";\nimport _createSuper from \"/home/koda/redhat/kogito-tooling/node_modules/@angular-devkit/build-angular/node_modules/@babel/runtime/helpers/esm/createSuper.js\";\nimport { Subscription } from '../Subscription';\nexport var Action = /*#__PURE__*/function (_Subscription) {\n  _inherits(Action, _Subscription);\n\n  var _super = _createSuper(Action);\n\n  function Action(scheduler, work) {\n    _classCallCheck(this, Action);\n\n    return _super.call(this);\n  }\n\n  _createClass(Action, [{\n    key: \"schedule\",\n    value: function schedule(state) {\n      var delay = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n      return this;\n    }\n  }]);\n\n  return Action;\n}(Subscription);",
  "map": {
    "version": 3,
    "sources": [
      "/home/koda/redhat/kogito-tooling/examples/ping-pong-view-angular/node_modules/rxjs/dist/esm/internal/scheduler/Action.js"
    ],
    "names": ["Subscription", "Action", "scheduler", "work", "state", "delay"],
    "mappings": ";;;;AAAA,SAASA,YAAT,QAA6B,iBAA7B;AACA,WAAaC,MAAb;AAAA;;AAAA;;AACI,kBAAYC,SAAZ,EAAuBC,IAAvB,EAA6B;AAAA;;AAAA;AAE5B;;AAHL;AAAA;AAAA,WAII,kBAASC,KAAT,EAA2B;AAAA,UAAXC,KAAW,uEAAH,CAAG;AACvB,aAAO,IAAP;AACH;AANL;;AAAA;AAAA,EAA4BL,YAA5B",
    "sourcesContent": [
      "import { Subscription } from '../Subscription';\nexport class Action extends Subscription {\n    constructor(scheduler, work) {\n        super();\n    }\n    schedule(state, delay = 0) {\n        return this;\n    }\n}\n"
    ]
  },
  "metadata": {},
  "sourceType": "module"
}
