{
  "ast": null,
  "code": "import _classCallCheck from \"/home/koda/redhat/kogito-tooling/node_modules/@angular-devkit/build-angular/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nimport _createClass from \"/home/koda/redhat/kogito-tooling/node_modules/@angular-devkit/build-angular/node_modules/@babel/runtime/helpers/esm/createClass.js\";\nimport _get from \"/home/koda/redhat/kogito-tooling/node_modules/@angular-devkit/build-angular/node_modules/@babel/runtime/helpers/esm/get.js\";\nimport _getPrototypeOf from \"/home/koda/redhat/kogito-tooling/node_modules/@angular-devkit/build-angular/node_modules/@babel/runtime/helpers/esm/getPrototypeOf.js\";\nimport _inherits from \"/home/koda/redhat/kogito-tooling/node_modules/@angular-devkit/build-angular/node_modules/@babel/runtime/helpers/esm/inherits.js\";\nimport _createSuper from \"/home/koda/redhat/kogito-tooling/node_modules/@angular-devkit/build-angular/node_modules/@babel/runtime/helpers/esm/createSuper.js\";\nimport { Subject } from './Subject';\nexport var AsyncSubject = /*#__PURE__*/function (_Subject) {\n  _inherits(AsyncSubject, _Subject);\n\n  var _super = _createSuper(AsyncSubject);\n\n  function AsyncSubject() {\n    var _this;\n\n    _classCallCheck(this, AsyncSubject);\n\n    _this = _super.apply(this, arguments);\n    _this._value = null;\n    _this._hasValue = false;\n    _this._isComplete = false;\n    return _this;\n  }\n\n  _createClass(AsyncSubject, [{\n    key: \"_checkFinalizedStatuses\",\n    value: function _checkFinalizedStatuses(subscriber) {\n      var hasError = this.hasError,\n          _hasValue = this._hasValue,\n          _value = this._value,\n          thrownError = this.thrownError,\n          isStopped = this.isStopped,\n          _isComplete = this._isComplete;\n\n      if (hasError) {\n        subscriber.error(thrownError);\n      } else if (isStopped || _isComplete) {\n        _hasValue && subscriber.next(_value);\n        subscriber.complete();\n      }\n    }\n  }, {\n    key: \"next\",\n    value: function next(value) {\n      if (!this.isStopped) {\n        this._value = value;\n        this._hasValue = true;\n      }\n    }\n  }, {\n    key: \"complete\",\n    value: function complete() {\n      var _hasValue = this._hasValue,\n          _value = this._value,\n          _isComplete = this._isComplete;\n\n      if (!_isComplete) {\n        this._isComplete = true;\n        _hasValue && _get(_getPrototypeOf(AsyncSubject.prototype), \"next\", this).call(this, _value);\n\n        _get(_getPrototypeOf(AsyncSubject.prototype), \"complete\", this).call(this);\n      }\n    }\n  }]);\n\n  return AsyncSubject;\n}(Subject); //# sourceMappingURL=AsyncSubject.js.map",
  "map": null,
  "metadata": {},
  "sourceType": "module"
}
