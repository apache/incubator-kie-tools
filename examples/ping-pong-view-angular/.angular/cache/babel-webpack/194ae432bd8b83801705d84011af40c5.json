{
  "ast": null,
  "code": "import _classCallCheck from \"/home/koda/redhat/kogito-tooling/node_modules/@angular-devkit/build-angular/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nimport _createClass from \"/home/koda/redhat/kogito-tooling/node_modules/@angular-devkit/build-angular/node_modules/@babel/runtime/helpers/esm/createClass.js\";\nimport _get from \"/home/koda/redhat/kogito-tooling/node_modules/@angular-devkit/build-angular/node_modules/@babel/runtime/helpers/esm/get.js\";\nimport _getPrototypeOf from \"/home/koda/redhat/kogito-tooling/node_modules/@angular-devkit/build-angular/node_modules/@babel/runtime/helpers/esm/getPrototypeOf.js\";\nimport _inherits from \"/home/koda/redhat/kogito-tooling/node_modules/@angular-devkit/build-angular/node_modules/@babel/runtime/helpers/esm/inherits.js\";\nimport _createSuper from \"/home/koda/redhat/kogito-tooling/node_modules/@angular-devkit/build-angular/node_modules/@babel/runtime/helpers/esm/createSuper.js\";\nimport { Subject } from './Subject';\nimport { dateTimestampProvider } from './scheduler/dateTimestampProvider';\nexport var ReplaySubject = /*#__PURE__*/function (_Subject) {\n  _inherits(ReplaySubject, _Subject);\n\n  var _super = _createSuper(ReplaySubject);\n\n  function ReplaySubject() {\n    var _this;\n\n    var _bufferSize = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : Infinity;\n\n    var _windowTime = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : Infinity;\n\n    var _timestampProvider = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : dateTimestampProvider;\n\n    _classCallCheck(this, ReplaySubject);\n\n    _this = _super.call(this);\n    _this._bufferSize = _bufferSize;\n    _this._windowTime = _windowTime;\n    _this._timestampProvider = _timestampProvider;\n    _this._buffer = [];\n    _this._infiniteTimeWindow = true;\n    _this._infiniteTimeWindow = _windowTime === Infinity;\n    _this._bufferSize = Math.max(1, _bufferSize);\n    _this._windowTime = Math.max(1, _windowTime);\n    return _this;\n  }\n\n  _createClass(ReplaySubject, [{\n    key: \"next\",\n    value: function next(value) {\n      var isStopped = this.isStopped,\n          _buffer = this._buffer,\n          _infiniteTimeWindow = this._infiniteTimeWindow,\n          _timestampProvider = this._timestampProvider,\n          _windowTime = this._windowTime;\n\n      if (!isStopped) {\n        _buffer.push(value);\n\n        !_infiniteTimeWindow && _buffer.push(_timestampProvider.now() + _windowTime);\n      }\n\n      this._trimBuffer();\n\n      _get(_getPrototypeOf(ReplaySubject.prototype), \"next\", this).call(this, value);\n    }\n  }, {\n    key: \"_subscribe\",\n    value: function _subscribe(subscriber) {\n      this._throwIfClosed();\n\n      this._trimBuffer();\n\n      var subscription = this._innerSubscribe(subscriber);\n\n      var _infiniteTimeWindow = this._infiniteTimeWindow,\n          _buffer = this._buffer;\n\n      var copy = _buffer.slice();\n\n      for (var i = 0; i < copy.length && !subscriber.closed; i += _infiniteTimeWindow ? 1 : 2) {\n        subscriber.next(copy[i]);\n      }\n\n      this._checkFinalizedStatuses(subscriber);\n\n      return subscription;\n    }\n  }, {\n    key: \"_trimBuffer\",\n    value: function _trimBuffer() {\n      var _bufferSize = this._bufferSize,\n          _timestampProvider = this._timestampProvider,\n          _buffer = this._buffer,\n          _infiniteTimeWindow = this._infiniteTimeWindow;\n      var adjustedBufferSize = (_infiniteTimeWindow ? 1 : 2) * _bufferSize;\n      _bufferSize < Infinity && adjustedBufferSize < _buffer.length && _buffer.splice(0, _buffer.length - adjustedBufferSize);\n\n      if (!_infiniteTimeWindow) {\n        var now = _timestampProvider.now();\n\n        var last = 0;\n\n        for (var i = 1; i < _buffer.length && _buffer[i] <= now; i += 2) {\n          last = i;\n        }\n\n        last && _buffer.splice(0, last + 1);\n      }\n    }\n  }]);\n\n  return ReplaySubject;\n}(Subject); //# sourceMappingURL=ReplaySubject.js.map",
  "map": null,
  "metadata": {},
  "sourceType": "module"
}
