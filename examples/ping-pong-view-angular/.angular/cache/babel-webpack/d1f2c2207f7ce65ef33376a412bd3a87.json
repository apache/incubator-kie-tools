{
  "ast": null,
  "code": "import _createForOfIteratorHelper from \"/home/koda/redhat/kogito-tooling/node_modules/@angular-devkit/build-angular/node_modules/@babel/runtime/helpers/esm/createForOfIteratorHelper.js\";\nimport _classCallCheck from \"/home/koda/redhat/kogito-tooling/node_modules/@angular-devkit/build-angular/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nimport _createClass from \"/home/koda/redhat/kogito-tooling/node_modules/@angular-devkit/build-angular/node_modules/@babel/runtime/helpers/esm/createClass.js\";\nimport _get from \"/home/koda/redhat/kogito-tooling/node_modules/@angular-devkit/build-angular/node_modules/@babel/runtime/helpers/esm/get.js\";\nimport _getPrototypeOf from \"/home/koda/redhat/kogito-tooling/node_modules/@angular-devkit/build-angular/node_modules/@babel/runtime/helpers/esm/getPrototypeOf.js\";\nimport _inherits from \"/home/koda/redhat/kogito-tooling/node_modules/@angular-devkit/build-angular/node_modules/@babel/runtime/helpers/esm/inherits.js\";\nimport _createSuper from \"/home/koda/redhat/kogito-tooling/node_modules/@angular-devkit/build-angular/node_modules/@babel/runtime/helpers/esm/createSuper.js\";\nimport { Observable } from './Observable';\nimport { Subscription, EMPTY_SUBSCRIPTION } from './Subscription';\nimport { ObjectUnsubscribedError } from './util/ObjectUnsubscribedError';\nimport { arrRemove } from './util/arrRemove';\nimport { errorContext } from './util/errorContext';\nexport var Subject = /*#__PURE__*/function (_Observable) {\n  _inherits(Subject, _Observable);\n\n  var _super = _createSuper(Subject);\n\n  function Subject() {\n    var _this;\n\n    _classCallCheck(this, Subject);\n\n    _this = _super.call(this);\n    _this.closed = false;\n    _this.observers = [];\n    _this.isStopped = false;\n    _this.hasError = false;\n    _this.thrownError = null;\n    return _this;\n  }\n\n  _createClass(Subject, [{\n    key: \"lift\",\n    value: function lift(operator) {\n      var subject = new AnonymousSubject(this, this);\n      subject.operator = operator;\n      return subject;\n    }\n  }, {\n    key: \"_throwIfClosed\",\n    value: function _throwIfClosed() {\n      if (this.closed) {\n        throw new ObjectUnsubscribedError();\n      }\n    }\n  }, {\n    key: \"next\",\n    value: function next(value) {\n      var _this2 = this;\n\n      errorContext(function () {\n        _this2._throwIfClosed();\n\n        if (!_this2.isStopped) {\n          var copy = _this2.observers.slice();\n\n          var _iterator = _createForOfIteratorHelper(copy),\n              _step;\n\n          try {\n            for (_iterator.s(); !(_step = _iterator.n()).done;) {\n              var observer = _step.value;\n              observer.next(value);\n            }\n          } catch (err) {\n            _iterator.e(err);\n          } finally {\n            _iterator.f();\n          }\n        }\n      });\n    }\n  }, {\n    key: \"error\",\n    value: function error(err) {\n      var _this3 = this;\n\n      errorContext(function () {\n        _this3._throwIfClosed();\n\n        if (!_this3.isStopped) {\n          _this3.hasError = _this3.isStopped = true;\n          _this3.thrownError = err;\n          var observers = _this3.observers;\n\n          while (observers.length) {\n            observers.shift().error(err);\n          }\n        }\n      });\n    }\n  }, {\n    key: \"complete\",\n    value: function complete() {\n      var _this4 = this;\n\n      errorContext(function () {\n        _this4._throwIfClosed();\n\n        if (!_this4.isStopped) {\n          _this4.isStopped = true;\n          var observers = _this4.observers;\n\n          while (observers.length) {\n            observers.shift().complete();\n          }\n        }\n      });\n    }\n  }, {\n    key: \"unsubscribe\",\n    value: function unsubscribe() {\n      this.isStopped = this.closed = true;\n      this.observers = null;\n    }\n  }, {\n    key: \"observed\",\n    get: function get() {\n      var _a;\n\n      return ((_a = this.observers) === null || _a === void 0 ? void 0 : _a.length) > 0;\n    }\n  }, {\n    key: \"_trySubscribe\",\n    value: function _trySubscribe(subscriber) {\n      this._throwIfClosed();\n\n      return _get(_getPrototypeOf(Subject.prototype), \"_trySubscribe\", this).call(this, subscriber);\n    }\n  }, {\n    key: \"_subscribe\",\n    value: function _subscribe(subscriber) {\n      this._throwIfClosed();\n\n      this._checkFinalizedStatuses(subscriber);\n\n      return this._innerSubscribe(subscriber);\n    }\n  }, {\n    key: \"_innerSubscribe\",\n    value: function _innerSubscribe(subscriber) {\n      var hasError = this.hasError,\n          isStopped = this.isStopped,\n          observers = this.observers;\n      return hasError || isStopped ? EMPTY_SUBSCRIPTION : (observers.push(subscriber), new Subscription(function () {\n        return arrRemove(observers, subscriber);\n      }));\n    }\n  }, {\n    key: \"_checkFinalizedStatuses\",\n    value: function _checkFinalizedStatuses(subscriber) {\n      var hasError = this.hasError,\n          thrownError = this.thrownError,\n          isStopped = this.isStopped;\n\n      if (hasError) {\n        subscriber.error(thrownError);\n      } else if (isStopped) {\n        subscriber.complete();\n      }\n    }\n  }, {\n    key: \"asObservable\",\n    value: function asObservable() {\n      var observable = new Observable();\n      observable.source = this;\n      return observable;\n    }\n  }]);\n\n  return Subject;\n}(Observable);\n\nSubject.create = function (destination, source) {\n  return new AnonymousSubject(destination, source);\n};\n\nexport var AnonymousSubject = /*#__PURE__*/function (_Subject) {\n  _inherits(AnonymousSubject, _Subject);\n\n  var _super2 = _createSuper(AnonymousSubject);\n\n  function AnonymousSubject(destination, source) {\n    var _this5;\n\n    _classCallCheck(this, AnonymousSubject);\n\n    _this5 = _super2.call(this);\n    _this5.destination = destination;\n    _this5.source = source;\n    return _this5;\n  }\n\n  _createClass(AnonymousSubject, [{\n    key: \"next\",\n    value: function next(value) {\n      var _a, _b;\n\n      (_b = (_a = this.destination) === null || _a === void 0 ? void 0 : _a.next) === null || _b === void 0 ? void 0 : _b.call(_a, value);\n    }\n  }, {\n    key: \"error\",\n    value: function error(err) {\n      var _a, _b;\n\n      (_b = (_a = this.destination) === null || _a === void 0 ? void 0 : _a.error) === null || _b === void 0 ? void 0 : _b.call(_a, err);\n    }\n  }, {\n    key: \"complete\",\n    value: function complete() {\n      var _a, _b;\n\n      (_b = (_a = this.destination) === null || _a === void 0 ? void 0 : _a.complete) === null || _b === void 0 ? void 0 : _b.call(_a);\n    }\n  }, {\n    key: \"_subscribe\",\n    value: function _subscribe(subscriber) {\n      var _a, _b;\n\n      return (_b = (_a = this.source) === null || _a === void 0 ? void 0 : _a.subscribe(subscriber)) !== null && _b !== void 0 ? _b : EMPTY_SUBSCRIPTION;\n    }\n  }]);\n\n  return AnonymousSubject;\n}(Subject);",
  "map": {
    "version": 3,
    "sources": [
      "/home/koda/redhat/kogito-tooling/examples/ping-pong-view-angular/node_modules/rxjs/dist/esm/internal/Subject.js"
    ],
    "names": [
      "Observable",
      "Subscription",
      "EMPTY_SUBSCRIPTION",
      "ObjectUnsubscribedError",
      "arrRemove",
      "errorContext",
      "Subject",
      "closed",
      "observers",
      "isStopped",
      "hasError",
      "thrownError",
      "operator",
      "subject",
      "AnonymousSubject",
      "value",
      "_throwIfClosed",
      "copy",
      "slice",
      "observer",
      "next",
      "err",
      "length",
      "shift",
      "error",
      "complete",
      "_a",
      "subscriber",
      "_checkFinalizedStatuses",
      "_innerSubscribe",
      "push",
      "observable",
      "source",
      "create",
      "destination",
      "_b",
      "call",
      "subscribe"
    ],
    "mappings": "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",
    "sourcesContent": [
      "import { Observable } from './Observable';\nimport { Subscription, EMPTY_SUBSCRIPTION } from './Subscription';\nimport { ObjectUnsubscribedError } from './util/ObjectUnsubscribedError';\nimport { arrRemove } from './util/arrRemove';\nimport { errorContext } from './util/errorContext';\nexport class Subject extends Observable {\n    constructor() {\n        super();\n        this.closed = false;\n        this.observers = [];\n        this.isStopped = false;\n        this.hasError = false;\n        this.thrownError = null;\n    }\n    lift(operator) {\n        const subject = new AnonymousSubject(this, this);\n        subject.operator = operator;\n        return subject;\n    }\n    _throwIfClosed() {\n        if (this.closed) {\n            throw new ObjectUnsubscribedError();\n        }\n    }\n    next(value) {\n        errorContext(() => {\n            this._throwIfClosed();\n            if (!this.isStopped) {\n                const copy = this.observers.slice();\n                for (const observer of copy) {\n                    observer.next(value);\n                }\n            }\n        });\n    }\n    error(err) {\n        errorContext(() => {\n            this._throwIfClosed();\n            if (!this.isStopped) {\n                this.hasError = this.isStopped = true;\n                this.thrownError = err;\n                const { observers } = this;\n                while (observers.length) {\n                    observers.shift().error(err);\n                }\n            }\n        });\n    }\n    complete() {\n        errorContext(() => {\n            this._throwIfClosed();\n            if (!this.isStopped) {\n                this.isStopped = true;\n                const { observers } = this;\n                while (observers.length) {\n                    observers.shift().complete();\n                }\n            }\n        });\n    }\n    unsubscribe() {\n        this.isStopped = this.closed = true;\n        this.observers = null;\n    }\n    get observed() {\n        var _a;\n        return ((_a = this.observers) === null || _a === void 0 ? void 0 : _a.length) > 0;\n    }\n    _trySubscribe(subscriber) {\n        this._throwIfClosed();\n        return super._trySubscribe(subscriber);\n    }\n    _subscribe(subscriber) {\n        this._throwIfClosed();\n        this._checkFinalizedStatuses(subscriber);\n        return this._innerSubscribe(subscriber);\n    }\n    _innerSubscribe(subscriber) {\n        const { hasError, isStopped, observers } = this;\n        return hasError || isStopped\n            ? EMPTY_SUBSCRIPTION\n            : (observers.push(subscriber), new Subscription(() => arrRemove(observers, subscriber)));\n    }\n    _checkFinalizedStatuses(subscriber) {\n        const { hasError, thrownError, isStopped } = this;\n        if (hasError) {\n            subscriber.error(thrownError);\n        }\n        else if (isStopped) {\n            subscriber.complete();\n        }\n    }\n    asObservable() {\n        const observable = new Observable();\n        observable.source = this;\n        return observable;\n    }\n}\nSubject.create = (destination, source) => {\n    return new AnonymousSubject(destination, source);\n};\nexport class AnonymousSubject extends Subject {\n    constructor(destination, source) {\n        super();\n        this.destination = destination;\n        this.source = source;\n    }\n    next(value) {\n        var _a, _b;\n        (_b = (_a = this.destination) === null || _a === void 0 ? void 0 : _a.next) === null || _b === void 0 ? void 0 : _b.call(_a, value);\n    }\n    error(err) {\n        var _a, _b;\n        (_b = (_a = this.destination) === null || _a === void 0 ? void 0 : _a.error) === null || _b === void 0 ? void 0 : _b.call(_a, err);\n    }\n    complete() {\n        var _a, _b;\n        (_b = (_a = this.destination) === null || _a === void 0 ? void 0 : _a.complete) === null || _b === void 0 ? void 0 : _b.call(_a);\n    }\n    _subscribe(subscriber) {\n        var _a, _b;\n        return (_b = (_a = this.source) === null || _a === void 0 ? void 0 : _a.subscribe(subscriber)) !== null && _b !== void 0 ? _b : EMPTY_SUBSCRIPTION;\n    }\n}\n"
    ]
  },
  "metadata": {},
  "sourceType": "module"
}
