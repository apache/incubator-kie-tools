{
  "ast": null,
  "code": "import { observeNotification } from '../Notification';\nimport { operate } from '../util/lift';\nimport { OperatorSubscriber } from './OperatorSubscriber';\nexport function dematerialize() {\n  return operate(function (source, subscriber) {\n    source.subscribe(new OperatorSubscriber(subscriber, function (notification) {\n      return observeNotification(notification, subscriber);\n    }));\n  });\n}",
  "map": {
    "version": 3,
    "sources": [
      "/home/koda/redhat/kogito-tooling/examples/ping-pong-view-angular/node_modules/rxjs/dist/esm/internal/operators/dematerialize.js"
    ],
    "names": [
      "observeNotification",
      "operate",
      "OperatorSubscriber",
      "dematerialize",
      "source",
      "subscriber",
      "subscribe",
      "notification"
    ],
    "mappings": "AAAA,SAASA,mBAAT,QAAoC,iBAApC;AACA,SAASC,OAAT,QAAwB,cAAxB;AACA,SAASC,kBAAT,QAAmC,sBAAnC;AACA,OAAO,SAASC,aAAT,GAAyB;AAC5B,SAAOF,OAAO,CAAC,UAACG,MAAD,EAASC,UAAT,EAAwB;AACnCD,IAAAA,MAAM,CAACE,SAAP,CAAiB,IAAIJ,kBAAJ,CAAuBG,UAAvB,EAAmC,UAACE,YAAD;AAAA,aAAkBP,mBAAmB,CAACO,YAAD,EAAeF,UAAf,CAArC;AAAA,KAAnC,CAAjB;AACH,GAFa,CAAd;AAGH",
    "sourcesContent": [
      "import { observeNotification } from '../Notification';\nimport { operate } from '../util/lift';\nimport { OperatorSubscriber } from './OperatorSubscriber';\nexport function dematerialize() {\n    return operate((source, subscriber) => {\n        source.subscribe(new OperatorSubscriber(subscriber, (notification) => observeNotification(notification, subscriber)));\n    });\n}\n"
    ]
  },
  "metadata": {},
  "sourceType": "module"
}
