{
  "ast": null,
  "code": "import _get from \"/home/koda/redhat/kogito-tooling/node_modules/@angular-devkit/build-angular/node_modules/@babel/runtime/helpers/esm/get.js\";\nimport _getPrototypeOf from \"/home/koda/redhat/kogito-tooling/node_modules/@angular-devkit/build-angular/node_modules/@babel/runtime/helpers/esm/getPrototypeOf.js\";\nimport _classCallCheck from \"/home/koda/redhat/kogito-tooling/node_modules/@angular-devkit/build-angular/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nimport _createClass from \"/home/koda/redhat/kogito-tooling/node_modules/@angular-devkit/build-angular/node_modules/@babel/runtime/helpers/esm/createClass.js\";\nimport _inherits from \"/home/koda/redhat/kogito-tooling/node_modules/@angular-devkit/build-angular/node_modules/@babel/runtime/helpers/esm/inherits.js\";\nimport _createSuper from \"/home/koda/redhat/kogito-tooling/node_modules/@angular-devkit/build-angular/node_modules/@babel/runtime/helpers/esm/createSuper.js\";\nimport { AsyncAction } from './AsyncAction';\nimport { Subscription } from '../Subscription';\nimport { AsyncScheduler } from './AsyncScheduler';\nexport var VirtualTimeScheduler = /*#__PURE__*/function (_AsyncScheduler) {\n  _inherits(VirtualTimeScheduler, _AsyncScheduler);\n\n  var _super = _createSuper(VirtualTimeScheduler);\n\n  function VirtualTimeScheduler() {\n    var _this;\n\n    var schedulerActionCtor = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : VirtualAction;\n    var maxFrames = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : Infinity;\n\n    _classCallCheck(this, VirtualTimeScheduler);\n\n    _this = _super.call(this, schedulerActionCtor, function () {\n      return _this.frame;\n    });\n    _this.maxFrames = maxFrames;\n    _this.frame = 0;\n    _this.index = -1;\n    return _this;\n  }\n\n  _createClass(VirtualTimeScheduler, [{\n    key: \"flush\",\n    value: function flush() {\n      var actions = this.actions,\n          maxFrames = this.maxFrames;\n      var error;\n      var action;\n\n      while ((action = actions[0]) && action.delay <= maxFrames) {\n        actions.shift();\n        this.frame = action.delay;\n\n        if (error = action.execute(action.state, action.delay)) {\n          break;\n        }\n      }\n\n      if (error) {\n        while (action = actions.shift()) {\n          action.unsubscribe();\n        }\n\n        throw error;\n      }\n    }\n  }]);\n\n  return VirtualTimeScheduler;\n}(AsyncScheduler);\nVirtualTimeScheduler.frameTimeFactor = 10;\nexport var VirtualAction = /*#__PURE__*/function (_AsyncAction) {\n  _inherits(VirtualAction, _AsyncAction);\n\n  var _super2 = _createSuper(VirtualAction);\n\n  function VirtualAction(scheduler, work) {\n    var _this2;\n\n    var index = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : scheduler.index += 1;\n\n    _classCallCheck(this, VirtualAction);\n\n    _this2 = _super2.call(this, scheduler, work);\n    _this2.scheduler = scheduler;\n    _this2.work = work;\n    _this2.index = index;\n    _this2.active = true;\n    _this2.index = scheduler.index = index;\n    return _this2;\n  }\n\n  _createClass(VirtualAction, [{\n    key: \"schedule\",\n    value: function schedule(state) {\n      var delay = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n\n      if (Number.isFinite(delay)) {\n        if (!this.id) {\n          return _get(_getPrototypeOf(VirtualAction.prototype), \"schedule\", this).call(this, state, delay);\n        }\n\n        this.active = false;\n        var action = new VirtualAction(this.scheduler, this.work);\n        this.add(action);\n        return action.schedule(state, delay);\n      } else {\n        return Subscription.EMPTY;\n      }\n    }\n  }, {\n    key: \"requestAsyncId\",\n    value: function requestAsyncId(scheduler, id) {\n      var delay = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 0;\n      this.delay = scheduler.frame + delay;\n      var actions = scheduler.actions;\n      actions.push(this);\n      actions.sort(VirtualAction.sortActions);\n      return true;\n    }\n  }, {\n    key: \"recycleAsyncId\",\n    value: function recycleAsyncId(scheduler, id) {\n      var delay = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 0;\n      return undefined;\n    }\n  }, {\n    key: \"_execute\",\n    value: function _execute(state, delay) {\n      if (this.active === true) {\n        return _get(_getPrototypeOf(VirtualAction.prototype), \"_execute\", this).call(this, state, delay);\n      }\n    }\n  }], [{\n    key: \"sortActions\",\n    value: function sortActions(a, b) {\n      if (a.delay === b.delay) {\n        if (a.index === b.index) {\n          return 0;\n        } else if (a.index > b.index) {\n          return 1;\n        } else {\n          return -1;\n        }\n      } else if (a.delay > b.delay) {\n        return 1;\n      } else {\n        return -1;\n      }\n    }\n  }]);\n\n  return VirtualAction;\n}(AsyncAction);",
  "map": {
    "version": 3,
    "sources": [
      "/home/koda/redhat/kogito-tooling/examples/ping-pong-view-angular/node_modules/rxjs/dist/esm/internal/scheduler/VirtualTimeScheduler.js"
    ],
    "names": [
      "AsyncAction",
      "Subscription",
      "AsyncScheduler",
      "VirtualTimeScheduler",
      "schedulerActionCtor",
      "VirtualAction",
      "maxFrames",
      "Infinity",
      "frame",
      "index",
      "actions",
      "error",
      "action",
      "delay",
      "shift",
      "execute",
      "state",
      "unsubscribe",
      "frameTimeFactor",
      "scheduler",
      "work",
      "active",
      "Number",
      "isFinite",
      "id",
      "add",
      "schedule",
      "EMPTY",
      "push",
      "sort",
      "sortActions",
      "undefined",
      "a",
      "b"
    ],
    "mappings": "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",
    "sourcesContent": [
      "import { AsyncAction } from './AsyncAction';\nimport { Subscription } from '../Subscription';\nimport { AsyncScheduler } from './AsyncScheduler';\nexport class VirtualTimeScheduler extends AsyncScheduler {\n    constructor(schedulerActionCtor = VirtualAction, maxFrames = Infinity) {\n        super(schedulerActionCtor, () => this.frame);\n        this.maxFrames = maxFrames;\n        this.frame = 0;\n        this.index = -1;\n    }\n    flush() {\n        const { actions, maxFrames } = this;\n        let error;\n        let action;\n        while ((action = actions[0]) && action.delay <= maxFrames) {\n            actions.shift();\n            this.frame = action.delay;\n            if ((error = action.execute(action.state, action.delay))) {\n                break;\n            }\n        }\n        if (error) {\n            while ((action = actions.shift())) {\n                action.unsubscribe();\n            }\n            throw error;\n        }\n    }\n}\nVirtualTimeScheduler.frameTimeFactor = 10;\nexport class VirtualAction extends AsyncAction {\n    constructor(scheduler, work, index = (scheduler.index += 1)) {\n        super(scheduler, work);\n        this.scheduler = scheduler;\n        this.work = work;\n        this.index = index;\n        this.active = true;\n        this.index = scheduler.index = index;\n    }\n    schedule(state, delay = 0) {\n        if (Number.isFinite(delay)) {\n            if (!this.id) {\n                return super.schedule(state, delay);\n            }\n            this.active = false;\n            const action = new VirtualAction(this.scheduler, this.work);\n            this.add(action);\n            return action.schedule(state, delay);\n        }\n        else {\n            return Subscription.EMPTY;\n        }\n    }\n    requestAsyncId(scheduler, id, delay = 0) {\n        this.delay = scheduler.frame + delay;\n        const { actions } = scheduler;\n        actions.push(this);\n        actions.sort(VirtualAction.sortActions);\n        return true;\n    }\n    recycleAsyncId(scheduler, id, delay = 0) {\n        return undefined;\n    }\n    _execute(state, delay) {\n        if (this.active === true) {\n            return super._execute(state, delay);\n        }\n    }\n    static sortActions(a, b) {\n        if (a.delay === b.delay) {\n            if (a.index === b.index) {\n                return 0;\n            }\n            else if (a.index > b.index) {\n                return 1;\n            }\n            else {\n                return -1;\n            }\n        }\n        else if (a.delay > b.delay) {\n            return 1;\n        }\n        else {\n            return -1;\n        }\n    }\n}\n"
    ]
  },
  "metadata": {},
  "sourceType": "module"
}
