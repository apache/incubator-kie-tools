{
  "ast": null,
  "code": "import { ArgumentOutOfRangeError } from '../util/ArgumentOutOfRangeError';\nimport { filter } from './filter';\nimport { throwIfEmpty } from './throwIfEmpty';\nimport { defaultIfEmpty } from './defaultIfEmpty';\nimport { take } from './take';\nexport function elementAt(index, defaultValue) {\n  if (index < 0) {\n    throw new ArgumentOutOfRangeError();\n  }\n\n  var hasDefaultValue = arguments.length >= 2;\n  return function (source) {\n    return source.pipe(filter(function (v, i) {\n      return i === index;\n    }), take(1), hasDefaultValue ? defaultIfEmpty(defaultValue) : throwIfEmpty(function () {\n      return new ArgumentOutOfRangeError();\n    }));\n  };\n}",
  "map": {
    "version": 3,
    "sources": [
      "/home/koda/redhat/kogito-tooling/examples/ping-pong-view-angular/node_modules/rxjs/dist/esm/internal/operators/elementAt.js"
    ],
    "names": [
      "ArgumentOutOfRangeError",
      "filter",
      "throwIfEmpty",
      "defaultIfEmpty",
      "take",
      "elementAt",
      "index",
      "defaultValue",
      "hasDefaultValue",
      "arguments",
      "length",
      "source",
      "pipe",
      "v",
      "i"
    ],
    "mappings": "AAAA,SAASA,uBAAT,QAAwC,iCAAxC;AACA,SAASC,MAAT,QAAuB,UAAvB;AACA,SAASC,YAAT,QAA6B,gBAA7B;AACA,SAASC,cAAT,QAA+B,kBAA/B;AACA,SAASC,IAAT,QAAqB,QAArB;AACA,OAAO,SAASC,SAAT,CAAmBC,KAAnB,EAA0BC,YAA1B,EAAwC;AAC3C,MAAID,KAAK,GAAG,CAAZ,EAAe;AACX,UAAM,IAAIN,uBAAJ,EAAN;AACH;;AACD,MAAMQ,eAAe,GAAGC,SAAS,CAACC,MAAV,IAAoB,CAA5C;AACA,SAAO,UAACC,MAAD;AAAA,WAAYA,MAAM,CAACC,IAAP,CAAYX,MAAM,CAAC,UAACY,CAAD,EAAIC,CAAJ;AAAA,aAAUA,CAAC,KAAKR,KAAhB;AAAA,KAAD,CAAlB,EAA2CF,IAAI,CAAC,CAAD,CAA/C,EAAoDI,eAAe,GAAGL,cAAc,CAACI,YAAD,CAAjB,GAAkCL,YAAY,CAAC;AAAA,aAAM,IAAIF,uBAAJ,EAAN;AAAA,KAAD,CAAjH,CAAZ;AAAA,GAAP;AACH",
    "sourcesContent": [
      "import { ArgumentOutOfRangeError } from '../util/ArgumentOutOfRangeError';\nimport { filter } from './filter';\nimport { throwIfEmpty } from './throwIfEmpty';\nimport { defaultIfEmpty } from './defaultIfEmpty';\nimport { take } from './take';\nexport function elementAt(index, defaultValue) {\n    if (index < 0) {\n        throw new ArgumentOutOfRangeError();\n    }\n    const hasDefaultValue = arguments.length >= 2;\n    return (source) => source.pipe(filter((v, i) => i === index), take(1), hasDefaultValue ? defaultIfEmpty(defaultValue) : throwIfEmpty(() => new ArgumentOutOfRangeError()));\n}\n"
    ]
  },
  "metadata": {},
  "sourceType": "module"
}
