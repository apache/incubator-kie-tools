{
  "ast": null,
  "code": "import _classCallCheck from \"/home/koda/redhat/kogito-tooling/node_modules/@angular-devkit/build-angular/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nimport _createClass from \"/home/koda/redhat/kogito-tooling/node_modules/@angular-devkit/build-angular/node_modules/@babel/runtime/helpers/esm/createClass.js\";\nimport { EMPTY } from './observable/empty';\nimport { of } from './observable/of';\nimport { throwError } from './observable/throwError';\nimport { isFunction } from './util/isFunction';\nexport var NotificationKind;\n\n(function (NotificationKind) {\n  NotificationKind[\"NEXT\"] = \"N\";\n  NotificationKind[\"ERROR\"] = \"E\";\n  NotificationKind[\"COMPLETE\"] = \"C\";\n})(NotificationKind || (NotificationKind = {}));\n\nexport var Notification = /*#__PURE__*/function () {\n  function Notification(kind, value, error) {\n    _classCallCheck(this, Notification);\n\n    this.kind = kind;\n    this.value = value;\n    this.error = error;\n    this.hasValue = kind === 'N';\n  }\n\n  _createClass(Notification, [{\n    key: \"observe\",\n    value: function observe(observer) {\n      return observeNotification(this, observer);\n    }\n  }, {\n    key: \"do\",\n    value: function _do(nextHandler, errorHandler, completeHandler) {\n      var kind = this.kind,\n          value = this.value,\n          error = this.error;\n      return kind === 'N' ? nextHandler === null || nextHandler === void 0 ? void 0 : nextHandler(value) : kind === 'E' ? errorHandler === null || errorHandler === void 0 ? void 0 : errorHandler(error) : completeHandler === null || completeHandler === void 0 ? void 0 : completeHandler();\n    }\n  }, {\n    key: \"accept\",\n    value: function accept(nextOrObserver, error, complete) {\n      var _a;\n\n      return isFunction((_a = nextOrObserver) === null || _a === void 0 ? void 0 : _a.next) ? this.observe(nextOrObserver) : this.do(nextOrObserver, error, complete);\n    }\n  }, {\n    key: \"toObservable\",\n    value: function toObservable() {\n      var kind = this.kind,\n          value = this.value,\n          error = this.error;\n      var result = kind === 'N' ? of(value) : kind === 'E' ? throwError(function () {\n        return error;\n      }) : kind === 'C' ? EMPTY : 0;\n\n      if (!result) {\n        throw new TypeError(\"Unexpected notification kind \".concat(kind));\n      }\n\n      return result;\n    }\n  }], [{\n    key: \"createNext\",\n    value: function createNext(value) {\n      return new Notification('N', value);\n    }\n  }, {\n    key: \"createError\",\n    value: function createError(err) {\n      return new Notification('E', undefined, err);\n    }\n  }, {\n    key: \"createComplete\",\n    value: function createComplete() {\n      return Notification.completeNotification;\n    }\n  }]);\n\n  return Notification;\n}();\nNotification.completeNotification = new Notification('C');\nexport function observeNotification(notification, observer) {\n  var _a, _b, _c;\n\n  var kind = notification.kind,\n      value = notification.value,\n      error = notification.error;\n\n  if (typeof kind !== 'string') {\n    throw new TypeError('Invalid notification, missing \"kind\"');\n  }\n\n  kind === 'N' ? (_a = observer.next) === null || _a === void 0 ? void 0 : _a.call(observer, value) : kind === 'E' ? (_b = observer.error) === null || _b === void 0 ? void 0 : _b.call(observer, error) : (_c = observer.complete) === null || _c === void 0 ? void 0 : _c.call(observer);\n}",
  "map": {
    "version": 3,
    "sources": [
      "/home/koda/redhat/kogito-tooling/examples/ping-pong-view-angular/node_modules/rxjs/dist/esm/internal/Notification.js"
    ],
    "names": [
      "EMPTY",
      "of",
      "throwError",
      "isFunction",
      "NotificationKind",
      "Notification",
      "kind",
      "value",
      "error",
      "hasValue",
      "observer",
      "observeNotification",
      "nextHandler",
      "errorHandler",
      "completeHandler",
      "nextOrObserver",
      "complete",
      "_a",
      "next",
      "observe",
      "do",
      "result",
      "TypeError",
      "err",
      "undefined",
      "completeNotification",
      "notification",
      "_b",
      "_c",
      "call"
    ],
    "mappings": "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",
    "sourcesContent": [
      "import { EMPTY } from './observable/empty';\nimport { of } from './observable/of';\nimport { throwError } from './observable/throwError';\nimport { isFunction } from './util/isFunction';\nexport var NotificationKind;\n(function (NotificationKind) {\n    NotificationKind[\"NEXT\"] = \"N\";\n    NotificationKind[\"ERROR\"] = \"E\";\n    NotificationKind[\"COMPLETE\"] = \"C\";\n})(NotificationKind || (NotificationKind = {}));\nexport class Notification {\n    constructor(kind, value, error) {\n        this.kind = kind;\n        this.value = value;\n        this.error = error;\n        this.hasValue = kind === 'N';\n    }\n    observe(observer) {\n        return observeNotification(this, observer);\n    }\n    do(nextHandler, errorHandler, completeHandler) {\n        const { kind, value, error } = this;\n        return kind === 'N' ? nextHandler === null || nextHandler === void 0 ? void 0 : nextHandler(value) : kind === 'E' ? errorHandler === null || errorHandler === void 0 ? void 0 : errorHandler(error) : completeHandler === null || completeHandler === void 0 ? void 0 : completeHandler();\n    }\n    accept(nextOrObserver, error, complete) {\n        var _a;\n        return isFunction((_a = nextOrObserver) === null || _a === void 0 ? void 0 : _a.next)\n            ? this.observe(nextOrObserver)\n            : this.do(nextOrObserver, error, complete);\n    }\n    toObservable() {\n        const { kind, value, error } = this;\n        const result = kind === 'N'\n            ?\n                of(value)\n            :\n                kind === 'E'\n                    ?\n                        throwError(() => error)\n                    :\n                        kind === 'C'\n                            ?\n                                EMPTY\n                            :\n                                0;\n        if (!result) {\n            throw new TypeError(`Unexpected notification kind ${kind}`);\n        }\n        return result;\n    }\n    static createNext(value) {\n        return new Notification('N', value);\n    }\n    static createError(err) {\n        return new Notification('E', undefined, err);\n    }\n    static createComplete() {\n        return Notification.completeNotification;\n    }\n}\nNotification.completeNotification = new Notification('C');\nexport function observeNotification(notification, observer) {\n    var _a, _b, _c;\n    const { kind, value, error } = notification;\n    if (typeof kind !== 'string') {\n        throw new TypeError('Invalid notification, missing \"kind\"');\n    }\n    kind === 'N' ? (_a = observer.next) === null || _a === void 0 ? void 0 : _a.call(observer, value) : kind === 'E' ? (_b = observer.error) === null || _b === void 0 ? void 0 : _b.call(observer, error) : (_c = observer.complete) === null || _c === void 0 ? void 0 : _c.call(observer);\n}\n"
    ]
  },
  "metadata": {},
  "sourceType": "module"
}
