{
  "ast": null,
  "code": "import { operate } from '../util/lift';\nimport { OperatorSubscriber } from './OperatorSubscriber';\nexport function pairwise() {\n  return operate(function (source, subscriber) {\n    var prev;\n    var hasPrev = false;\n    source.subscribe(new OperatorSubscriber(subscriber, function (value) {\n      var p = prev;\n      prev = value;\n      hasPrev && subscriber.next([p, value]);\n      hasPrev = true;\n    }));\n  });\n}",
  "map": {
    "version": 3,
    "sources": [
      "/home/koda/redhat/kogito-tooling/examples/ping-pong-view-angular/node_modules/rxjs/dist/esm/internal/operators/pairwise.js"
    ],
    "names": [
      "operate",
      "OperatorSubscriber",
      "pairwise",
      "source",
      "subscriber",
      "prev",
      "hasPrev",
      "subscribe",
      "value",
      "p",
      "next"
    ],
    "mappings": "AAAA,SAASA,OAAT,QAAwB,cAAxB;AACA,SAASC,kBAAT,QAAmC,sBAAnC;AACA,OAAO,SAASC,QAAT,GAAoB;AACvB,SAAOF,OAAO,CAAC,UAACG,MAAD,EAASC,UAAT,EAAwB;AACnC,QAAIC,IAAJ;AACA,QAAIC,OAAO,GAAG,KAAd;AACAH,IAAAA,MAAM,CAACI,SAAP,CAAiB,IAAIN,kBAAJ,CAAuBG,UAAvB,EAAmC,UAACI,KAAD,EAAW;AAC3D,UAAMC,CAAC,GAAGJ,IAAV;AACAA,MAAAA,IAAI,GAAGG,KAAP;AACAF,MAAAA,OAAO,IAAIF,UAAU,CAACM,IAAX,CAAgB,CAACD,CAAD,EAAID,KAAJ,CAAhB,CAAX;AACAF,MAAAA,OAAO,GAAG,IAAV;AACH,KALgB,CAAjB;AAMH,GATa,CAAd;AAUH",
    "sourcesContent": [
      "import { operate } from '../util/lift';\nimport { OperatorSubscriber } from './OperatorSubscriber';\nexport function pairwise() {\n    return operate((source, subscriber) => {\n        let prev;\n        let hasPrev = false;\n        source.subscribe(new OperatorSubscriber(subscriber, (value) => {\n            const p = prev;\n            prev = value;\n            hasPrev && subscriber.next([p, value]);\n            hasPrev = true;\n        }));\n    });\n}\n"
    ]
  },
  "metadata": {},
  "sourceType": "module"
}
