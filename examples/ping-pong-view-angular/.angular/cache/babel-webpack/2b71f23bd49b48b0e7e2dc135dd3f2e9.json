{
  "ast": null,
  "code": "import { EmptyError } from '../util/EmptyError';\nimport { filter } from './filter';\nimport { take } from './take';\nimport { defaultIfEmpty } from './defaultIfEmpty';\nimport { throwIfEmpty } from './throwIfEmpty';\nimport { identity } from '../util/identity';\nexport function first(predicate, defaultValue) {\n  var hasDefaultValue = arguments.length >= 2;\n  return function (source) {\n    return source.pipe(predicate ? filter(function (v, i) {\n      return predicate(v, i, source);\n    }) : identity, take(1), hasDefaultValue ? defaultIfEmpty(defaultValue) : throwIfEmpty(function () {\n      return new EmptyError();\n    }));\n  };\n}",
  "map": {
    "version": 3,
    "sources": [
      "/home/koda/redhat/kogito-tooling/examples/ping-pong-view-angular/node_modules/rxjs/dist/esm/internal/operators/first.js"
    ],
    "names": [
      "EmptyError",
      "filter",
      "take",
      "defaultIfEmpty",
      "throwIfEmpty",
      "identity",
      "first",
      "predicate",
      "defaultValue",
      "hasDefaultValue",
      "arguments",
      "length",
      "source",
      "pipe",
      "v",
      "i"
    ],
    "mappings": "AAAA,SAASA,UAAT,QAA2B,oBAA3B;AACA,SAASC,MAAT,QAAuB,UAAvB;AACA,SAASC,IAAT,QAAqB,QAArB;AACA,SAASC,cAAT,QAA+B,kBAA/B;AACA,SAASC,YAAT,QAA6B,gBAA7B;AACA,SAASC,QAAT,QAAyB,kBAAzB;AACA,OAAO,SAASC,KAAT,CAAeC,SAAf,EAA0BC,YAA1B,EAAwC;AAC3C,MAAMC,eAAe,GAAGC,SAAS,CAACC,MAAV,IAAoB,CAA5C;AACA,SAAO,UAACC,MAAD;AAAA,WAAYA,MAAM,CAACC,IAAP,CAAYN,SAAS,GAAGN,MAAM,CAAC,UAACa,CAAD,EAAIC,CAAJ;AAAA,aAAUR,SAAS,CAACO,CAAD,EAAIC,CAAJ,EAAOH,MAAP,CAAnB;AAAA,KAAD,CAAT,GAA+CP,QAApE,EAA8EH,IAAI,CAAC,CAAD,CAAlF,EAAuFO,eAAe,GAAGN,cAAc,CAACK,YAAD,CAAjB,GAAkCJ,YAAY,CAAC;AAAA,aAAM,IAAIJ,UAAJ,EAAN;AAAA,KAAD,CAApJ,CAAZ;AAAA,GAAP;AACH",
    "sourcesContent": [
      "import { EmptyError } from '../util/EmptyError';\nimport { filter } from './filter';\nimport { take } from './take';\nimport { defaultIfEmpty } from './defaultIfEmpty';\nimport { throwIfEmpty } from './throwIfEmpty';\nimport { identity } from '../util/identity';\nexport function first(predicate, defaultValue) {\n    const hasDefaultValue = arguments.length >= 2;\n    return (source) => source.pipe(predicate ? filter((v, i) => predicate(v, i, source)) : identity, take(1), hasDefaultValue ? defaultIfEmpty(defaultValue) : throwIfEmpty(() => new EmptyError()));\n}\n"
    ]
  },
  "metadata": {},
  "sourceType": "module"
}
