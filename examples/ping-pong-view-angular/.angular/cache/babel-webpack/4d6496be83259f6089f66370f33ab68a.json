{
  "ast": null,
  "code": "import { EMPTY } from '../observable/empty';\nimport { operate } from '../util/lift';\nimport { OperatorSubscriber } from './OperatorSubscriber';\nexport function take(count) {\n  return count <= 0 ? function () {\n    return EMPTY;\n  } : operate(function (source, subscriber) {\n    var seen = 0;\n    source.subscribe(new OperatorSubscriber(subscriber, function (value) {\n      if (++seen <= count) {\n        subscriber.next(value);\n\n        if (count <= seen) {\n          subscriber.complete();\n        }\n      }\n    }));\n  });\n}",
  "map": {
    "version": 3,
    "sources": [
      "/home/koda/redhat/kogito-tooling/examples/ping-pong-view-angular/node_modules/rxjs/dist/esm/internal/operators/take.js"
    ],
    "names": [
      "EMPTY",
      "operate",
      "OperatorSubscriber",
      "take",
      "count",
      "source",
      "subscriber",
      "seen",
      "subscribe",
      "value",
      "next",
      "complete"
    ],
    "mappings": "AAAA,SAASA,KAAT,QAAsB,qBAAtB;AACA,SAASC,OAAT,QAAwB,cAAxB;AACA,SAASC,kBAAT,QAAmC,sBAAnC;AACA,OAAO,SAASC,IAAT,CAAcC,KAAd,EAAqB;AACxB,SAAOA,KAAK,IAAI,CAAT,GAEC;AAAA,WAAMJ,KAAN;AAAA,GAFD,GAGDC,OAAO,CAAC,UAACI,MAAD,EAASC,UAAT,EAAwB;AAC9B,QAAIC,IAAI,GAAG,CAAX;AACAF,IAAAA,MAAM,CAACG,SAAP,CAAiB,IAAIN,kBAAJ,CAAuBI,UAAvB,EAAmC,UAACG,KAAD,EAAW;AAC3D,UAAI,EAAEF,IAAF,IAAUH,KAAd,EAAqB;AACjBE,QAAAA,UAAU,CAACI,IAAX,CAAgBD,KAAhB;;AACA,YAAIL,KAAK,IAAIG,IAAb,EAAmB;AACfD,UAAAA,UAAU,CAACK,QAAX;AACH;AACJ;AACJ,KAPgB,CAAjB;AAQH,GAVQ,CAHb;AAcH",
    "sourcesContent": [
      "import { EMPTY } from '../observable/empty';\nimport { operate } from '../util/lift';\nimport { OperatorSubscriber } from './OperatorSubscriber';\nexport function take(count) {\n    return count <= 0\n        ?\n            () => EMPTY\n        : operate((source, subscriber) => {\n            let seen = 0;\n            source.subscribe(new OperatorSubscriber(subscriber, (value) => {\n                if (++seen <= count) {\n                    subscriber.next(value);\n                    if (count <= seen) {\n                        subscriber.complete();\n                    }\n                }\n            }));\n        });\n}\n"
    ]
  },
  "metadata": {},
  "sourceType": "module"
}
