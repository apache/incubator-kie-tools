{
  "ast": null,
  "code": "import { innerFrom } from '../observable/innerFrom';\nimport { operate } from '../util/lift';\nimport { OperatorSubscriber } from './OperatorSubscriber';\nexport function switchMap(project, resultSelector) {\n  return operate(function (source, subscriber) {\n    var innerSubscriber = null;\n    var index = 0;\n    var isComplete = false;\n\n    var checkComplete = function checkComplete() {\n      return isComplete && !innerSubscriber && subscriber.complete();\n    };\n\n    source.subscribe(new OperatorSubscriber(subscriber, function (value) {\n      innerSubscriber === null || innerSubscriber === void 0 ? void 0 : innerSubscriber.unsubscribe();\n      var innerIndex = 0;\n      var outerIndex = index++;\n      innerFrom(project(value, outerIndex)).subscribe(innerSubscriber = new OperatorSubscriber(subscriber, function (innerValue) {\n        return subscriber.next(resultSelector ? resultSelector(value, innerValue, outerIndex, innerIndex++) : innerValue);\n      }, function () {\n        innerSubscriber = null;\n        checkComplete();\n      }));\n    }, function () {\n      isComplete = true;\n      checkComplete();\n    }));\n  });\n}",
  "map": {
    "version": 3,
    "sources": [
      "/home/koda/redhat/kogito-tooling/examples/ping-pong-view-angular/node_modules/rxjs/dist/esm/internal/operators/switchMap.js"
    ],
    "names": [
      "innerFrom",
      "operate",
      "OperatorSubscriber",
      "switchMap",
      "project",
      "resultSelector",
      "source",
      "subscriber",
      "innerSubscriber",
      "index",
      "isComplete",
      "checkComplete",
      "complete",
      "subscribe",
      "value",
      "unsubscribe",
      "innerIndex",
      "outerIndex",
      "innerValue",
      "next"
    ],
    "mappings": "AAAA,SAASA,SAAT,QAA0B,yBAA1B;AACA,SAASC,OAAT,QAAwB,cAAxB;AACA,SAASC,kBAAT,QAAmC,sBAAnC;AACA,OAAO,SAASC,SAAT,CAAmBC,OAAnB,EAA4BC,cAA5B,EAA4C;AAC/C,SAAOJ,OAAO,CAAC,UAACK,MAAD,EAASC,UAAT,EAAwB;AACnC,QAAIC,eAAe,GAAG,IAAtB;AACA,QAAIC,KAAK,GAAG,CAAZ;AACA,QAAIC,UAAU,GAAG,KAAjB;;AACA,QAAMC,aAAa,GAAG,SAAhBA,aAAgB;AAAA,aAAMD,UAAU,IAAI,CAACF,eAAf,IAAkCD,UAAU,CAACK,QAAX,EAAxC;AAAA,KAAtB;;AACAN,IAAAA,MAAM,CAACO,SAAP,CAAiB,IAAIX,kBAAJ,CAAuBK,UAAvB,EAAmC,UAACO,KAAD,EAAW;AAC3DN,MAAAA,eAAe,KAAK,IAApB,IAA4BA,eAAe,KAAK,KAAK,CAArD,GAAyD,KAAK,CAA9D,GAAkEA,eAAe,CAACO,WAAhB,EAAlE;AACA,UAAIC,UAAU,GAAG,CAAjB;AACA,UAAMC,UAAU,GAAGR,KAAK,EAAxB;AACAT,MAAAA,SAAS,CAACI,OAAO,CAACU,KAAD,EAAQG,UAAR,CAAR,CAAT,CAAsCJ,SAAtC,CAAiDL,eAAe,GAAG,IAAIN,kBAAJ,CAAuBK,UAAvB,EAAmC,UAACW,UAAD;AAAA,eAAgBX,UAAU,CAACY,IAAX,CAAgBd,cAAc,GAAGA,cAAc,CAACS,KAAD,EAAQI,UAAR,EAAoBD,UAApB,EAAgCD,UAAU,EAA1C,CAAjB,GAAiEE,UAA/F,CAAhB;AAAA,OAAnC,EAA+J,YAAM;AACpOV,QAAAA,eAAe,GAAG,IAAlB;AACAG,QAAAA,aAAa;AAChB,OAHkE,CAAnE;AAIH,KARgB,EAQd,YAAM;AACLD,MAAAA,UAAU,GAAG,IAAb;AACAC,MAAAA,aAAa;AAChB,KAXgB,CAAjB;AAYH,GAjBa,CAAd;AAkBH",
    "sourcesContent": [
      "import { innerFrom } from '../observable/innerFrom';\nimport { operate } from '../util/lift';\nimport { OperatorSubscriber } from './OperatorSubscriber';\nexport function switchMap(project, resultSelector) {\n    return operate((source, subscriber) => {\n        let innerSubscriber = null;\n        let index = 0;\n        let isComplete = false;\n        const checkComplete = () => isComplete && !innerSubscriber && subscriber.complete();\n        source.subscribe(new OperatorSubscriber(subscriber, (value) => {\n            innerSubscriber === null || innerSubscriber === void 0 ? void 0 : innerSubscriber.unsubscribe();\n            let innerIndex = 0;\n            const outerIndex = index++;\n            innerFrom(project(value, outerIndex)).subscribe((innerSubscriber = new OperatorSubscriber(subscriber, (innerValue) => subscriber.next(resultSelector ? resultSelector(value, innerValue, outerIndex, innerIndex++) : innerValue), () => {\n                innerSubscriber = null;\n                checkComplete();\n            })));\n        }, () => {\n            isComplete = true;\n            checkComplete();\n        }));\n    });\n}\n"
    ]
  },
  "metadata": {},
  "sourceType": "module"
}
