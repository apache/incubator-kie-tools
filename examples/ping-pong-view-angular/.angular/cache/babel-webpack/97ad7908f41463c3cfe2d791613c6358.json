{
  "ast": null,
  "code": "import { Observable } from '../../Observable';\nimport { Subscription } from '../../Subscription';\nimport { performanceTimestampProvider } from '../../scheduler/performanceTimestampProvider';\nimport { animationFrameProvider } from '../../scheduler/animationFrameProvider';\nexport function animationFrames(timestampProvider) {\n  return timestampProvider ? animationFramesFactory(timestampProvider) : DEFAULT_ANIMATION_FRAMES;\n}\n\nfunction animationFramesFactory(timestampProvider) {\n  var schedule = animationFrameProvider.schedule;\n  return new Observable(function (subscriber) {\n    var subscription = new Subscription();\n    var provider = timestampProvider || performanceTimestampProvider;\n    var start = provider.now();\n\n    var run = function run(timestamp) {\n      var now = provider.now();\n      subscriber.next({\n        timestamp: timestampProvider ? now : timestamp,\n        elapsed: now - start\n      });\n\n      if (!subscriber.closed) {\n        subscription.add(schedule(run));\n      }\n    };\n\n    subscription.add(schedule(run));\n    return subscription;\n  });\n}\n\nvar DEFAULT_ANIMATION_FRAMES = animationFramesFactory();",
  "map": {
    "version": 3,
    "sources": [
      "/home/koda/redhat/kogito-tooling/examples/ping-pong-view-angular/node_modules/rxjs/dist/esm/internal/observable/dom/animationFrames.js"
    ],
    "names": [
      "Observable",
      "Subscription",
      "performanceTimestampProvider",
      "animationFrameProvider",
      "animationFrames",
      "timestampProvider",
      "animationFramesFactory",
      "DEFAULT_ANIMATION_FRAMES",
      "schedule",
      "subscriber",
      "subscription",
      "provider",
      "start",
      "now",
      "run",
      "timestamp",
      "next",
      "elapsed",
      "closed",
      "add"
    ],
    "mappings": "AAAA,SAASA,UAAT,QAA2B,kBAA3B;AACA,SAASC,YAAT,QAA6B,oBAA7B;AACA,SAASC,4BAAT,QAA6C,8CAA7C;AACA,SAASC,sBAAT,QAAuC,wCAAvC;AACA,OAAO,SAASC,eAAT,CAAyBC,iBAAzB,EAA4C;AAC/C,SAAOA,iBAAiB,GAAGC,sBAAsB,CAACD,iBAAD,CAAzB,GAA+CE,wBAAvE;AACH;;AACD,SAASD,sBAAT,CAAgCD,iBAAhC,EAAmD;AAC/C,MAAQG,QAAR,GAAqBL,sBAArB,CAAQK,QAAR;AACA,SAAO,IAAIR,UAAJ,CAAe,UAAAS,UAAU,EAAI;AAChC,QAAMC,YAAY,GAAG,IAAIT,YAAJ,EAArB;AACA,QAAMU,QAAQ,GAAGN,iBAAiB,IAAIH,4BAAtC;AACA,QAAMU,KAAK,GAAGD,QAAQ,CAACE,GAAT,EAAd;;AACA,QAAMC,GAAG,GAAG,SAANA,GAAM,CAACC,SAAD,EAAe;AACvB,UAAMF,GAAG,GAAGF,QAAQ,CAACE,GAAT,EAAZ;AACAJ,MAAAA,UAAU,CAACO,IAAX,CAAgB;AACZD,QAAAA,SAAS,EAAEV,iBAAiB,GAAGQ,GAAH,GAASE,SADzB;AAEZE,QAAAA,OAAO,EAAEJ,GAAG,GAAGD;AAFH,OAAhB;;AAIA,UAAI,CAACH,UAAU,CAACS,MAAhB,EAAwB;AACpBR,QAAAA,YAAY,CAACS,GAAb,CAAiBX,QAAQ,CAACM,GAAD,CAAzB;AACH;AACJ,KATD;;AAUAJ,IAAAA,YAAY,CAACS,GAAb,CAAiBX,QAAQ,CAACM,GAAD,CAAzB;AACA,WAAOJ,YAAP;AACH,GAhBM,CAAP;AAiBH;;AACD,IAAMH,wBAAwB,GAAGD,sBAAsB,EAAvD",
    "sourcesContent": [
      "import { Observable } from '../../Observable';\nimport { Subscription } from '../../Subscription';\nimport { performanceTimestampProvider } from '../../scheduler/performanceTimestampProvider';\nimport { animationFrameProvider } from '../../scheduler/animationFrameProvider';\nexport function animationFrames(timestampProvider) {\n    return timestampProvider ? animationFramesFactory(timestampProvider) : DEFAULT_ANIMATION_FRAMES;\n}\nfunction animationFramesFactory(timestampProvider) {\n    const { schedule } = animationFrameProvider;\n    return new Observable(subscriber => {\n        const subscription = new Subscription();\n        const provider = timestampProvider || performanceTimestampProvider;\n        const start = provider.now();\n        const run = (timestamp) => {\n            const now = provider.now();\n            subscriber.next({\n                timestamp: timestampProvider ? now : timestamp,\n                elapsed: now - start\n            });\n            if (!subscriber.closed) {\n                subscription.add(schedule(run));\n            }\n        };\n        subscription.add(schedule(run));\n        return subscription;\n    });\n}\nconst DEFAULT_ANIMATION_FRAMES = animationFramesFactory();\n"
    ]
  },
  "metadata": {},
  "sourceType": "module"
}
