{
  "ast": null,
  "code": "import { operate } from '../util/lift';\nimport { noop } from '../util/noop';\nimport { OperatorSubscriber } from './OperatorSubscriber';\nimport { innerFrom } from '../observable/innerFrom';\nexport function debounce(durationSelector) {\n  return operate(function (source, subscriber) {\n    var hasValue = false;\n    var lastValue = null;\n    var durationSubscriber = null;\n\n    var emit = function emit() {\n      durationSubscriber === null || durationSubscriber === void 0 ? void 0 : durationSubscriber.unsubscribe();\n      durationSubscriber = null;\n\n      if (hasValue) {\n        hasValue = false;\n        var value = lastValue;\n        lastValue = null;\n        subscriber.next(value);\n      }\n    };\n\n    source.subscribe(new OperatorSubscriber(subscriber, function (value) {\n      durationSubscriber === null || durationSubscriber === void 0 ? void 0 : durationSubscriber.unsubscribe();\n      hasValue = true;\n      lastValue = value;\n      durationSubscriber = new OperatorSubscriber(subscriber, emit, noop);\n      innerFrom(durationSelector(value)).subscribe(durationSubscriber);\n    }, function () {\n      emit();\n      subscriber.complete();\n    }, undefined, function () {\n      lastValue = durationSubscriber = null;\n    }));\n  });\n}",
  "map": {
    "version": 3,
    "sources": [
      "/home/koda/redhat/kogito-tooling/examples/ping-pong-view-angular/node_modules/rxjs/dist/esm/internal/operators/debounce.js"
    ],
    "names": [
      "operate",
      "noop",
      "OperatorSubscriber",
      "innerFrom",
      "debounce",
      "durationSelector",
      "source",
      "subscriber",
      "hasValue",
      "lastValue",
      "durationSubscriber",
      "emit",
      "unsubscribe",
      "value",
      "next",
      "subscribe",
      "complete",
      "undefined"
    ],
    "mappings": "AAAA,SAASA,OAAT,QAAwB,cAAxB;AACA,SAASC,IAAT,QAAqB,cAArB;AACA,SAASC,kBAAT,QAAmC,sBAAnC;AACA,SAASC,SAAT,QAA0B,yBAA1B;AACA,OAAO,SAASC,QAAT,CAAkBC,gBAAlB,EAAoC;AACvC,SAAOL,OAAO,CAAC,UAACM,MAAD,EAASC,UAAT,EAAwB;AACnC,QAAIC,QAAQ,GAAG,KAAf;AACA,QAAIC,SAAS,GAAG,IAAhB;AACA,QAAIC,kBAAkB,GAAG,IAAzB;;AACA,QAAMC,IAAI,GAAG,SAAPA,IAAO,GAAM;AACfD,MAAAA,kBAAkB,KAAK,IAAvB,IAA+BA,kBAAkB,KAAK,KAAK,CAA3D,GAA+D,KAAK,CAApE,GAAwEA,kBAAkB,CAACE,WAAnB,EAAxE;AACAF,MAAAA,kBAAkB,GAAG,IAArB;;AACA,UAAIF,QAAJ,EAAc;AACVA,QAAAA,QAAQ,GAAG,KAAX;AACA,YAAMK,KAAK,GAAGJ,SAAd;AACAA,QAAAA,SAAS,GAAG,IAAZ;AACAF,QAAAA,UAAU,CAACO,IAAX,CAAgBD,KAAhB;AACH;AACJ,KATD;;AAUAP,IAAAA,MAAM,CAACS,SAAP,CAAiB,IAAIb,kBAAJ,CAAuBK,UAAvB,EAAmC,UAACM,KAAD,EAAW;AAC3DH,MAAAA,kBAAkB,KAAK,IAAvB,IAA+BA,kBAAkB,KAAK,KAAK,CAA3D,GAA+D,KAAK,CAApE,GAAwEA,kBAAkB,CAACE,WAAnB,EAAxE;AACAJ,MAAAA,QAAQ,GAAG,IAAX;AACAC,MAAAA,SAAS,GAAGI,KAAZ;AACAH,MAAAA,kBAAkB,GAAG,IAAIR,kBAAJ,CAAuBK,UAAvB,EAAmCI,IAAnC,EAAyCV,IAAzC,CAArB;AACAE,MAAAA,SAAS,CAACE,gBAAgB,CAACQ,KAAD,CAAjB,CAAT,CAAmCE,SAAnC,CAA6CL,kBAA7C;AACH,KANgB,EAMd,YAAM;AACLC,MAAAA,IAAI;AACJJ,MAAAA,UAAU,CAACS,QAAX;AACH,KATgB,EASdC,SATc,EASH,YAAM;AAChBR,MAAAA,SAAS,GAAGC,kBAAkB,GAAG,IAAjC;AACH,KAXgB,CAAjB;AAYH,GA1Ba,CAAd;AA2BH",
    "sourcesContent": [
      "import { operate } from '../util/lift';\nimport { noop } from '../util/noop';\nimport { OperatorSubscriber } from './OperatorSubscriber';\nimport { innerFrom } from '../observable/innerFrom';\nexport function debounce(durationSelector) {\n    return operate((source, subscriber) => {\n        let hasValue = false;\n        let lastValue = null;\n        let durationSubscriber = null;\n        const emit = () => {\n            durationSubscriber === null || durationSubscriber === void 0 ? void 0 : durationSubscriber.unsubscribe();\n            durationSubscriber = null;\n            if (hasValue) {\n                hasValue = false;\n                const value = lastValue;\n                lastValue = null;\n                subscriber.next(value);\n            }\n        };\n        source.subscribe(new OperatorSubscriber(subscriber, (value) => {\n            durationSubscriber === null || durationSubscriber === void 0 ? void 0 : durationSubscriber.unsubscribe();\n            hasValue = true;\n            lastValue = value;\n            durationSubscriber = new OperatorSubscriber(subscriber, emit, noop);\n            innerFrom(durationSelector(value)).subscribe(durationSubscriber);\n        }, () => {\n            emit();\n            subscriber.complete();\n        }, undefined, () => {\n            lastValue = durationSubscriber = null;\n        }));\n    });\n}\n"
    ]
  },
  "metadata": {},
  "sourceType": "module"
}
