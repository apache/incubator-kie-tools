{
  "ast": null,
  "code": "import { ConnectableObservable } from '../observable/ConnectableObservable';\nimport { isFunction } from '../util/isFunction';\nimport { connect } from './connect';\nexport function multicast(subjectOrSubjectFactory, selector) {\n  var subjectFactory = isFunction(subjectOrSubjectFactory) ? subjectOrSubjectFactory : function () {\n    return subjectOrSubjectFactory;\n  };\n\n  if (isFunction(selector)) {\n    return connect(selector, {\n      connector: subjectFactory\n    });\n  }\n\n  return function (source) {\n    return new ConnectableObservable(source, subjectFactory);\n  };\n}",
  "map": {
    "version": 3,
    "sources": [
      "/home/koda/redhat/kogito-tooling/examples/ping-pong-view-angular/node_modules/rxjs/dist/esm/internal/operators/multicast.js"
    ],
    "names": [
      "ConnectableObservable",
      "isFunction",
      "connect",
      "multicast",
      "subjectOrSubjectFactory",
      "selector",
      "subjectFactory",
      "connector",
      "source"
    ],
    "mappings": "AAAA,SAASA,qBAAT,QAAsC,qCAAtC;AACA,SAASC,UAAT,QAA2B,oBAA3B;AACA,SAASC,OAAT,QAAwB,WAAxB;AACA,OAAO,SAASC,SAAT,CAAmBC,uBAAnB,EAA4CC,QAA5C,EAAsD;AACzD,MAAMC,cAAc,GAAGL,UAAU,CAACG,uBAAD,CAAV,GAAsCA,uBAAtC,GAAgE;AAAA,WAAMA,uBAAN;AAAA,GAAvF;;AACA,MAAIH,UAAU,CAACI,QAAD,CAAd,EAA0B;AACtB,WAAOH,OAAO,CAACG,QAAD,EAAW;AACrBE,MAAAA,SAAS,EAAED;AADU,KAAX,CAAd;AAGH;;AACD,SAAO,UAACE,MAAD;AAAA,WAAY,IAAIR,qBAAJ,CAA0BQ,MAA1B,EAAkCF,cAAlC,CAAZ;AAAA,GAAP;AACH",
    "sourcesContent": [
      "import { ConnectableObservable } from '../observable/ConnectableObservable';\nimport { isFunction } from '../util/isFunction';\nimport { connect } from './connect';\nexport function multicast(subjectOrSubjectFactory, selector) {\n    const subjectFactory = isFunction(subjectOrSubjectFactory) ? subjectOrSubjectFactory : () => subjectOrSubjectFactory;\n    if (isFunction(selector)) {\n        return connect(selector, {\n            connector: subjectFactory,\n        });\n    }\n    return (source) => new ConnectableObservable(source, subjectFactory);\n}\n"
    ]
  },
  "metadata": {},
  "sourceType": "module"
}
