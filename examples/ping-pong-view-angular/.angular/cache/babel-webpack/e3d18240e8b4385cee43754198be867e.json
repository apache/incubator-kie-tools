{
  "ast": null,
  "code": "import _classCallCheck from \"/home/koda/redhat/kogito-tooling/node_modules/@angular-devkit/build-angular/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nimport _createClass from \"/home/koda/redhat/kogito-tooling/node_modules/@angular-devkit/build-angular/node_modules/@babel/runtime/helpers/esm/createClass.js\";\nimport _get from \"/home/koda/redhat/kogito-tooling/node_modules/@angular-devkit/build-angular/node_modules/@babel/runtime/helpers/esm/get.js\";\nimport _getPrototypeOf from \"/home/koda/redhat/kogito-tooling/node_modules/@angular-devkit/build-angular/node_modules/@babel/runtime/helpers/esm/getPrototypeOf.js\";\nimport _inherits from \"/home/koda/redhat/kogito-tooling/node_modules/@angular-devkit/build-angular/node_modules/@babel/runtime/helpers/esm/inherits.js\";\nimport _createSuper from \"/home/koda/redhat/kogito-tooling/node_modules/@angular-devkit/build-angular/node_modules/@babel/runtime/helpers/esm/createSuper.js\";\nimport { Subject } from './Subject';\nimport { dateTimestampProvider } from './scheduler/dateTimestampProvider';\nexport var ReplaySubject = /*#__PURE__*/function (_Subject) {\n  _inherits(ReplaySubject, _Subject);\n\n  var _super = _createSuper(ReplaySubject);\n\n  function ReplaySubject() {\n    var _this;\n\n    var _bufferSize = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : Infinity;\n\n    var _windowTime = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : Infinity;\n\n    var _timestampProvider = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : dateTimestampProvider;\n\n    _classCallCheck(this, ReplaySubject);\n\n    _this = _super.call(this);\n    _this._bufferSize = _bufferSize;\n    _this._windowTime = _windowTime;\n    _this._timestampProvider = _timestampProvider;\n    _this._buffer = [];\n    _this._infiniteTimeWindow = true;\n    _this._infiniteTimeWindow = _windowTime === Infinity;\n    _this._bufferSize = Math.max(1, _bufferSize);\n    _this._windowTime = Math.max(1, _windowTime);\n    return _this;\n  }\n\n  _createClass(ReplaySubject, [{\n    key: \"next\",\n    value: function next(value) {\n      var isStopped = this.isStopped,\n          _buffer = this._buffer,\n          _infiniteTimeWindow = this._infiniteTimeWindow,\n          _timestampProvider = this._timestampProvider,\n          _windowTime = this._windowTime;\n\n      if (!isStopped) {\n        _buffer.push(value);\n\n        !_infiniteTimeWindow && _buffer.push(_timestampProvider.now() + _windowTime);\n      }\n\n      this._trimBuffer();\n\n      _get(_getPrototypeOf(ReplaySubject.prototype), \"next\", this).call(this, value);\n    }\n  }, {\n    key: \"_subscribe\",\n    value: function _subscribe(subscriber) {\n      this._throwIfClosed();\n\n      this._trimBuffer();\n\n      var subscription = this._innerSubscribe(subscriber);\n\n      var _infiniteTimeWindow = this._infiniteTimeWindow,\n          _buffer = this._buffer;\n\n      var copy = _buffer.slice();\n\n      for (var i = 0; i < copy.length && !subscriber.closed; i += _infiniteTimeWindow ? 1 : 2) {\n        subscriber.next(copy[i]);\n      }\n\n      this._checkFinalizedStatuses(subscriber);\n\n      return subscription;\n    }\n  }, {\n    key: \"_trimBuffer\",\n    value: function _trimBuffer() {\n      var _bufferSize = this._bufferSize,\n          _timestampProvider = this._timestampProvider,\n          _buffer = this._buffer,\n          _infiniteTimeWindow = this._infiniteTimeWindow;\n      var adjustedBufferSize = (_infiniteTimeWindow ? 1 : 2) * _bufferSize;\n      _bufferSize < Infinity && adjustedBufferSize < _buffer.length && _buffer.splice(0, _buffer.length - adjustedBufferSize);\n\n      if (!_infiniteTimeWindow) {\n        var now = _timestampProvider.now();\n\n        var last = 0;\n\n        for (var i = 1; i < _buffer.length && _buffer[i] <= now; i += 2) {\n          last = i;\n        }\n\n        last && _buffer.splice(0, last + 1);\n      }\n    }\n  }]);\n\n  return ReplaySubject;\n}(Subject);",
  "map": {
    "version": 3,
    "sources": [
      "/home/koda/redhat/kogito-tooling/examples/ping-pong-view-angular/node_modules/rxjs/dist/esm/internal/ReplaySubject.js"
    ],
    "names": [
      "Subject",
      "dateTimestampProvider",
      "ReplaySubject",
      "_bufferSize",
      "Infinity",
      "_windowTime",
      "_timestampProvider",
      "_buffer",
      "_infiniteTimeWindow",
      "Math",
      "max",
      "value",
      "isStopped",
      "push",
      "now",
      "_trimBuffer",
      "subscriber",
      "_throwIfClosed",
      "subscription",
      "_innerSubscribe",
      "copy",
      "slice",
      "i",
      "length",
      "closed",
      "next",
      "_checkFinalizedStatuses",
      "adjustedBufferSize",
      "splice",
      "last"
    ],
    "mappings": "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",
    "sourcesContent": [
      "import { Subject } from './Subject';\nimport { dateTimestampProvider } from './scheduler/dateTimestampProvider';\nexport class ReplaySubject extends Subject {\n    constructor(_bufferSize = Infinity, _windowTime = Infinity, _timestampProvider = dateTimestampProvider) {\n        super();\n        this._bufferSize = _bufferSize;\n        this._windowTime = _windowTime;\n        this._timestampProvider = _timestampProvider;\n        this._buffer = [];\n        this._infiniteTimeWindow = true;\n        this._infiniteTimeWindow = _windowTime === Infinity;\n        this._bufferSize = Math.max(1, _bufferSize);\n        this._windowTime = Math.max(1, _windowTime);\n    }\n    next(value) {\n        const { isStopped, _buffer, _infiniteTimeWindow, _timestampProvider, _windowTime } = this;\n        if (!isStopped) {\n            _buffer.push(value);\n            !_infiniteTimeWindow && _buffer.push(_timestampProvider.now() + _windowTime);\n        }\n        this._trimBuffer();\n        super.next(value);\n    }\n    _subscribe(subscriber) {\n        this._throwIfClosed();\n        this._trimBuffer();\n        const subscription = this._innerSubscribe(subscriber);\n        const { _infiniteTimeWindow, _buffer } = this;\n        const copy = _buffer.slice();\n        for (let i = 0; i < copy.length && !subscriber.closed; i += _infiniteTimeWindow ? 1 : 2) {\n            subscriber.next(copy[i]);\n        }\n        this._checkFinalizedStatuses(subscriber);\n        return subscription;\n    }\n    _trimBuffer() {\n        const { _bufferSize, _timestampProvider, _buffer, _infiniteTimeWindow } = this;\n        const adjustedBufferSize = (_infiniteTimeWindow ? 1 : 2) * _bufferSize;\n        _bufferSize < Infinity && adjustedBufferSize < _buffer.length && _buffer.splice(0, _buffer.length - adjustedBufferSize);\n        if (!_infiniteTimeWindow) {\n            const now = _timestampProvider.now();\n            let last = 0;\n            for (let i = 1; i < _buffer.length && _buffer[i] <= now; i += 2) {\n                last = i;\n            }\n            last && _buffer.splice(0, last + 1);\n        }\n    }\n}\n"
    ]
  },
  "metadata": {},
  "sourceType": "module"
}
