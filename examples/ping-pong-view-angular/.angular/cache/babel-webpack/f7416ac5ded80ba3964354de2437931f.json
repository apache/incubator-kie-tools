{
  "ast": null,
  "code": "import _regeneratorRuntime from \"/home/koda/redhat/kogito-tooling/node_modules/@angular-devkit/build-angular/node_modules/@babel/runtime/regenerator/index.js\";\nimport { __asyncGenerator, __await } from \"tslib\";\nimport { isFunction } from './isFunction';\nexport function readableStreamLikeToAsyncGenerator(readableStream) {\n  return __asyncGenerator(this, arguments, /*#__PURE__*/_regeneratorRuntime.mark(function readableStreamLikeToAsyncGenerator_1() {\n    var reader, _yield$__await, value, done;\n\n    return _regeneratorRuntime.wrap(function readableStreamLikeToAsyncGenerator_1$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            reader = readableStream.getReader();\n            _context.prev = 1;\n\n          case 2:\n            if (!true) {\n              _context.next = 18;\n              break;\n            }\n\n            _context.next = 5;\n            return __await(reader.read());\n\n          case 5:\n            _yield$__await = _context.sent;\n            value = _yield$__await.value;\n            done = _yield$__await.done;\n\n            if (!done) {\n              _context.next = 12;\n              break;\n            }\n\n            _context.next = 11;\n            return __await(void 0);\n\n          case 11:\n            return _context.abrupt(\"return\", _context.sent);\n\n          case 12:\n            _context.next = 14;\n            return __await(value);\n\n          case 14:\n            _context.next = 16;\n            return _context.sent;\n\n          case 16:\n            _context.next = 2;\n            break;\n\n          case 18:\n            _context.prev = 18;\n            reader.releaseLock();\n            return _context.finish(18);\n\n          case 21:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, readableStreamLikeToAsyncGenerator_1, null, [[1,, 18, 21]]);\n  }));\n}\nexport function isReadableStreamLike(obj) {\n  return isFunction(obj === null || obj === void 0 ? void 0 : obj.getReader);\n}",
  "map": {
    "version": 3,
    "sources": [
      "/home/koda/redhat/kogito-tooling/examples/ping-pong-view-angular/node_modules/rxjs/dist/esm/internal/util/isReadableStreamLike.js"
    ],
    "names": [
      "__asyncGenerator",
      "__await",
      "isFunction",
      "readableStreamLikeToAsyncGenerator",
      "readableStream",
      "arguments",
      "readableStreamLikeToAsyncGenerator_1",
      "reader",
      "getReader",
      "read",
      "value",
      "done",
      "releaseLock",
      "isReadableStreamLike",
      "obj"
    ],
    "mappings": ";AAAA,SAASA,gBAAT,EAA2BC,OAA3B,QAA0C,OAA1C;AACA,SAASC,UAAT,QAA2B,cAA3B;AACA,OAAO,SAASC,kCAAT,CAA4CC,cAA5C,EAA4D;AAC/D,SAAOJ,gBAAgB,CAAC,IAAD,EAAOK,SAAP,wCAAkB,SAAUC,oCAAV;AAAA;;AAAA;AAAA;AAAA;AAAA;AAC/BC,YAAAA,MAD+B,GACtBH,cAAc,CAACI,SAAf,EADsB;AAAA;;AAAA;AAAA,iBAG1B,IAH0B;AAAA;AAAA;AAAA;;AAAA;AAIL,mBAAMP,OAAO,CAACM,MAAM,CAACE,IAAP,EAAD,CAAb;;AAJK;AAAA;AAIrBC,YAAAA,KAJqB,kBAIrBA,KAJqB;AAIdC,YAAAA,IAJc,kBAIdA,IAJc;;AAAA,iBAKzBA,IALyB;AAAA;AAAA;AAAA;;AAAA;AAMlB,mBAAMV,OAAO,CAAC,KAAK,CAAN,CAAb;;AANkB;AAAA;;AAAA;AAAA;AAQvB,mBAAMA,OAAO,CAACS,KAAD,CAAb;;AARuB;AAAA;AAQ7B;;AAR6B;AAAA;AAAA;;AAAA;AAAA;AAYjCH,YAAAA,MAAM,CAACK,WAAP;AAZiC;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAUN,oCAAV;AAAA,GAAlB,EAAvB;AAeH;AACD,OAAO,SAASO,oBAAT,CAA8BC,GAA9B,EAAmC;AACtC,SAAOZ,UAAU,CAACY,GAAG,KAAK,IAAR,IAAgBA,GAAG,KAAK,KAAK,CAA7B,GAAiC,KAAK,CAAtC,GAA0CA,GAAG,CAACN,SAA/C,CAAjB;AACH",
    "sourcesContent": [
      "import { __asyncGenerator, __await } from \"tslib\";\nimport { isFunction } from './isFunction';\nexport function readableStreamLikeToAsyncGenerator(readableStream) {\n    return __asyncGenerator(this, arguments, function* readableStreamLikeToAsyncGenerator_1() {\n        const reader = readableStream.getReader();\n        try {\n            while (true) {\n                const { value, done } = yield __await(reader.read());\n                if (done) {\n                    return yield __await(void 0);\n                }\n                yield yield __await(value);\n            }\n        }\n        finally {\n            reader.releaseLock();\n        }\n    });\n}\nexport function isReadableStreamLike(obj) {\n    return isFunction(obj === null || obj === void 0 ? void 0 : obj.getReader);\n}\n"
    ]
  },
  "metadata": {},
  "sourceType": "module"
}
