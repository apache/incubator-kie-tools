{
  "ast": null,
  "code": "import _classCallCheck from \"/home/koda/redhat/kogito-tooling/node_modules/@angular-devkit/build-angular/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nimport _createClass from \"/home/koda/redhat/kogito-tooling/node_modules/@angular-devkit/build-angular/node_modules/@babel/runtime/helpers/esm/createClass.js\";\nimport _inherits from \"/home/koda/redhat/kogito-tooling/node_modules/@angular-devkit/build-angular/node_modules/@babel/runtime/helpers/esm/inherits.js\";\nimport _createSuper from \"/home/koda/redhat/kogito-tooling/node_modules/@angular-devkit/build-angular/node_modules/@babel/runtime/helpers/esm/createSuper.js\";\nimport { AsyncScheduler } from './AsyncScheduler';\nexport var AnimationFrameScheduler = /*#__PURE__*/function (_AsyncScheduler) {\n  _inherits(AnimationFrameScheduler, _AsyncScheduler);\n\n  var _super = _createSuper(AnimationFrameScheduler);\n\n  function AnimationFrameScheduler() {\n    _classCallCheck(this, AnimationFrameScheduler);\n\n    return _super.apply(this, arguments);\n  }\n\n  _createClass(AnimationFrameScheduler, [{\n    key: \"flush\",\n    value: function flush(action) {\n      this._active = true;\n      this._scheduled = undefined;\n      var actions = this.actions;\n      var error;\n      var index = -1;\n      action = action || actions.shift();\n      var count = actions.length;\n\n      do {\n        if (error = action.execute(action.state, action.delay)) {\n          break;\n        }\n      } while (++index < count && (action = actions.shift()));\n\n      this._active = false;\n\n      if (error) {\n        while (++index < count && (action = actions.shift())) {\n          action.unsubscribe();\n        }\n\n        throw error;\n      }\n    }\n  }]);\n\n  return AnimationFrameScheduler;\n}(AsyncScheduler); //# sourceMappingURL=AnimationFrameScheduler.js.map",
  "map": null,
  "metadata": {},
  "sourceType": "module"
}
