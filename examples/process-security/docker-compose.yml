services:
  postgres:
    container_name: process-security-postgres
    image: postgres:16.1-alpine3.19
    profiles: ["jvm", "full"]
    ports:
      - "5432:5432"
    volumes:
      - ./docker-compose/sql:/docker-entrypoint-initdb.d:Z
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres -d postgres"]
      timeout: 45s
      interval: 10s
      retries: 50
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres

  pgadmin:
    container_name: process-security-pgadmin
    image: dpage/pgadmin4:8.2
    profiles: ["jvm", "full"]
    ports:
      - "8055:80"
    depends_on:
      - postgres
    volumes:
      - ./docker-compose/pgadmin/servers.json:/pgadmin4/servers.json
      - ./docker-compose/pgadmin/pgpass:/pgadmin4/pgpass
    entrypoint: >
      /bin/sh -c "
      cp -f /pgadmin4/pgpass /var/lib/pgadmin/;
      chmod 600 /var/lib/pgadmin/pgpass;
      /entrypoint.sh
      "
    environment:
      PGADMIN_DEFAULT_EMAIL: user@kie.org
      PGADMIN_DEFAULT_PASSWORD: pass
      PGADMIN_CONFIG_SERVER_MODE: "False"
      PGADMIN_CONFIG_MASTER_PASSWORD_REQUIRED: "False"
      GUNICORN_ACCESS_LOGFILE: "/dev/null"

  keycloak-1:
    container_name: process-security-keycloak-1
    image: quay.io/keycloak/keycloak:26.0.5
    profiles: ["dev", "jvm", "full"]
    healthcheck:
      test:
        [
          "CMD-SHELL",
          "exec 3<>/dev/tcp/127.0.0.1/9000; echo -e 'GET /health/ready HTTP/1.1\r\nHost: localhost:9000\r\nConnection: close\r\n\r\n' >&3;cat <&3 | grep -q '\"status\": \"UP\"' && exit 0 || exit 1",
        ]
      interval: 30s
      timeout: 10s
      retries: 3
    ports:
      - 8180:8080
    environment:
      KEYCLOAK_ADMIN: admin
      KEYCLOAK_ADMIN_PASSWORD: admin
      KC_HEALTH_ENABLED: true
    volumes:
      - ./docker-compose/keycloak-realm-1:/opt/keycloak/data/import
    command: start-dev --import-realm

  keycloak-2:
    container_name: process-security-keycloak-2
    image: quay.io/keycloak/keycloak:26.0.5
    profiles: ["dev", "jvm", "full"]
    healthcheck:
      test:
        [
          "CMD-SHELL",
          "exec 3<>/dev/tcp/127.0.0.1/9000; echo -e 'GET /health/ready HTTP/1.1\r\nHost: localhost:9000\r\nConnection: close\r\n\r\n' >&3;cat <&3 | grep -q '\"status\": \"UP\"' && exit 0 || exit 1",
        ]
      interval: 30s
      timeout: 10s
      retries: 3
    ports:
      - 8280:8080
    environment:
      KEYCLOAK_ADMIN: admin
      KEYCLOAK_ADMIN_PASSWORD: admin
      KC_HEALTH_ENABLED: true
    volumes:
      - ./docker-compose/keycloak-realm-2:/opt/keycloak/data/import
    command: start-dev --import-realm

  kie-service-1:
    container_name: process-security-kie-service-1
    image: dev.local/kie/process-security-kie-service-1:${PROJECT_VERSION}
    profiles: ["full"]
    depends_on:
      keycloak-1:
        condition: service_healthy
      postgres:
        condition: service_healthy
    environment:
      QUARKUS_HTTP_CORS_ORIGINS: "/.*/"
      QUARKUS_DATASOURCE_JDBC_URL: "jdbc:postgresql://127.0.0.1:5432/kie1"
      QUARKUS_DATASOURCE_REACTIVE_URL: "postgresql://127.0.0.1:5432/kie1"
      QUARKUS_DATASOURCE_USERNAME: kie-user-1
      QUARKUS_DATASOURCE_PASSWORD: kie-pass-1
      QUARKUS_DATASOURCE_DB_KIND: postgresql
      QUARKUS_HTTP_PORT: 8081
      KOGITO_JOBS_SERVICE_URL: http://127.0.0.1:8081
      KOGITO_SERVICE_URL: http://127.0.0.1:8081
      KOGITO_DATAINDEX_HTTP_URL: http://127.0.0.1:8081
      QUARKUS_OIDC_AUTH_SERVER_URL: http://127.0.0.1:8180/realms/kie
    network_mode: host

  kie-service-2:
    container_name: process-security-kie-service-2
    image: dev.local/kie/process-security-kie-service-2:${PROJECT_VERSION}
    profiles: ["full"]
    depends_on:
      keycloak-2:
        condition: service_healthy
      postgres:
        condition: service_healthy
    environment:
      QUARKUS_HTTP_CORS_ORIGINS: "/.*/"
      QUARKUS_DATASOURCE_JDBC_URL: "jdbc:postgresql://127.0.0.1:5432/kie2"
      QUARKUS_DATASOURCE_REACTIVE_URL: "postgresql://127.0.0.1:5432/kie2"
      QUARKUS_DATASOURCE_USERNAME: kie-user-2
      QUARKUS_DATASOURCE_PASSWORD: kie-pass-2
      QUARKUS_DATASOURCE_DB_KIND: postgresql
      QUARKUS_HTTP_PORT: 8082
      KOGITO_JOBS_SERVICE_URL: http://127.0.0.1:8082
      KOGITO_SERVICE_URL: http://127.0.0.1:8082
      KOGITO_DATAINDEX_HTTP_URL: http://127.0.0.1:8082
      QUARKUS_OIDC_AUTH_SERVER_URL: http://127.0.0.1:8280/realms/kie
    network_mode: host

  kie-service-3:
    container_name: process-security-kie-service-3
    image: dev.local/kie/process-security-kie-service-3:${PROJECT_VERSION}
    profiles: ["full"]
    depends_on:
      postgres:
        condition: service_healthy
    environment:
      QUARKUS_HTTP_CORS_ORIGINS: "/.*/"
      QUARKUS_DATASOURCE_JDBC_URL: "jdbc:postgresql://127.0.0.1:5432/kie3"
      QUARKUS_DATASOURCE_REACTIVE_URL: "postgresql://127.0.0.1:5432/kie3"
      QUARKUS_DATASOURCE_USERNAME: kie-user-3
      QUARKUS_DATASOURCE_PASSWORD: kie-pass-3
      QUARKUS_DATASOURCE_DB_KIND: postgresql
      QUARKUS_HTTP_PORT: 8083
      KOGITO_JOBS_SERVICE_URL: http://127.0.0.1:8083
      KOGITO_SERVICE_URL: http://127.0.0.1:8083
      KOGITO_DATAINDEX_HTTP_URL: http://127.0.0.1:8083
    network_mode: host

  managment-console:
    container_name: process-security-management-console
    image: ${KOGITO_MANAGEMENT_CONSOLE_IMAGE}
    profiles: ["full"]
    ports:
      - "8380:8080"
    depends_on:
      kie-service-1:
        condition: service_started
      kie-service-2:
        condition: service_started
      kie-service-3:
        condition: service_started
    environment:
      RUNTIME_TOOLS_MANAGEMENT_CONSOLE_OIDC_CLIENT_CLIENT_ID: kie-management-console
