#
# Licensed to the Apache Software Foundation (ASF) under one
# or more contributor license agreements.  See the NOTICE file
# distributed with this work for additional information
# regarding copyright ownership.  The ASF licenses this file
# to you under the Apache License, Version 2.0 (the
# "License"); you may not use this file except in compliance
# with the License.  You may obtain a copy of the License at
#
#   http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing,
# software distributed under the License is distributed on an
# "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
# KIND, either express or implied.  See the License for the
# specific language governing permissions and limitations
# under the License.
#

services:
  kafka:
    image: apache/kafka:3.7.2
    container_name: process-event-driven-kafka
    profiles: ["dev", "full"]
    ports:
      - "9092:9092"
    environment:
      KAFKA_NODE_ID: 1
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: "CONTROLLER:PLAINTEXT,PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT"
      KAFKA_ADVERTISED_LISTENERS: "PLAINTEXT_HOST://${KAFKA_HOST}:9092,PLAINTEXT://kafka:19092"
      KAFKA_PROCESS_ROLES: "broker,controller"
      KAFKA_CONTROLLER_QUORUM_VOTERS: "1@kafka:29093"
      KAFKA_LISTENERS: "CONTROLLER://:29093,PLAINTEXT_HOST://:9092,PLAINTEXT://:19092"
      KAFKA_INTER_BROKER_LISTENER_NAME: "PLAINTEXT"
      KAFKA_CONTROLLER_LISTENER_NAMES: "CONTROLLER"
      CLUSTER_ID: "4L6g3nShT-eMCtK--X86sw"
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_GROUP_INITIAL_REBALANCE_DELAY_MS: 0
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1
      KAFKA_LOG_DIRS: "/tmp/kraft-combined-logs"

  postgres:
    container_name: process-event-driven-postgres
    image: postgres:16.7-alpine3.21
    profiles: ["full"]
    ports:
      - "5432:5432"
    volumes:
      - ./docker-compose/sql:/docker-entrypoint-initdb.d:Z
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres -d postgres"]
      timeout: 45s
      interval: 10s
      retries: 50
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres

  pgadmin:
    container_name: process-event-driven-pgadmin
    image: dpage/pgadmin4:8.14
    profiles: ["full"]
    ports:
      - 8055:80
    depends_on:
      - postgres
    volumes:
      - ./docker-compose/pgadmin/servers.json:/pgadmin4/servers.json
      - ./docker-compose/pgadmin/pgpass:/pgadmin4/pgpass
    entrypoint: >
      /bin/sh -c "
      cp -f /pgadmin4/pgpass /var/lib/pgadmin/;
      chmod 600 /var/lib/pgadmin/pgpass;
      /entrypoint.sh
      "
    environment:
      PGADMIN_DEFAULT_EMAIL: user@kogito.org
      PGADMIN_DEFAULT_PASSWORD: pass
      PGADMIN_CONFIG_SERVER_MODE: "False"
      PGADMIN_CONFIG_MASTER_PASSWORD_REQUIRED: "False"
      GUNICORN_ACCESS_LOGFILE: "/dev/null"

  hotels:
    container_name: process-event-driven-hotels
    image: dev.local/${USER}/process-event-driven-hotels:${STREAM_NAME}
    profiles: ["full"]
    ports:
      - "8081:8080"
    depends_on:
      postgres:
        condition: service_healthy
    environment:
      KAFKA_BOOTSTRAP_SERVERS: kafka:9092
      QUARKUS_HTTP_CORS_ORIGINS: "/.*/"
      QUARKUS_DATASOURCE_JDBC_URL: "jdbc:postgresql://postgres:5432/hotels"
      QUARKUS_DATASOURCE_REACTIVE_URL: "postgresql://postgres:5432/hotels"
      QUARKUS_DATASOURCE_USERNAME: hotel-user
      QUARKUS_DATASOURCE_PASSWORD: hotel-pass
      QUARKUS_DATASOURCE_DB_KIND: postgresql
      KOGITO_JOBS_SERVICE_URL: http://127.0.0.1:8081
      KOGITO_SERVICE_URL: http://127.0.0.1:8081
      KOGITO_DATAINDEX_HTTP_URL: http://127.0.0.1:8081
    extra_hosts:
      - "127.0.0.1:host-gateway"

  travelers:
    container_name: process-event-driven-travelers
    image: dev.local/${USER}/process-event-driven-travelers:${STREAM_NAME}
    profiles: ["full"]
    ports:
      - "8082:8080"
    depends_on:
      postgres:
        condition: service_healthy
    environment:
      KAFKA_BOOTSTRAP_SERVERS: kafka:9092
      QUARKUS_HTTP_CORS_ORIGINS: "/.*/"
      QUARKUS_DATASOURCE_JDBC_URL: "jdbc:postgresql://postgres:5432/travelers"
      QUARKUS_DATASOURCE_REACTIVE_URL: "postgresql://postgres:5432/travelers"
      QUARKUS_DATASOURCE_USERNAME: traveler-user
      QUARKUS_DATASOURCE_PASSWORD: traveler-pass
      QUARKUS_DATASOURCE_DB_KIND: postgresql
      KOGITO_JOBS_SERVICE_URL: http://127.0.0.1:8082
      KOGITO_SERVICE_URL: http://127.0.0.1:8082
      KOGITO_DATAINDEX_HTTP_URL: http://127.0.0.1:8082
    extra_hosts:
      - "127.0.0.1:host-gateway"
