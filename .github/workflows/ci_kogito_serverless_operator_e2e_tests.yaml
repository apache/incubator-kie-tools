name: "CI :: Kogito Serverless Operator :: E2E Tests"

on:
  push:
    branches: [main]
  pull_request:
    branches: ["**"]
    types: [opened, reopened, ready_for_review, synchronize]

concurrency:
  group: ${{ github.event.pull_request && format('ci-build-full-pr-kogito-serverless-operator-{0}', github.event.pull_request.number) || format('ci-build-full-push-main-kogito-serverless-operator-{0}', github.sha) }}
  cancel-in-progress: true

env:
  TMPDIR: "/tmp"

jobs:
  run:
    if: github.event.pull_request.draft == false
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest]
    runs-on: ${{ matrix.os }}
    steps:
      - name: "Checkout @ GitHub default"
        uses: actions/checkout@v3

      - name: "Checkout @ Simulated squashed-merge if PR"
        id: checkout_pr
        uses: ./.github/actions/checkout-pr
        with:
          ref: ${{ github.base_ref }}

      - name: "Setup CI patterns"
        id: ci_patterns
        uses: ./.github/actions/setup-ci-patterns

      - name: "Setup build mode {none,run}"
        id: setup_build_mode
        shell: bash
        run: |
          export CHANGED_SOURCE_PATHS=($(eval "git diff --name-only ${{ steps.checkout_pr.outputs.base_sha }} ${{ steps.checkout_pr.outputs.head_sha }} -- ${{ steps.ci_patterns.outputs.non_source_files_patterns_for_git_diff }}"))
          echo "Changed source paths:"
          echo ${#CHANGED_SOURCE_PATHS[@]}
          printf '%s\n' "${CHANGED_SOURCE_PATHS[@]}"

          export CHANGED_SOURCE_PATHS_KOGITO_SERVERLESS_OPERATOR_OR_UPSTREAM=($(printf '%s\n' "${CHANGED_SOURCE_PATHS[@]}" | grep -v -e "^packages" -e "^examples")) # TODO: Tiago --> Fix this
          echo "Changed source paths in "@kie-tools/kogito-serverless-operator" or upstream:"
          echo ${#CHANGED_SOURCE_PATHS_KOGITO_SERVERLESS_OPERATOR_OR_UPSTREAM[@]}
          printf '%s\n' "${CHANGED_SOURCE_PATHS_KOGITO_SERVERLESS_OPERATOR_OR_UPSTREAM[@]}"

          if [ ${#CHANGED_SOURCE_PATHS[@]} -eq 0 ]; then
            echo 'No source files changed; `CI :: Kogito Serverless Operator :: E2E Tests` (none) will run.'
            echo "mode=none" >> $GITHUB_OUTPUT
          elif [ ! ${{ github.event.pull_request }} ]; then
            echo 'Push to the `main` branch happened; `CI :: Kogito Serverless Operator :: E2E Tests` (full) will run.'
            echo "mode=run" >> $GITHUB_OUTPUT
          elif [ ${#CHANGED_SOURCE_PATHS_KOGITO_SERVERLESS_OPERATOR_OR_UPSTREAM[@]} -eq 0 ]; then
            echo 'No source files changed in "@kie-tools/kogito-serverless-operator" or upstream; `CI :: Kogito Serverless Operator :: E2E Tests` (none) will run.'
            echo "mode=none" >> $GITHUB_OUTPUT
          else
            echo 'Source files changed in "@kie-tools/kogito-serverless-operator" or upstream; `CI :: Kogito Serverless Operator :: E2E Tests` (full) will run.'
            echo "mode=full" >> $GITHUB_OUTPUT
          fi

          echo "Done"

      - name: "Setup environment"
        # if: steps.setup_build_mode.outputs.mode != 'none' # TODO: Tiago --> Temporarily commented until I fix the package filtering.
        uses: ./.github/actions/setup-env

      - name: "Bootstrap"
        # if: steps.setup_build_mode.outputs.mode == 'run' # TODO: Tiago --> Temporarily commented until I fix the package filtering.
        uses: ./.github/actions/bootstrap
        with:
          pnpm_filter_string: -F "@kie-tools/kogito-serverless-operator..."

      - name: "Build upstream"
        # if: steps.setup_build_mode.outputs.mode == 'run' # TODO: Tiago --> Temporarily commented until I fix the package filtering.
        env:
          KIE_TOOLS_BUILD__runLinters: "false"
          KIE_TOOLS_BUILD__runTests: "false"
          KIE_TOOLS_BUILD__runEndToEndTests: "false"
          KIE_TOOLS_BUILD__buildContainerImages: "true"
        run: |
          pnpm -F "@kie-tools/kogito-serverless-operator^..." build:prod

      - name: "Build @kie-tools/kogito-serverless-operator"
        # if: steps.setup_build_mode.outputs.mode == 'run' # TODO: Tiago --> Temporarily commented until I fix the package filtering.
        env:
          KIE_TOOLS_BUILD__runLinters: "true"
          KIE_TOOLS_BUILD__runTests: "true"
          KIE_TOOLS_BUILD__runEndToEndTests: "true"
          KIE_TOOLS_BUILD__buildContainerImages: "true"
          KOGITO_SERVERLESS_OPERATOR__runEndToEndTests: "true"
        run: |
          pnpm -F "@kie-tools/kogito-serverless-operator" build:prod

      - name: "Check hanging uncommitted files (you should commit those!)"
        if: always() && !cancelled() && steps.setup_build_mode.outputs.mode != 'none'
        shell: bash
        run: |
          git diff
          [ "0" == "$(git diff | wc -l | tr -d ' ')" ]

      - name: "Upload reports and artifacts"
        if: always() && !cancelled() && steps.setup_build_mode.outputs.mode != 'none'
        uses: ./.github/actions/upload-ci-reports-and-artifacts

      - name: "Print storage usage (after build)"
        if: always() && !cancelled()
        shell: bash
        run: |
          df -h .
