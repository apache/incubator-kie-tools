name: "CI :: Full Downstream build"

on:
  issue_comment:
    types: [created]
  pull_request_target:
    branches: "**"

jobs:
  build:
    if: github.repository == 'kiegroup/kogito-tooling' && (github.event_name != 'issue_comment' || startsWith(github.event.comment.body, 'Build:'))
    runs-on: ${{ matrix.os }}
    timeout-minutes: 90
    strategy:
      fail-fast: true
      matrix:
        os: [ubuntu-latest]
        node: [12.16.3]
        yarn: [1.19.1]
    env:
      MERGE_WARNING_MESSAGE: "ATTENTION: A merge attempt is being made to get your changes. If a conflict happens, please do a rebase/merge manually in your branch to get the latest kiegroup/master commits."

    steps:
      - name: Fetch user membership to kiegroup
        uses: octokit/request-action@v2.x
        id: checkUserMembership
        with:
          route: GET /orgs/kiegroup/members/:username
          username: ${{ github.actor }}
        env:
          GITHUB_TOKEN: ${{ secrets.KOGITO_TOOLING_BOT_TOKEN }}

      - name: Check user membership to kiegroup
        run: |
          [ "204" == "${{ steps.checkUserMembership.outputs.status }}" ]

      - name: Output Build info
        id: buildInfo
        run: |
          if [ -z "${{ github.event.pull_request }}" ]; then
            user=$(node -e "console.log('${{ github.event.comment.body }}'.match(/Build: (.+)\/(.+)$/)[1])");
            ref=$(node -e "console.log('${{ github.event.comment.body }}'.match(/Build: (.+)\/(.+)$/)[2])");
            category="comment";
            id="${{ github.event.comment.id }}";
          else
            user=$(node -e "console.log('${{ github.event.pull_request.head.label }}'.match(/(.+)\:(.+)$/)[1])");
            ref=${{ github.head_ref }}
            category="pull";
            id="${{ github.event.pull_request.number }}";
          fi

          echo ::set-output name=user::$user
          echo ::set-output name=ref::$ref
          echo ::set-output name=category::$category
          echo ::set-output name=id::$id

      - name: Create comment
        if: github.event_name == 'issue_comment'
        uses: peter-evans/create-or-update-comment@v1
        with:
          issue-number: ${{ github.event.issue.number }}
          body: |
            [KOGITO-TOOLING-BUILD] @${{ github.actor }} Build triggered for ${{ steps.buildInfo.outputs.user }}/${{ steps.buildInfo.outputs.ref }}. Check progress at https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id }}
            The Online Editor for this job will be available at https://kiegroup.github.io/kogito-online-ci/${{ steps.buildInfo.outputs.category }}/${{ steps.buildInfo.outputs.id }} once the job is done.
          reactions: rocket

      - name: Checkout droolsjbpm-build-bootstrap
        uses: actions/checkout@v2
        with:
          repository: kiegroup/droolsjbpm-build-bootstrap
          fetch-depth: 0

      - name: Build droolsjbpm-build-bootstrap
        run: |
          git config --global user.email "kietooling@gmail.com"
          git config --global user.name "Kogito Tooling Bot"
          git remote add ${{ steps.buildInfo.outputs.user }} https://github.com/${{ steps.buildInfo.outputs.user }}/droolsjbpm-build-bootstrap.git
          git fetch --all || true
          if [ -n "$(git show-ref refs/remotes/${{ steps.buildInfo.outputs.user }}/${{ steps.buildInfo.outputs.ref }})" ]; then
            echo $MERGE_WARNING_MESSAGE
            git merge ${{ steps.buildInfo.outputs.user }}/${{ steps.buildInfo.outputs.ref }}
          fi
          mvn clean install -DskipTests -Dgwt.compiler.skip -Denforcer.skip -T 2 -B

      - name: Checkout kie-soup
        uses: actions/checkout@v2
        with:
          repository: kiegroup/kie-soup
          fetch-depth: 0

      - name: Build kie-soup
        run: |
          git config --global user.email "kietooling@gmail.com"
          git config --global user.name "Kogito Tooling Bot"
          git remote add ${{ steps.buildInfo.outputs.user }} https://github.com/${{ steps.buildInfo.outputs.user }}/kie-soup.git
          git fetch --all || true
          if [ -n "$(git show-ref refs/remotes/${{ steps.buildInfo.outputs.user }}/${{ steps.buildInfo.outputs.ref }})" ]; then
            echo $MERGE_WARNING_MESSAGE
            git merge ${{ steps.buildInfo.outputs.user }}/${{ steps.buildInfo.outputs.ref }}
          fi
          mvn clean install -DskipTests -Dgwt.compiler.skip -Denforcer.skip -T 2 -B

      - name: Checkout appformer
        uses: actions/checkout@v2
        with:
          repository: kiegroup/appformer
          fetch-depth: 0

      - name: Build appformer
        run: |
          git config --global user.email "kietooling@gmail.com"
          git config --global user.name "Kogito Tooling Bot"
          git remote add ${{ steps.buildInfo.outputs.user }} https://github.com/${{ steps.buildInfo.outputs.user }}/appformer.git
          git fetch --all || true
          if [ -n "$(git show-ref refs/remotes/${{ steps.buildInfo.outputs.user }}/${{ steps.buildInfo.outputs.ref }})" ]; then
            echo $MERGE_WARNING_MESSAGE
            git merge ${{ steps.buildInfo.outputs.user }}/${{ steps.buildInfo.outputs.ref }}
          fi
          mvn clean install -DskipTests -Dgwt.compiler.skip -Denforcer.skip -B

      - name: Checkout kie-wb-common
        uses: actions/checkout@v2
        with:
          repository: kiegroup/kie-wb-common
          fetch-depth: 0

      - name: Build kie-wb-common
        run: |
          git config --global user.email "kietooling@gmail.com"
          git config --global user.name "Kogito Tooling Bot"
          git remote add ${{ steps.buildInfo.outputs.user }} https://github.com/${{ steps.buildInfo.outputs.user }}/kie-wb-common.git
          git fetch --all || true
          if [ -n "$(git show-ref refs/remotes/${{ steps.buildInfo.outputs.user }}/${{ steps.buildInfo.outputs.ref }})" ]; then
            echo $MERGE_WARNING_MESSAGE
            git merge ${{ steps.buildInfo.outputs.user }}/${{ steps.buildInfo.outputs.ref }}
          fi
          mvn clean install -DskipTests -Dgwt.compiler.skip -Denforcer.skip -T 2 -B
          mvn clean install -DskipTests -Denforcer.skip -pl kie-wb-common-stunner/kie-wb-common-stunner-sets/kie-wb-common-stunner-bpmn/kie-wb-common-stunner-bpmn-kogito-runtime -B
          mvn clean install -DskipTests -Denforcer.skip -pl kie-wb-common-dmn/kie-wb-common-dmn-webapp-kogito-runtime -B

      - name: Upload DMN editor
        uses: actions/upload-artifact@v1
        with:
          name: dmn-editor-fdb
          path: kie-wb-common-dmn/kie-wb-common-dmn-webapp-kogito-runtime/target/kie-wb-common-dmn-webapp-kogito-runtime

      - name: Upload BPMN editor
        uses: actions/upload-artifact@v1
        with:
          name: bpmn-editor-fdb
          path: kie-wb-common-stunner/kie-wb-common-stunner-sets/kie-wb-common-stunner-bpmn/kie-wb-common-stunner-bpmn-kogito-runtime/target/kie-wb-common-stunner-bpmn-kogito-runtime

      - name: Checkout drools-wb
        uses: actions/checkout@v2
        with:
          repository: kiegroup/drools-wb
          fetch-depth: 0

      - name: Build drools-wb
        run: |
          git config --global user.email "kietooling@gmail.com"
          git config --global user.name "Kogito Tooling Bot"
          git remote add ${{ steps.buildInfo.outputs.user }} https://github.com/${{ steps.buildInfo.outputs.user }}/drools-wb.git
          git fetch --all || true
          if [ -n "$(git show-ref refs/remotes/${{ steps.buildInfo.outputs.user }}/${{ steps.buildInfo.outputs.ref }})" ]; then
            echo $MERGE_WARNING_MESSAGE
            git merge ${{ steps.buildInfo.outputs.user }}/${{ steps.buildInfo.outputs.ref }}
          fi
          mvn clean install -DskipTests -Denforcer.skip -pl drools-wb-screens/drools-wb-scenario-simulation-editor/drools-wb-scenario-simulation-editor-kogito-runtime -am -T 2 -B

      - name: Upload SceSim editor
        uses: actions/upload-artifact@v1
        with:
          name: scesim-editor-fdb
          path: drools-wb-screens/drools-wb-scenario-simulation-editor/drools-wb-scenario-simulation-editor-kogito-runtime/target/drools-wb-scenario-simulation-editor-kogito-runtime/

      - name: Checkout kogito-tooling
        uses: actions/checkout@v2
        with:
          fetch-depth: 0
          path: kogito-tooling

      - name: Setup kogito-tooling
        run: |
          cd kogito-tooling
          git fetch --depth=1 origin +refs/tags/*:refs/tags/*
          git status

      - name: Merge kogito-tooling changes
        run: |
          cd kogito-tooling
          git config --global user.email "kietooling@gmail.com"
          git config --global user.name "Kogito Tooling Bot"
          git remote add ${{ steps.buildInfo.outputs.user }} https://github.com/${{ steps.buildInfo.outputs.user }}/kogito-tooling.git
          git fetch --all || true
          if [ -n "$(git show-ref refs/remotes/${{ steps.buildInfo.outputs.user }}/${{ steps.buildInfo.outputs.ref }})" ]; then
            echo $MERGE_WARNING_MESSAGE
            git merge ${{ steps.buildInfo.outputs.user }}/${{ steps.buildInfo.outputs.ref }}
          fi

      # This bash script will set an output version for this step. It can be used with steps.version.outputs.version
      - name: Output version
        id: version
        run: |
          cd kogito-tooling && echo ::set-output name=version::$(node -e "console.log(require('./lerna.json').version);")
        shell: bash

      - name: Setup Node
        uses: actions/setup-node@v1
        with:
          node-version: ${{ matrix.node }}

      - name: Setup Yarn
        run: npm install -g yarn@${{ matrix.yarn }}

      - name: Start Xvfb
        run: /usr/bin/Xvfb :99 -screen 0 1024x768x24 > /dev/null 2>&1 &

      - name: Download dependencies
        run: cd kogito-tooling && yarn run init

      - name: Check yarn.lock md5
        id: check-yarn-lock-md5
        run: |
          cd kogito-tooling
          git diff yarn.lock;
          [ "0" == "$(git diff yarn.lock | wc -l)" ]
        shell: bash

      - name: Build kogito-tooling
        env:
          EXTERNAL_RESOURCE_PATH__dmnEditor: "../kie-wb-common/kie-wb-common-dmn/kie-wb-common-dmn-webapp-kogito-runtime/target/kie-wb-common-dmn-webapp-kogito-runtime"
          EXTERNAL_RESOURCE_PATH__bpmnEditor: "../kie-wb-common/kie-wb-common-stunner/kie-wb-common-stunner-sets/kie-wb-common-stunner-bpmn/kie-wb-common-stunner-bpmn-kogito-runtime/target/kie-wb-common-stunner-bpmn-kogito-runtime"
          EXTERNAL_RESOURCE_PATH__scesimEditor: "../drools-wb/drools-wb-screens/drools-wb-scenario-simulation-editor/drools-wb-scenario-simulation-editor-kogito-runtime/target/drools-wb-scenario-simulation-editor-kogito-runtime"
          ROUTER_targetOrigin: "https://kiegroup.github.io"
          ROUTER_relativePath: "kogito-online-ci/${{ steps.buildInfo.outputs.category }}/${{ steps.buildInfo.outputs.id }}/editors/"
          DOWNLOAD_HUB_linuxUrl: "https://kiegroup.github.io/kogito-online-ci/hub_download_unsupported.html"
          DOWNLOAD_HUB_macOsUrl: "https://kiegroup.github.io/kogito-online-ci/hub_download_unsupported.html"
          DOWNLOAD_HUB_windowsUrl: "https://kiegroup.github.io/kogito-online-ci/hub_download_unsupported.html"
          DISPLAY: ":99.0"
        run: cd kogito-tooling && yarn run build:prod && cd .. && pwd && ls

      - name: Upload VSCode Extension
        uses: actions/upload-artifact@v1
        with:
          name: vscode-extension-fdb
          path: kogito-tooling/packages/vscode-extension-pack-kogito-kie-editors/dist/vscode_extension_kogito_kie_editors_${{ steps.version.outputs.version }}.vsix

      - name: Upload Backend VS Code Extension
        uses: actions/upload-artifact@v1
        with:
          name: vscode-extension-backend-fdb
          path: kogito-tooling/packages/vscode-extension-backend/dist/vscode-extension-backend_${{ steps.version.outputs.version }}.vsix

      - name: Upload Chrome Extension
        uses: actions/upload-artifact@v1
        with:
          name: chrome-extension-fdb
          path: kogito-tooling/packages/chrome-extension-pack-kogito-kie-editors/dist/chrome_extension_kogito_kie_editors_${{ steps.version.outputs.version }}.zip

      - name: Upload Desktop App
        uses: actions/upload-artifact@v1
        with:
          name: desktop-app-linux-fdb
          path: kogito-tooling/packages/desktop/out/Business Modeler Preview-linux-x64.tar.gz

      - name: Upload Hub App
        uses: actions/upload-artifact@v1
        with:
          name: hub-app-linux-fdb
          path: kogito-tooling/packages/hub/out/Business Modeler Hub Preview-linux-x64.tar.gz

      - name: Checkout kogito-online-ci
        uses: actions/checkout@v2
        with:
          token: ${{ secrets.KOGITO_TOOLING_BOT_TOKEN }}
          path: kogito-online-ci
          repository: kiegroup/kogito-online-ci
          ref: gh-pages

      # For this step to work properly, you have to add the owner of KOGITO_TOOLING_BOT_TOKEN as collaborator on 'kogito-online-ci'.
      - name: Update kogito-online-ci resources
        run: |
          cd kogito-online-ci
          rm -rf ${{ steps.buildInfo.outputs.category }}/${{ steps.buildInfo.outputs.id }}
          mkdir -p ${{ steps.buildInfo.outputs.category }}/${{ steps.buildInfo.outputs.id }}/editors
          cp -r ../kogito-tooling/node_modules/@kogito-tooling/dmn-editor-unpacked/target/dmn ${{ steps.buildInfo.outputs.category }}/${{ steps.buildInfo.outputs.id }}/editors/
          cp -r ../kogito-tooling/node_modules/@kogito-tooling/bpmn-editor-unpacked/target/bpmn ${{ steps.buildInfo.outputs.category }}/${{ steps.buildInfo.outputs.id }}/editors/
          cp -r ../kogito-tooling/node_modules/@kogito-tooling/scesim-editor-unpacked/target/scesim ${{ steps.buildInfo.outputs.category }}/${{ steps.buildInfo.outputs.id }}/editors/
          cp -r ../kogito-tooling/packages/chrome-extension-pack-kogito-kie-editors/dist/envelope ${{ steps.buildInfo.outputs.category }}/${{ steps.buildInfo.outputs.id }}/editors/
          cp -r ../kogito-tooling/packages/online-editor/dist/* ${{ steps.buildInfo.outputs.category }}/${{ steps.buildInfo.outputs.id }}/
          git config --global user.email "kietooling@gmail.com"
          git config --global user.name "Kogito Tooling Bot (kiegroup)"
          git add . && git commit -m "Kogito Tooling FDB - ${{ steps.buildInfo.outputs.category }}/${{ steps.buildInfo.outputs.id }}" || echo "No changes."
          git push origin gh-pages
          cd -

      - name: Rebuild Chrome Extension to use servers running on localhost
        env:
          EXTERNAL_RESOURCE_PATH__dmnEditor: "../../../kie-wb-common/kie-wb-common-dmn/kie-wb-common-dmn-webapp-kogito-runtime/target/kie-wb-common-dmn-webapp-kogito-runtime"
          EXTERNAL_RESOURCE_PATH__bpmnEditor: "../../../kie-wb-common/kie-wb-common-stunner/kie-wb-common-stunner-sets/kie-wb-common-stunner-bpmn/kie-wb-common-stunner-bpmn-kogito-runtime/target/kie-wb-common-stunner-bpmn-kogito-runtime"
          EXTERNAL_RESOURCE_PATH__scesimEditor: "../../../drools-wb/drools-wb-screens/drools-wb-scenario-simulation-editor/drools-wb-scenario-simulation-editor-kogito-runtime/target/drools-wb-scenario-simulation-editor-kogito-runtime"
          ROUTER_targetOrigin: "https://localhost:9000"
          ROUTER_relativePath: ""
          ONLINEEDITOR_url: "http://localhost:9001"
        run: cd kogito-tooling/packages/chrome-extension-pack-kogito-kie-editors && yarn run build:prod && cd -

      - name: Run Chrome Extension integration tests
        env:
          DISPLAY: ":99.0"
          EXTERNAL_RESOURCE_PATH__dmnEditor: "../../../kie-wb-common/kie-wb-common-dmn/kie-wb-common-dmn-webapp-kogito-runtime/target/kie-wb-common-dmn-webapp-kogito-runtime"
          EXTERNAL_RESOURCE_PATH__bpmnEditor: "../../../kie-wb-common/kie-wb-common-stunner/kie-wb-common-stunner-sets/kie-wb-common-stunner-bpmn/kie-wb-common-stunner-bpmn-kogito-runtime/target/kie-wb-common-stunner-bpmn-kogito-runtime"
          EXTERNAL_RESOURCE_PATH__scesimEditor: "../../../drools-wb/drools-wb-screens/drools-wb-scenario-simulation-editor/drools-wb-scenario-simulation-editor-kogito-runtime/target/drools-wb-scenario-simulation-editor-kogito-runtime"
          ROUTER_targetOrigin: "https://localhost:9000"
          ROUTER_relativePath: ""
          ONLINEEDITOR_url: "http://localhost:9001"
        run: |
          cd kogito-tooling/packages/online-editor && yarn run start &
          cd kogito-tooling/packages/chrome-extension-pack-kogito-kie-editors && yarn run serve-envelope &
          sleep 30
          cd kogito-tooling/packages/chrome-extension-pack-kogito-kie-editors && yarn run test:it
          cd -

      - name: Archive Chrome Extension integration tests screenshots
        if: success() || failure()	
        uses: actions/upload-artifact@v1	
        with:	
          name: chrome-extension-it-tests-screenshots-${{ matrix.os }}	
          path: kogito-tooling/packages/chrome-extension-pack-kogito-kie-editors/screenshots	

      - name: Archive Chrome Extension integration tests logs
        if: success() || failure()	
        uses: actions/upload-artifact@v1	
        with:	
          name: chrome-extension-it-tests-logs-${{ matrix.os }}	
          path: kogito-tooling/packages/chrome-extension-pack-kogito-kie-editors/logs