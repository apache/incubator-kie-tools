name: "Release :: Publish"

on:
  workflow_dispatch:
    inputs:
      tag:
        type: string
        required: true
        description: "Tag associated with the release"
      runners:
        type: string
        required: true
        default: '{"dmn_dev_deployment_base_image":"true","kie_sandbox_image":"true","kie_sandbox_extended_services_image":"true","git_cors_proxy_image":"true","online_editor":"true","chrome_extensions":"true","vscode_extensions_dev":"true","vscode_extensions_prod":"true","npm_packages":"true","standalone_editors_cdn":"true","extended_services":"true","dashbuilder":"true","dashbuilder_images":"true","serverless_logic_sandbox":"true","serverless_logic_web_tools_swf_builder_image":"true","serverless_logic_web_tools_base_builder_image":"true","dashbuilder_viewer_image":"true","kn_plugin_workflow":"true"}'
        description: "Jobs to run (JSON)"

jobs:
  prepare:
    runs-on: ubuntu-latest
    outputs:
      upload_asset_url: ${{ fromJSON(steps.fetch_release_for_tag.outputs.data).upload_url }}
      release_ref: ${{ fromJSON(steps.fetch_release_for_tag.outputs.data).target_commitish }}
    steps:
      - name: "Fetch release for ${{ github.event.inputs.tag }}"
        uses: octokit/request-action@v2.1.0
        id: fetch_release_for_tag
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          route: GET /repos/{repo}/releases/tags/{tag}
          repo: ${{ github.repository }}
          tag: ${{ github.event.inputs.tag }}

      - name: "Checkout"
        uses: actions/checkout@v3
        with:
          ref: ${{ fromJSON(steps.fetch_release_for_tag.outputs.data).target_commitish }}

      - name: "Check `tag` against `(package.json).version`"
        shell: bash
        run: |
          [ "${{ github.event.inputs.tag }}" == "$(node -p "require('./package.json').version")" ]

  build_and_publish:
    needs: [prepare]
    uses: ./.github/workflows/release_build.yml
    with:
      dry_run: false
      base_ref: ${{ needs.prepare.outputs.release_ref }}
      tag: ${{ github.event.inputs.tag }}
      upload_asset_url: ${{ needs.prepare.outputs.upload_asset_url }}
      runners: ${{ github.event.inputs.runners }}
    secrets:
      kie_tools_bot_token: ${{ secrets.KIE_TOOLS_BOT_TOKEN }}
      gh_token: ${{ secrets.GITHUB_TOKEN }}
      quay_registry_password: ${{ secrets.QUAY_REGISTRY_PASSWORD }}
      google_developer_console_client_id: ${{ secrets.GOOGLE_DEVELOPER_CONSOLE_CLIENT_ID }}
      google_developer_console_client_secret: ${{ secrets.GOOGLE_DEVELOPER_CONSOLE_CLIENT_SECRET }}
      google_developer_console_refresh_token: ${{ secrets.GOOGLE_DEVELOPER_CONSOLE_REFRESH_TOKEN }}
      chrome_extension_id: ${{ secrets.CHROME_EXTENSION_ID }}
      swf_chrome_extension_id: ${{ secrets.SWF_CHROME_EXTENSION_ID }}
      kiegroup_npm_token: ${{ secrets.KIEGROUP_NPM_TOKEN }}
      openshift_server: ${{ secrets.OPENSHIFT_SERVER }}
      openshift_token: ${{ secrets.OPENSHIFT_TOKEN }}
