name: "CI :: Monorepo"

on:
  pull_request:
    branches: "**"
    paths:
      - "packages/**"

concurrency:
  group: monorepo-pr-ci-${{ github.event.pull_request.number }}
  cancel-in-progress: true

jobs:
  monorepo-pr-ci:
    if: github.event.pull_request.draft == false
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
    runs-on: ${{ matrix.os }}
    steps:
      - name: "Support longpaths"
        if: matrix.os == 'windows-latest'
        run: git config --system core.longpaths true

      - name: "Checkout"
        uses: actions/checkout@v2
        with:
          fetch-depth: 0
          ref: ${{ github.base_ref }}

      - name: "Setup kie-tools-bot"
        uses: ./.github/actions/setup-kie-tools-bot

      - name: "Merge PR changes"
        uses: ./.github/actions/merge-pr-changes

      - name: "Setup environment"
        uses: ./.github/actions/setup-env
        with:
          os: ${{ matrix.os }}

      - name: "Build dependencies"
        shell: bash
        env:
          KIE_TOOLS_BUILD_examples: "true"
        run: |
          export REF=${{ github.base_ref }} &&
          export SCOPE=$(diff <(echo "$(lerna ls --since $REF --include-dependencies --all | cut -d' ' -f1)") <(echo "$(lerna ls --since $REF  --all | cut -d' ' -f1)") --changed-group-format='%<%>' --unchanged-group-format='' | xargs -I{} echo -n ' --scope="{}"') &&
          echo $REF $SCOPE &&
          yarn run-script-if --silent --env SCOPE --eq "" \
            --then "echo No dependencies to build." \
            --else "lerna run --stream build:dev $SCOPE"

      - name: "Build changed and dependents"
        env:
          WEBPACK__minimize: "false"
          KIE_TOOLS_BUILD_lint: "true"
          KIE_TOOLS_BUILD_test: "true"
          KIE_TOOLS_BUILD_testIT: ${{ matrix.os == 'ubuntu-latest' }}
          KIE_TOOLS_BUILD_docker: "true"
          KIE_TOOLS_BUILD_examples: "true"
          DISPLAY: ":99.0"
          START_SERVER_AND_TEST_INSECURE: "true"
        run: |
          lerna run build:prod --stream --since ${{ github.base_ref }}

      - name: "Check generated resources (you should commit those!)"
        shell: bash
        run: |
          git diff
          [ "0" == "$(git diff | wc -l | tr -d ' ')" ]

      - name: "Upload build artifacts"
        uses: actions/upload-artifact@v2
        if: always() && !cancelled()
        with:
          name: artifacts-${{ matrix.os }}
          if-no-files-found: warn
          path: |
            packages/*/dist
            packages/desktop/out/*.zip
            !packages/desktop/dist

      - name: "Upload IT Tests artifacts"
        uses: actions/upload-artifact@v2
        if: always() && !cancelled()
        with:
          name: it-tests-artifacts-${{ matrix.os }}
          if-no-files-found: warn
          path: |
            packages/*/dist-it-tests
