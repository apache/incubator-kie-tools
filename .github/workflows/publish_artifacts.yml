name: "Release :: Publish"

on:
  release:
    types: [published]

jobs:
  publish_release_artifacts:
    if: github.repository == 'kiegroup/kogito-tooling'
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
        with:
          path: kogito-tooling

      # This bash script returns the `tag` name for the release. Will match "/refs/[tags/heads]/[tag]"
      - name: Parse `tag`
        id: release-tag
        run: |
          echo ::set-output name=tag::$(node -e "console.log('${{ github.ref }}'.match(/^.*\/(.+)$/)[1])")

      # This bash script returns 0 if equal and 1 otherwise. Will fail if versions are not equal.
      - name: Check release `tag` against `lerna.json.version`
        run: |
          [ "${{ steps.release-tag.outputs.tag }}" == "$(node -e "console.log(require('./kogito-tooling/lerna.json').version);")" ]

      - name: Setup Node
        uses: actions/setup-node@v1
        with:
          node-version: 16.2.0

      - name: Setup Yarn and Lerna
        run: |
          npm install -g lerna@4.0.0 yarn@1.22.10
          yarn config set network-timeout 1000000

      - name: Start Xvfb
        run: /usr/bin/Xvfb :99 -screen 0 1024x768x24 > /dev/null 2>&1 &

      - name: Build
        env:
          WEBPACK_minimize: "true"
          WEBPACK_TS_LOADER_transpileOnly: "false"
          ROUTER_targetOrigin: "https://kiegroup.github.io"
          ROUTER_relativePath: "kogito-online/editors/${{ steps.release-tag.outputs.tag }}/"
          DOWNLOAD_HUB_linuxUrl: "https://github.com/kiegroup/kogito-tooling/releases/download/${{ steps.release-tag.outputs.tag }}/business_modeler_hub_preview_linux_${{ steps.release-tag.outputs.tag }}.tar.gz"
          DOWNLOAD_HUB_macOsUrl: "https://github.com/kiegroup/kogito-tooling/releases/download/${{ steps.release-tag.outputs.tag }}/business_modeler_hub_preview_macos_${{ steps.release-tag.outputs.tag }}.zip"
          DOWNLOAD_HUB_windowsUrl: "https://github.com/kiegroup/kogito-tooling/releases/download/${{ steps.release-tag.outputs.tag }}/business_modeler_hub_preview_windows_${{ steps.release-tag.outputs.tag }}.zip"
          DISPLAY: ":99.0"
        run: cd kogito-tooling && yarn bootstrap && yarn run build:prod && cd -

      - name: Checkout "kogito-online"
        uses: actions/checkout@v2
        with:
          token: ${{ secrets.KOGITO_TOOLING_BOT_TOKEN }}
          path: kogito-online
          repository: kiegroup/kogito-online
          ref: gh-pages

      # For this step to work properly, you have to add the owner of KOGITO_TOOLING_BOT_TOKEN as collaborator on 'kogito-online'.
      - name: Update "kogito-online" latest resources
        env:
          KOGITO_ONLINE_CHROME_EXT_EDITOR_DIR: ./editors/${{ steps.release-tag.outputs.tag }}
          KOGITO_ONLINE_EDITOR_DIR: .
        run: |
          cd kogito-online
          rm -rf ./editors/latest
          ln -s ${{ steps.release-tag.outputs.tag }} ./editors/latest
          rm -rf $KOGITO_ONLINE_CHROME_EXT_EDITOR_DIR
          mkdir -p $KOGITO_ONLINE_CHROME_EXT_EDITOR_DIR
          cp -r ../kogito-tooling/node_modules/@kogito-tooling/dmn-editor-unpacked/target/dmn $KOGITO_ONLINE_CHROME_EXT_EDITOR_DIR/
          cp -r ../kogito-tooling/node_modules/@kogito-tooling/bpmn-editor-unpacked/target/bpmn $KOGITO_ONLINE_CHROME_EXT_EDITOR_DIR/
          cp -r ../kogito-tooling/node_modules/@kogito-tooling/scesim-editor-unpacked/target/scesim $KOGITO_ONLINE_CHROME_EXT_EDITOR_DIR/
          cp -r ../kogito-tooling/packages/chrome-extension-pack-kogito-kie-editors/dist/envelope $KOGITO_ONLINE_CHROME_EXT_EDITOR_DIR/
          rm $KOGITO_ONLINE_EDITOR_DIR/gwt-editors
          cp -r ../kogito-tooling/packages/online-editor/dist/* $KOGITO_ONLINE_EDITOR_DIR
          rm -rf $KOGITO_ONLINE_EDITOR_DIR/gwt-editors
          ln -s $KOGITO_ONLINE_CHROME_EXT_EDITOR_DIR $KOGITO_ONLINE_EDITOR_DIR/gwt-editors
          mkdir -p $KOGITO_ONLINE_EDITOR_DIR/standalone/${{ steps.release-tag.outputs.tag }}/bpmn
          mkdir -p $KOGITO_ONLINE_EDITOR_DIR/standalone/${{ steps.release-tag.outputs.tag }}/dmn
          cp ../kogito-tooling/packages/kie-editors-standalone/dist/bpmn/index.js $KOGITO_ONLINE_EDITOR_DIR/standalone/${{ steps.release-tag.outputs.tag }}/bpmn
          cp ../kogito-tooling/packages/kie-editors-standalone/dist/dmn/index.js $KOGITO_ONLINE_EDITOR_DIR/standalone/${{ steps.release-tag.outputs.tag }}/dmn
          rm $KOGITO_ONLINE_EDITOR_DIR/standalone/bpmn/index.js
          rm $KOGITO_ONLINE_EDITOR_DIR/standalone/dmn/index.js
          ln -s ../${{ steps.release-tag.outputs.tag }}/bpmn/index.js $KOGITO_ONLINE_EDITOR_DIR/standalone/bpmn/index.js
          ln -s ../${{ steps.release-tag.outputs.tag }}/dmn/index.js $KOGITO_ONLINE_EDITOR_DIR/standalone/dmn/index.js
          rm -rf ./online-editor-staging
          git config --global user.email "kietooling@gmail.com"
          git config --global user.name "Kogito Tooling Bot"
          git add . && git commit -m "Update editors/latest to ${{ steps.release-tag.outputs.tag }}" || echo "No changes."
          git push origin gh-pages
          cd -

      - name: Publish artifacts to NPM registry
        env:
          NPM_TOKEN: ${{ secrets.KIEGROUP_NPM_TOKEN }}
        run: |
          echo "//registry.npmjs.org/:_authToken=${NPM_TOKEN}" > ~/.npmrc
          cd kogito-tooling && yarn lerna exec --scope @kogito-tooling/* --ignore @kogito-tooling/online-editor --ignore @kogito-tooling/desktop --ignore @kogito-tooling/hub -- npm publish --access public && cd -
