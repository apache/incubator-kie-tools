name: "CI :: Default"

on:
  schedule:
    - cron: "0 1 * * *"
  push:
    branches: [master]
  pull_request:
    branches: "**"

jobs:
  build:
    if: github.repository == 'kiegroup/kogito-tooling' || github.event_name != 'schedule'
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: true
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
        node: [16.2.0]
        yarn: [1.22.10]
        lerna: [4.0.0]

    steps:
      # https://github.com/prettier/prettier/issues/7825
      # https://github.com/actions/checkout/issues/135
      - name: Set git to use LF. Needed due to running action on widnows machines.
        run: |
          git config --global core.autocrlf false
          git config --global core.eol lf

      - uses: actions/checkout@v2
      - run: git fetch --depth=1 origin +refs/tags/*:refs/tags/*

      # This bash script will set an output version for this step. It can be used with steps.version.outputs.version
      - name: Output version
        id: version
        run: |
          echo ::set-output name=version::$(node -e "console.log(require('./lerna.json').version);")
        shell: bash

      - name: Setup Node
        uses: actions/setup-node@v1
        with:
          node-version: ${{ matrix.node }}

      - name: Setup Yarn and Lerna
        run: |
          npm install -g lerna@${{ matrix.lerna }} yarn@${{ matrix.yarn }}
          yarn config set network-timeout 1000000

      - name: Start Xvfb (Ubuntu only)
        if: matrix.os == 'ubuntu-latest'
        run: /usr/bin/Xvfb :99 -screen 0 1024x768x24 > /dev/null 2>&1 &

      - name: Download dependencies
        run: yarn bootstrap

      - name: Check yarn.lock md5
        id: check-yarn-lock-md5
        if: matrix.os == 'ubuntu-latest'
        run: |
          git diff yarn.lock;
          [ "0" == "$(git diff yarn.lock | wc -l)" ]
        shell: bash

      - name: Check kogito-tooling format (format:check)
        run: |
          yarn format:check

      - name: "Build :: prod and pack"
        run: yarn run build:prod

      - name: Upload VS Code Extension (Ubuntu only)
        if: matrix.os == 'ubuntu-latest'
        uses: actions/upload-artifact@v1
        with:
          name: vscode-extension
          path: packages/vscode-extension-pack-kogito-kie-editors/dist/vscode_extension_kogito_kie_editors_${{ steps.version.outputs.version }}.vsix

      - name: Upload Backend VS Code Extension (Ubuntu only)
        if: matrix.os == 'ubuntu-latest'
        uses: actions/upload-artifact@v1
        with:
          name: vscode-extension-backend
          path: packages/vscode-extension-backend/dist/vscode-extension-backend_${{ steps.version.outputs.version }}.vsix

      - name: Upload Desktop App - Ubuntu (Ubuntu only)
        if: matrix.os == 'ubuntu-latest'
        uses: actions/upload-artifact@v1
        with:
          name: desktop-app-linux
          path: "packages/desktop/out/Business Modeler Preview-linux-x64.tar.gz"

      - name: Upload Desktop App - macOS (macOS only)
        if: matrix.os == 'macos-latest'
        uses: actions/upload-artifact@v1
        with:
          name: desktop-app-macos
          path: "packages/desktop/out/Business Modeler Preview-darwin-x64.zip"

      - name: Upload Desktop App - Windows (Windows only)
        if: matrix.os == 'windows-latest'
        uses: actions/upload-artifact@v1
        with:
          name: desktop-app-windows
          path: "packages/desktop/out/Business Modeler Preview-win32-x64"

      - name: Upload Hub App - Ubuntu (Ubuntu only)
        if: matrix.os == 'ubuntu-latest'
        uses: actions/upload-artifact@v1
        with:
          name: hub-app-linux
          path: "packages/hub/out/Business Modeler Hub Preview-linux-x64.tar.gz"

      - name: Upload Hub App - macOS (macOS only)
        if: matrix.os == 'macos-latest'
        uses: actions/upload-artifact@v1
        with:
          name: hub-app-macos
          path: "packages/hub/out/Business Modeler Hub Preview-darwin-x64.zip"

      - name: Upload Hub App - Windows (Windows only)
        if: matrix.os == 'windows-latest'
        uses: actions/upload-artifact@v1
        with:
          name: hub-app-windows
          path: "packages/hub/out/Business Modeler Hub Preview-win32-x64"
