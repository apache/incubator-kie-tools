name: "CI :: OSL :: Sync Main"

permissions:
  contents: write
  pull-requests: write

on:
  workflow_dispatch: # Allows you to run the workflow manually from the Actions tab
  schedule:
    - cron: "0 2 * * 1" # Runs every Monday at 2 AM UTC (adjust as needed)

env:
  UPSTREAM_URL: ${{ vars.UPSTREAM_URL }}
  IGNORED_FILES: "${{ vars.IGNORED_FILES }}"
  SYNC_BRANCH: "main-sync-$(date +'%Y%m%d-%H%M%S')"

jobs:
  sync_main_apache:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3
        with:
          ref: main # Check out the "main" branch in your fork

      - name: Add Upstream Remote
        run: |
          git remote add upstream $UPSTREAM_URL
          git fetch upstream main

      - name: Setup Git Environment
        shell: bash
        run: |
          git config --global user.name "${{ secrets.KIE1_USER_NAME }}"
          git config --global user.email "${{ secrets.KIE1_EMAIL }}"

      - name: Create Sync Branch
        run: |
          SYNC_BRANCH="main-sync-$(date +'%Y%m%d-%H%M%S')"
          echo "SYNC_BRANCH=$SYNC_BRANCH" >> $GITHUB_ENV
          git checkout -b $SYNC_BRANCH

      - name: Move Ignored Files Temporarily
        run: |
          mkdir temp_ignored_items
          for item in $IGNORED_FILES; do
            if [ -e "$item" ]; then
              mv -v "$item" temp_ignored_items/
            else
              echo "Warning: $item does not exist"
            fi
          done

      - name: Remove conflicts before Merge
        run: rm -f pnpm-lock.yaml repo/graph.dot repo/graph.json

      - name: Sync with Upstream Main
        run: |
          git merge upstream/main -X theirs --no-edit --allow-unrelated-histories

      - name: Restore and Recreate Ignored Files
        run: |
          for item in $IGNORED_FILES; do
             [ -e "temp_ignored_items/$(basename "$item")" ] && mv -v "temp_ignored_items/$(basename "$item")" "$item"
          done

      - name: Setup environment
        uses: ./.github/actions/setup-env

      - name: Bootstrap (Regenerate Dependencies)
        run: pnpm bootstrap --no-frozen-lockfile

      - name: Commit and Push Changes to Sync Branch
        run: |
          git add .
          git commit -m "Sync with upstream/main and recreated ignored files"
          git push -u origin "${{ env.SYNC_BRANCH }}"

      - name: Create Pull Request
        env:
          GITHUB_TOKEN: ${{ secrets.KIE1_TOKEN }}
        shell: bash
        run: |
          set -x
          runUrl="${{github.server_url}}/${{ github.repository }}/actions/runs/${{ github.run_id }}"
          prTitle="Automatic PR: Sync main with main-apache"
          prBody="This pull request has been created by a GitHub workflow to synchronize the main branch with Apache upstream/main.<br /><br />\
              > [!WARNING] \n \
              > Please don't merge using squash, not to lose the git history.<br /><br />\
              [View Action](${runUrl})"
          if [[ -n "${{ vars.SYNC_REVIEWERS }}" ]]; then
            reviewersOption="--reviewer ${{ vars.SYNC_REVIEWERS }}"
          fi
          gh pr create --title "${prTitle}" --body "${prBody}" --base main --base main $reviewersOption
