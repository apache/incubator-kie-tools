/*
 * Licensed to the Apache Software Foundation (ASF) under one or more
 * contributor license agreements.  See the NOTICE file distributed with
 * this work for additional information regarding copyright ownership.
 * The ASF licenses this file to You under the Apache License, Version 2.0
 * (the "License"); you may not use this file except in compliance with
 * the License.  You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
pipeline {
    agent {
        docker {
            image 'docker.io/apache/incubator-kie-tools-ci-build:10.0.999'
            args '--shm-size=2g --privileged --group-add docker'
        }
    }

    options {
        timeout(time: 180, unit: 'MINUTES')
    }

    parameters {
        booleanParam(description: 'Dry run', name: 'DRY_RUN', defaultValue: true)
        string(description: 'Base Ref', name: 'BASE_REF', defaultValue: '')
        string(description: 'Upload Asset Url', name: 'UPLOAD_ASSET_URL', defaultValue: '')
        string(description: 'Release Version', name: 'RELEASE_VERSION')
        string(description: 'Release Candidate Version', name: 'RELEASE_CANDIDATE_VERSION', defaultValue: '')
        choice(description: 'Job Type', name: 'JOB_TYPE', choices: ['release-candidate', 'release-promote'])
    }

    environment {
        KIE_TOOLS_BUILD__runLinters = 'false'
        KIE_TOOLS_BUILD__runTests = 'false'
        KIE_TOOLS_BUILD__runEndToEndTests = 'false'
        KIE_TOOLS_BUILD__buildContainerImages = 'true'

        RELEASE_ARTIFACTS_DIR = "${WORKSPACE}/release-artifacts"
        RELEASE_CANDIDATE_ARTIFACTS_DIR = "${WORKSPACE}/release-candidate-artifacts"
        LEGAL_FILES_DIR = "${WORKSPACE}/legal-files"

        BPMN_VSCODE_EXTENSION_RELEASE_FILE = "apache-kie-${params.RELEASE_VERSION}-incubating-bpmn-vscode-extension.vsix"
        DMN_VSCODE_EXTENSION_RELEASE_FILE = "apache-kie-${params.RELEASE_VERSION}-incubating-dmn-vscode-extension.vsix"
        PMML_VSCODE_EXTENSION_RELEASE_FILE = "apache-kie-${params.RELEASE_VERSION}-incubating-pmml-vscode-extension.vsix"
        DASHBUILDER_VSCODE_EXTENSION_RELEASE_FILE = "apache-kie-${params.RELEASE_VERSION}-incubating-dashbuilder-vscode-extension.vsix"
        SONATAFLOW_VSCODE_EXTENSION_RELEASE_FILE = "apache-kie-${params.RELEASE_VERSION}-incubating-sonataflow-vscode-extension.vsix"
        YARD_VSCODE_EXTENSION_RELEASE_FILE = "apache-kie-${params.RELEASE_VERSION}-incubating-yard-vscode-extension.vsix"
        KOGITO_BUNDLE_VSCODE_EXTENSION_RELEASE_FILE = "apache-kie-${params.RELEASE_VERSION}-incubating-kogito-bundle-vscode-extension.vsix"
        BUSINESS_AUTOMATION_BUNDLE_VSCODE_EXTENSION_RELEASE_FILE = "apache-kie-${params.RELEASE_VERSION}-incubating-business-automation-bundle-vscode-extension.vsix"
        EXTENDED_SERVICES_VSCODE_EXTENSION_RELEASE_FILE = "apache-kie-${params.RELEASE_VERSION}-incubating-extended-services-vscode-extension.vsix"
    }

    stages {
        stage('Load local shared scripts') {
            steps {
                script {
                    pipelineVars = load '.ci/jenkins/shared-scripts/pipelineVars.groovy'
                    buildUtils = load '.ci/jenkins/shared-scripts/buildUtils.groovy'
                    githubUtils = load '.ci/jenkins/shared-scripts/githubUtils.groovy'
                    releaseUtils = load '.ci/jenkins/shared-scripts/releaseUtils.groovy'
                }
            }
        }

        stage('Initialize') {
            steps {
                script {
                    buildUtils.startRequiredServices()

                    cleanWs(deleteDirs: true, disableDeferredWipeout: true)

                    if (params.JOB_TYPE == 'release-candidate') {
                        currentBuild.displayName = 'Release Candidate: ' + params.RELEASE_CANDIDATE_VERSION
                    } else {
                        currentBuild.displayName = 'Release Promotion: ' + params.RELEASE_CANDIDATE_VERSION + ' > ' + params.RELEASE_VERSION
                    }
                }
            }
        }

        stage('Checkout kie-tools') {
            when {
                expression { params.JOB_TYPE == 'release-candidate' }
            }
            steps {
                dir('kie-tools') {
                    script {
                        githubUtils.checkoutRepo(
                            "http://github.com/${pipelineVars.githubRepositorySlug}.git",
                            "${params.BASE_REF}",
                            "${pipelineVars.kieToolsBotGithubCredentialsId}"
                        )
                    }
                }
            }
        }

        stage('Copy legal files') {
            when {
                expression { params.JOB_TYPE == 'release-candidate' }
            }
            steps {
                dir('kie-tools') {
                    script {
                        releaseUtils.copyLegalFiles("${LEGAL_FILES_DIR}")
                    }
                }
            }
        }

        stage('Setup PNPM') {
            when {
                expression { params.JOB_TYPE == 'release-candidate' }
            }
            steps {
                dir('kie-tools') {
                    script {
                        buildUtils.setupPnpm("${pipelineVars.mavenSettingsConfigFileId}")
                    }
                }
            }
        }

        stage('PNPM Bootstrap') {
            steps {
                dir('kie-tools') {
                    sh '''#!/bin/bash -el
                    pnpm bootstrap -F bpmn-vscode-extension... \
                    -F dmn-vscode-extension... \
                    -F pmml-vscode-extension... \
                    -F vscode-extension-kogito-bundle... \
                    -F swf-vscode-extension... \
                    -F vscode-extension-kie-ba-bundle... \
                    -F vscode-extension-dashbuilder-editor... \
                    -F yard-vscode-extension... \
                    -F extended-services-vscode-extension...
                    '''.trim()
                }
            }
        }

        stage('Build') {
            steps {
                dir('kie-tools') {
                    sh '''#!/bin/bash -el
                    pnpm -F bpmn-vscode-extension... \
                    -F dmn-vscode-extension... \
                    -F pmml-vscode-extension... \
                    -F vscode-extension-kogito-bundle... \
                    -F swf-vscode-extension... \
                    -F vscode-extension-kie-ba-bundle... \
                    -F vscode-extension-dashbuilder-editor... \
                    -F yard-vscode-extension... \
                    -F extended-services-vscode-extension... \
                    build:prod
                    '''.trim()
                }
            }
        }

        stage('Setup release candidate artifacts') {
            when {
                expression { !params.DRY_RUN && params.JOB_TYPE == 'release-candidate' }
            }
            steps {
                script {
                    sh """#!/bin/bash -el
                    mkdir ${RELEASE_CANDIDATE_ARTIFACTS_DIR}
                    cp "kie-tools/packages/bpmn-vscode-extension/dist/bpmn_vscode_extension_${params.RELEASE_VERSION}.vsix" "${RELEASE_CANDIDATE_ARTIFACTS_DIR}/${BPMN_VSCODE_EXTENSION_RELEASE_FILE}"
                    cp "kie-tools/packages/dmn-vscode-extension/dist/dmn_vscode_extension_${params.RELEASE_VERSION}.vsix" "${RELEASE_CANDIDATE_ARTIFACTS_DIR}/${DMN_VSCODE_EXTENSION_RELEASE_FILE}"
                    cp "kie-tools/packages/pmml-vscode-extension/dist/pmml_vscode_extension_${params.RELEASE_VERSION}.vsix" "${RELEASE_CANDIDATE_ARTIFACTS_DIR}/${PMML_VSCODE_EXTENSION_RELEASE_FILE}"
                    cp "kie-tools/packages/vscode-extension-dashbuilder-editor/dist/vscode_extension_dashbuilder_editor_${params.RELEASE_VERSION}.vsix" "${RELEASE_CANDIDATE_ARTIFACTS_DIR}/${DASHBUILDER_VSCODE_EXTENSION_RELEASE_FILE}"
                    cp "kie-tools/packages/serverless-workflow-vscode-extension/dist/serverless_workflow_vscode_extension_${params.RELEASE_VERSION}.vsix" "${RELEASE_CANDIDATE_ARTIFACTS_DIR}/${SONATAFLOW_VSCODE_EXTENSION_RELEASE_FILE}"
                    cp "kie-tools/packages/yard-vscode-extension/dist/yard_vscode_extension_${params.RELEASE_VERSION}.vsix" "${RELEASE_ARTIFACTS_DIR}/${YARD_VSCODE_EXTENSION_RELEASE_FILE}"
                    cp "kie-tools/packages/vscode-extension-kogito-bundle/dist/vscode_extension_kogito_bundle_${params.RELEASE_VERSION}.vsix" "${RELEASE_CANDIDATE_ARTIFACTS_DIR}/${KOGITO_BUNDLE_VSCODE_EXTENSION_RELEASE_FILE}"
                    cp "kie-tools/packages/vscode-extension-kie-ba-bundle/dist/vscode_extension_kie_ba_bundle_${params.RELEASE_VERSION}.vsix" "${RELEASE_CANDIDATE_ARTIFACTS_DIR}/${BUSINESS_AUTOMATION_BUNDLE_VSCODE_EXTENSION_RELEASE_FILE}"
                    cp "kie-tools/packages/extended-services-vscode-extension/dist/extended_services_vscode_extension_${params.RELEASE_VERSION}.vsix" "${RELEASE_CANDIDATE_ARTIFACTS_DIR}/${EXTENDED_SERVICES_VSCODE_EXTENSION_RELEASE_FILE}"
                    """.trim()
                }
            }
        }

        stage('Sign release candidate artifacts') {
            when {
                expression { !params.DRY_RUN && params.JOB_TYPE == 'release-candidate' }
            }
            steps {
                dir("${RELEASE_CANDIDATE_ARTIFACTS_DIR}") {
                    script {
                        releaseUtils.setupSigningKey("${pipelineVars.asfReleaseGPGKeyCredentialsId}")
                        releaseUtils.signArtifact("${BPMN_VSCODE_EXTENSION_RELEASE_FILE}")
                        releaseUtils.signArtifact("${DMN_VSCODE_EXTENSION_RELEASE_FILE}")
                        releaseUtils.signArtifact("${PMML_VSCODE_EXTENSION_RELEASE_FILE}")
                        releaseUtils.signArtifact("${DASHBUILDER_VSCODE_EXTENSION_RELEASE_FILE}")
                        releaseUtils.signArtifact("${SONATAFLOW_VSCODE_EXTENSION_RELEASE_FILE}")
                        releaseUtils.signArtifact("${YARD_VSCODE_EXTENSION_RELEASE_FILE}")
                        releaseUtils.signArtifact("${KOGITO_BUNDLE_VSCODE_EXTENSION_RELEASE_FILE}")
                        releaseUtils.signArtifact("${BUSINESS_AUTOMATION_BUNDLE_VSCODE_EXTENSION_RELEASE_FILE}")
                        releaseUtils.signArtifact("${EXTENDED_SERVICES_VSCODE_EXTENSION_RELEASE_FILE}")
                    }
                }
            }
        }

        stage('Push release candidate artifacts to the staging SVN') {
            when {
                expression { !params.DRY_RUN && params.JOB_TYPE == 'release-candidate' }
            }
            steps {
                script {
                    releaseUtils.publishArtifacts(
                        "${RELEASE_CANDIDATE_ARTIFACTS_DIR}",
                        "${pipelineVars.asfReleaseStagingRepository}",
                        "${params.RELEASE_CANDIDATE_VERSION}",
                        "${pipelineVars.asfReleaseSVNStagingCredentialsId}"
                    )
                }
            }
        }

        stage('Download release candidate artifacts from the staging SVN') {
            when {
                expression { !params.DRY_RUN && params.JOB_TYPE == 'release-promote' }
            }
            steps {
                script {
                    releaseUtils.downloadReleaseArtifacts(
                        "${pipelineVars.asfReleaseStagingRepository}",
                        "${RELEASE_ARTIFACTS_DIR}",
                        "${params.RELEASE_CANDIDATE_VERSION}",
                        "${BPMN_VSCODE_EXTENSION_RELEASE_FILE}",
                        "${DMN_VSCODE_EXTENSION_RELEASE_FILE}",
                        "${PMML_VSCODE_EXTENSION_RELEASE_FILE}",
                        "${DASHBUILDER_VSCODE_EXTENSION_RELEASE_FILE}",
                        "${SONATAFLOW_VSCODE_EXTENSION_RELEASE_FILE}",
                        "${YARD_VSCODE_EXTENSION_RELEASE_FILE}",
                        "${KOGITO_BUNDLE_VSCODE_EXTENSION_RELEASE_FILE}",
                        "${BUSINESS_AUTOMATION_BUNDLE_VSCODE_EXTENSION_RELEASE_FILE}",
                        "${EXTENDED_SERVICES_VSCODE_EXTENSION_RELEASE_FILE}"
                    )
                }
            }
        }

        stage('Push release artifacts to the release SVN') {
            when {
                expression { !params.DRY_RUN && params.JOB_TYPE == 'release-promote' }
            }
            steps {
                script {
                    releaseUtils.publishArtifacts(
                        "${RELEASE_ARTIFACTS_DIR}",
                        "${pipelineVars.asfReleaseRepository}",
                        "${params.RELEASE_VERSION}",
                        "${pipelineVars.asfReleaseSVNCredentialsId}"
                    )
                }
            }
        }

        stage('Upload VS Code Extension - BPMN Editor (prod)') {
            when {
                expression { !params.DRY_RUN && params.JOB_TYPE == 'release-promote' }
            }
            steps {
                dir("${RELEASE_ARTIFACTS_DIR}") {
                    script {
                        githubUtils.uploadReleaseAsset(
                            "${params.UPLOAD_ASSET_URL}",
                            "${BPMN_VSCODE_EXTENSION_RELEASE_FILE}",
                            "${BPMN_VSCODE_EXTENSION_RELEASE_FILE}",
                            'application/zip',
                            "${pipelineVars.asfGithubPushCredentialsId}"
                        )
                    }
                }
            }
        }

        stage('Upload VS Code Extension - DMN Editor (prod)') {
            when {
                expression { !params.DRY_RUN && params.JOB_TYPE == 'release-promote' }
            }
            steps {
                dir("${RELEASE_ARTIFACTS_DIR}") {
                    script {
                        githubUtils.uploadReleaseAsset(
                            "${params.UPLOAD_ASSET_URL}",
                            "${DMN_VSCODE_EXTENSION_RELEASE_FILE}",
                            "${DMN_VSCODE_EXTENSION_RELEASE_FILE}",
                            'application/zip',
                            "${pipelineVars.asfGithubPushCredentialsId}"
                        )
                    }
                }
            }
        }

        stage('Upload VS Code Extension - PMML Editor (prod)') {
            when {
                expression { !params.DRY_RUN && params.JOB_TYPE == 'release-promote' }
            }
            steps {
                dir("${RELEASE_ARTIFACTS_DIR}") {
                    script {
                        githubUtils.uploadReleaseAsset(
                            "${params.UPLOAD_ASSET_URL}",
                            "${PMML_VSCODE_EXTENSION_RELEASE_FILE}",
                            "${PMML_VSCODE_EXTENSION_RELEASE_FILE}",
                            'application/zip',
                            "${pipelineVars.asfGithubPushCredentialsId}"
                        )
                    }
                }
            }
        }

        stage('Upload VS Code Extension - Kogito Bundle (prod)') {
            when {
                expression { !params.DRY_RUN && params.JOB_TYPE == 'release-promote' }
            }
            steps {
                dir("${RELEASE_ARTIFACTS_DIR}") {
                    script {
                        githubUtils.uploadReleaseAsset(
                            "${params.UPLOAD_ASSET_URL}",
                            "${KOGITO_BUNDLE_VSCODE_EXTENSION_RELEASE_FILE}",
                            "${KOGITO_BUNDLE_VSCODE_EXTENSION_RELEASE_FILE}",
                            'application/zip',
                            "${pipelineVars.asfGithubPushCredentialsId}"
                        )
                    }
                }
            }
        }

        stage('Upload VS Code Extension - KIE Business Automation Bundle (prod)') {
            when {
                expression { !params.DRY_RUN && params.JOB_TYPE == 'release-promote' }
            }
            steps {
                dir("${RELEASE_ARTIFACTS_DIR}") {
                    script {
                        githubUtils.uploadReleaseAsset(
                            "${params.UPLOAD_ASSET_URL}",
                            "${BUSINESS_AUTOMATION_BUNDLE_VSCODE_EXTENSION_RELEASE_FILE}",
                            "${BUSINESS_AUTOMATION_BUNDLE_VSCODE_EXTENSION_RELEASE_FILE}",
                            'application/zip',
                            "${pipelineVars.asfGithubPushCredentialsId}"
                        )
                    }
                }
            }
        }

        stage('Upload VS Code Extension - Serverless Workflow Editor - KIE (prod)') {
            when {
                expression { !params.DRY_RUN && params.JOB_TYPE == 'release-promote' }
            }
            steps {
                dir("${RELEASE_ARTIFACTS_DIR}") {
                    script {
                        githubUtils.uploadReleaseAsset(
                            "${params.UPLOAD_ASSET_URL}",
                            "${SONATAFLOW_VSCODE_EXTENSION_RELEASE_FILE}",
                            "${SONATAFLOW_VSCODE_EXTENSION_RELEASE_FILE}",
                            'application/zip',
                            "${pipelineVars.asfGithubPushCredentialsId}"
                        )
                    }
                }
            }
        }

        stage('Upload VS Code Extension - Dashbuilder Editor (prod)') {
            when {
                expression { !params.DRY_RUN && params.JOB_TYPE == 'release-promote' }
            }
            steps {
                dir("${RELEASE_ARTIFACTS_DIR}") {
                    script {
                        githubUtils.uploadReleaseAsset(
                            "${params.UPLOAD_ASSET_URL}",
                            "${DASHBUILDER_VSCODE_EXTENSION_RELEASE_FILE}",
                            "${DASHBUILDER_VSCODE_EXTENSION_RELEASE_FILE}",
                            'application/zip',
                            "${pipelineVars.asfGithubPushCredentialsId}"
                        )
                    }
                }
            }
        }

        stage('Upload VS Code Extension - Yard (prod)') {
            when {
                expression { !params.DRY_RUN && params.JOB_TYPE == 'release-promote' }
            }
            steps {
                dir("${RELEASE_ARTIFACTS_DIR}") {
                    script {
                        githubUtils.uploadReleaseAsset(
                            "${params.UPLOAD_ASSET_URL}",
                            "${YARD_VSCODE_EXTENSION_RELEASE_FILE}",
                            "${YARD_VSCODE_EXTENSION_RELEASE_FILE}",
                            'application/zip',
                            "${pipelineVars.asfGithubPushCredentialsId}"
                        )
                    }
                }
            }
        }

        stage('Upload VS Code Extension - Extended Services (prod)') {
            when {
                expression { !params.DRY_RUN && params.JOB_TYPE == 'release-promote' }
            }
            steps {
                dir("${RELEASE_ARTIFACTS_DIR}") {
                    script {
                        githubUtils.uploadReleaseAsset(
                            "${params.UPLOAD_ASSET_URL}",
                            "${EXTENDED_SERVICES_VSCODE_EXTENSION_RELEASE_FILE}",
                            "${EXTENDED_SERVICES_VSCODE_EXTENSION_RELEASE_FILE}",
                            'application/zip',
                            "${pipelineVars.asfGithubPushCredentialsId}"
                        )
                    }
                }
            }
        }

        stage('Publish to marketplace') {
            when {
                expression { !params.DRY_RUN && params.JOB_TYPE == 'release-promote' }
            }
            steps {
                dir("${RELEASE_ARTIFACTS_DIR}") {
                    withCredentials([string(credentialsId: pipelineVars.vscodeMarketplaceTokenCredentialsId, variable: 'TOKEN')]) {
                        sh """#!/bin/bash -el
                        npm install -g @vscode/vsce
                        vsce publish -p ${TOKEN} --packagePath' + "${BPMN_VSCODE_EXTENSION_RELEASE_FILE}"
                        vsce publish -p ${TOKEN} --packagePath' + "${DMN_VSCODE_EXTENSION_RELEASE_FILE}"
                        vsce publish -p ${TOKEN} --packagePath' + "${PMML_VSCODE_EXTENSION_RELEASE_FILE}"
                        vsce publish -p ${TOKEN} --packagePath' + "${KOGITO_BUNDLE_VSCODE_EXTENSION_RELEASE_FILE}"
                        vsce publish -p ${TOKEN} --packagePath' + "${BUSINESS_AUTOMATION_BUNDLE_VSCODE_EXTENSION_RELEASE_FILE}"
                        vsce publish -p ${TOKEN} --packagePath' + "${SONATAFLOW_VSCODE_EXTENSION_RELEASE_FILE}"
                        vsce publish -p ${TOKEN} --packagePath' + "${DASHBUILDER_VSCODE_EXTENSION_RELEASE_FILE}"
                        vsce publish -p ${TOKEN} --packagePath' + "${YARD_VSCODE_EXTENSION_RELEASE_FILE}"
                        vsce publish -p ${TOKEN} --packagePath' + "${EXTENDED_SERVICES_VSCODE_EXTENSION_RELEASE_FILE}"
                        """.trim()
                    }
                }
            }
        }
    }

    post {
        always {
            archiveArtifacts artifacts: "${RELEASE_CANDIDATE_ARTIFACTS_DIR}/*,${RELEASE_ARTIFACTS_DIR}/*", allowEmptyArchive: true
            cleanWs(deleteDirs: true)
        }
    }
}
