<?xml version="1.0" encoding="UTF-8" ?>
<testsuites name="jest tests" tests="33" failures="0" errors="0" time="4.805">
  <testsuite name="cached" errors="0" failures="0" skipped="0" timestamp="2023-02-14T20:09:38" time="3.165" tests="24">
    <testcase classname="cached returns the same instance" name="cached returns the same instance" time="0.004">
    </testcase>
    <testcase classname="requests method with no parameters" name="requests method with no parameters" time="0.002">
    </testcase>
    <testcase classname="requests method with parameters" name="requests method with parameters" time="0.001">
    </testcase>
    <testcase classname="requests two in a row" name="requests two in a row" time="0.001">
    </testcase>
    <testcase classname="notifications simple notification" name="notifications simple notification" time="0">
    </testcase>
    <testcase classname="notifications simple subscription" name="notifications simple subscription" time="0.002">
    </testcase>
    <testcase classname="notifications simple unsubscription" name="notifications simple unsubscription" time="0.001">
    </testcase>
    <testcase classname="shared set consumed" name="shared set consumed" time="0.001">
    </testcase>
    <testcase classname="shared set owned" name="shared set owned" time="0">
    </testcase>
    <testcase
      classname="shared set consumed with subscriptions"
      name="shared set consumed with subscriptions"
      time="0.001"
    >
    </testcase>
    <testcase classname="shared set owned with subscriptions" name="shared set owned with subscriptions" time="0.001">
    </testcase>
    <testcase classname="shared unsubscribe consumed" name="shared unsubscribe consumed" time="0">
    </testcase>
    <testcase classname="shared unsubscribe owned" name="shared unsubscribe owned" time="0.001">
    </testcase>
    <testcase classname="receive simple request" name="receive simple request" time="0.005">
    </testcase>
    <testcase classname="receive request with parameters" name="receive request with parameters" time="0.003">
    </testcase>
    <testcase classname="receive response with no requestId" name="receive response with no requestId" time="0.007">
    </testcase>
    <testcase
      classname="receive response with no corresponding request"
      name="receive response with no corresponding request"
      time="0.001"
    >
    </testcase>
    <testcase classname="receive simple notification" name="receive simple notification" time="0">
    </testcase>
    <testcase
      classname="receive normal notification subscription"
      name="receive normal notification subscription"
      time="0"
    >
    </testcase>
    <testcase
      classname="receive notification subscription with no api handler"
      name="receive notification subscription with no api handler"
      time="0.001"
    >
    </testcase>
    <testcase classname="receive notification unsubscription" name="receive notification unsubscription" time="0">
    </testcase>
    <testcase classname="receive consumed shared value update" name="receive consumed shared value update" time="0.001">
    </testcase>
    <testcase classname="receive owned shared value update" name="receive owned shared value update" time="0">
    </testcase>
    <testcase classname="receive shared value subscription" name="receive shared value subscription" time="0">
    </testcase>
  </testsuite>
  <testsuite
    name="new instance"
    errors="0"
    failures="0"
    skipped="0"
    timestamp="2023-02-14T20:09:41"
    time="1.048"
    tests="9"
  >
    <testcase classname="new instance does nothing" name="new instance does nothing" time="0.003">
    </testcase>
    <testcase
      classname="startInitPolling polls for init response"
      name="startInitPolling polls for init response"
      time="0.205"
    >
    </testcase>
    <testcase
      classname="startInitPolling stops polling after timeout"
      name="startInitPolling stops polling after timeout"
      time="0.502"
    >
    </testcase>
    <testcase
      classname="receive any request with different targetEnvelopeServerId"
      name="receive any request with different targetEnvelopeServerId"
      time="0.001"
    >
    </testcase>
    <testcase
      classname="receive any request with targetEnvelopeId"
      name="receive any request with targetEnvelopeId"
      time="0"
    >
    </testcase>
    <testcase
      classname="receive any request with the same targetEnvelopeServerId"
      name="receive any request with the same targetEnvelopeServerId"
      time="0.008"
    >
    </testcase>
    <testcase
      classname="receive any notification with different targetEnvelopeServerId"
      name="receive any notification with different targetEnvelopeServerId"
      time="0"
    >
    </testcase>
    <testcase
      classname="receive any notification with the same targetEnvelopeServerId"
      name="receive any notification with the same targetEnvelopeServerId"
      time="0"
    >
    </testcase>
    <testcase
      classname="receive any request from another EnvelopeServer"
      name="receive any request from another EnvelopeServer"
      time="0.002"
    >
    </testcase>
  </testsuite>
</testsuites>
