{
  "name": "swf-vscode-extension",
  "version": "0.0.0",
  "description": "Edit Serverless Workflow definitions",
  "license": "Apache-2.0",
  "publisher": "kie-group",
  "keywords": [],
  "homepage": "https://github.com/kiegroup/kie-tools",
  "repository": {
    "type": "git",
    "url": "https://github.com/kiegroup/kie-tools.git"
  },
  "bugs": {
    "url": "https://github.com/kiegroup/kie-tools/issues"
  },
  "browser": "./dist/extension/extensionWeb.js",
  "main": "dist/extension/extension.js",
  "scripts": {
    "build:dev": "rimraf dist && webpack --env dev",
    "build:prod": "rimraf dist && webpack && pnpm pack:prod && pnpm test:e2e",
    "compile": "webpack --env dev",
    "lint": "run-script-if --bool \"$(build-env linters.run)\" --then \"kie-tools--eslint ./src\"",
    "pack:prod": "vsce package --githubBranch main --no-dependencies -o ./dist/serverless_workflow_vscode_extension_$npm_package_version.vsix",
    "run:webmode": "pnpm vscode-test-web --browserType=chromium --extensionDevelopmentPath=. --version=stable",
    "test:e2e": "run-script-if --ignore-errors \"$(build-env endToEndTests.ignoreFailures)\" --bool \"$(build-env endToEndTests.run)\" --then \"pnpm test:e2e:clean\" \"cpr e2e-tests/resources e2e-tests-tmp/resources\" \"tsc --project tsconfig.e2e-tests.json\" \"extest setup-and-run --yarn -c max -u -e ./test-resources -o ./e2e-tests/settings.json out/*.test.js\"",
    "test:e2e:clean": "rimraf ./dist-e2e-tests && rimraf ./test-resources && rimraf ./out && rimraf ./e2e-tests-tmp && rimraf *.vsix",
    "test:e2e:clean:offline": "rimraf ./dist-e2e-tests && rimraf ./out && rimraf ./e2e-tests-tmp && rimraf *.vsix",
    "test:e2e:insider": "rimraf ./test-resources && rimraf ./out && tsc --project tsconfig.e2e-tests.json --skipLibCheck --sourceMap true && extest setup-and-run --yarn -t insider -u -e ./test-resources -o ./e2e-tests/settings.json out/*.test.js",
    "test:e2e:offline": "run-script-if --ignore-errors \"$(build-env endToEndTests.ignoreFailures)\" --bool \"$(build-env endToEndTests.run)\" --then \"pnpm test:e2e:clean:offline\" \"cpr e2e-tests/resources e2e-tests-tmp/resources\" \"tsc --project tsconfig.e2e-tests.json\" \"extest setup-and-run --offline --yarn -c max -u -e ./test-resources -o e2e-tests/settings.json out/*.test.js\"",
    "watch": "webpack --env dev"
  },
  "dependencies": {
    "@kie-tools-core/backend": "workspace:*",
    "@kie-tools-core/editor": "workspace:*",
    "@kie-tools-core/envelope-bus": "workspace:*",
    "@kie-tools-core/i18n": "workspace:*",
    "@kie-tools-core/keyboard-shortcuts": "workspace:*",
    "@kie-tools-core/notifications": "workspace:*",
    "@kie-tools-core/patternfly-base": "workspace:*",
    "@kie-tools-core/vscode-extension": "workspace:*",
    "@kie-tools-core/vscode-java-code-completion": "workspace:*",
    "@kie-tools-core/workspace": "workspace:*",
    "@kie-tools/serverless-workflow-diagram-editor-envelope": "workspace:*",
    "@kie-tools/serverless-workflow-jq-expressions": "workspace:*",
    "@kie-tools/serverless-workflow-language-service": "workspace:*",
    "@kie-tools/serverless-workflow-service-catalog": "workspace:*",
    "@rhoas/registry-instance-sdk": "^0.34.1",
    "monaco-editor": "^0.39.0",
    "monaco-yaml": "^4.0.4",
    "openapi-types": "^7.0.1",
    "vscode-languageserver-textdocument": "^1.0.4",
    "vscode-languageserver-types": "^3.16.0",
    "yaml": "^2.3.2"
  },
  "devDependencies": {
    "@kie-tools-core/webpack-base": "workspace:*",
    "@kie-tools/eslint": "workspace:*",
    "@kie-tools/root-env": "workspace:*",
    "@kie-tools/serverless-workflow-diagram-editor-assets": "workspace:*",
    "@kie-tools/tsconfig": "workspace:*",
    "@kie-tools/vscode-extension-common-test-helpers": "workspace:*",
    "@types/chai": "^4.3.6",
    "@types/fs-extra": "^11.0.1",
    "@types/mocha": "^8.2.2",
    "@types/selenium-webdriver": "^4.1.20",
    "@types/vscode": "1.67.0",
    "@vscode/test-electron": "^2.3.4",
    "@vscode/test-web": "^0.0.30",
    "@vscode/vsce": "^2.20.1",
    "chai": "^4.3.10",
    "copy-webpack-plugin": "^11.0.0",
    "cpr": "^3.0.1",
    "mocha": "^9.2.0",
    "mocha-jenkins-reporter": "^0.4.5",
    "mocha-junit-reporter": "^2.0.2",
    "mocha-multi-reporters": "^1.5.1",
    "monaco-editor-webpack-plugin": "^7.0.1",
    "rimraf": "^3.0.2",
    "sanitize-filename-ts": "^1.0.2",
    "selenium-webdriver": "^4.15.0",
    "typescript": "^4.6.2",
    "vscode-extension-tester": "5.9.1",
    "webpack": "^5.88.2",
    "webpack-cli": "^4.10.0",
    "webpack-dev-server": "^4.15.1",
    "webpack-merge": "^5.9.0"
  },
  "engines": {
    "vscode": "^1.67.0"
  },
  "displayName": "KIE Serverless Workflow Editor",
  "categories": [
    "Other"
  ],
  "contributes": {
    "commands": [
      {
        "command": "extension.kogito.swf.getPreviewSvg",
        "icon": {
          "dark": "./static/svg-icon-dark.png",
          "light": "./static/svg-icon-light.png"
        },
        "title": "Serverless Workflow: Generate SVG"
      },
      {
        "command": "extension.kogito.swf.silentlyGenerateSvg",
        "title": "Serverless Workflow: Generate SVG without any notification"
      },
      {
        "command": "extension.kogito.swf.setupAutomaticallyOpenDiagramEditorAlongsideTextEditor",
        "title": "Serverless Workflow: Setup automatically open Diagram Editor alongside Text Editor"
      },
      {
        "command": "extension.kogito.swf.openAsDiagram",
        "icon": "$(open-preview)",
        "title": "Serverless Workflow: Open as Diagram (to the side)"
      },
      {
        "command": "extension.kogito.swf.openAsSource",
        "icon": "$(go-to-file)",
        "title": "Serverless Workflow: Open as Source"
      },
      {
        "command": "extension.kogito.swf.serviceRegistries.login",
        "title": "Serverless Workflow: Log in Service Registries"
      },
      {
        "command": "extension.kogito.swf.serviceRegistries.refresh",
        "title": "Serverless Workflow: Refresh Service Registries"
      },
      {
        "command": "extension.kogito.swf.serviceRegistries.config",
        "title": "Serverless Workflow: Configure Service Registries"
      }
    ],
    "configuration": {
      "properties": {
        "kogito.swf.automaticallyOpenDiagramEditorAlongsideTextEditor": {
          "default": "Ask next time",
          "enum": [
            "Open automatically",
            "Do not open",
            "Ask next time"
          ],
          "markdownDescription": "When opening Serverless Workflow files, decide whether or not to open the Diagram Editor alongside the text editor. Regardless of the configured option, you can always open the Serverless Workflow Diagram Editor using the 'Open as Diagram' button.",
          "type": "string"
        },
        "kogito.swf.routesStoragePath": {
          "default": "${fileDirname}/routes",
          "markdownDescription": "Directory where camel routes files are stored (defaults to a 'routes' directory in the same path as the Serverless Workflow file).",
          "type": "string"
        },
        "kogito.swf.runOnSave": {
          "default": "extension.kogito.swf.silentlyGenerateSvg",
          "markdownDescription": "Execute a command on each save operation of the Serverless Workflow file.",
          "type": "string"
        },
        "kogito.swf.serviceRegistries": {
          "markdownDescription": "List of Service Registries to fetch artifacts that improve the functions autocompletion mechanism.",
          "properties": {
            "registries": {
              "items": {
                "properties": {
                  "authProvider": {
                    "default": "none",
                    "description": "Authentication type required by the Service Registry instance. It can be 'none' (requires no authentication), 'red-hat-account' to log in by using your Red Hat Account (requires the Red Hat Authentication VS Code extension) or 'oidc' to connect to a custom OpenId Authentication Server",
                    "enum": [
                      "none",
                      "red-hat-account"
                    ],
                    "enumDescriptions": [
                      "No authentication",
                      "Red Hat account login (Requires the Red Hat Authentication extension)"
                    ],
                    "type": "string"
                  },
                  "name": {
                    "description": "Name of the Service Registry instance, will be used as identifier on autocomplete",
                    "type": "string"
                  },
                  "url": {
                    "description": "Url of the Service Registry instance",
                    "format": "uri",
                    "pattern": "^https?://?[-A-Za-z0-9+&@#/%?=_!:.]+[-A-Za-z0-9+&@#/%=~_|]",
                    "type": "string"
                  }
                },
                "required": [
                  "name",
                  "url",
                  "authProvider"
                ],
                "type": "object"
              },
              "type": "array"
            }
          },
          "type": "object"
        },
        "kogito.swf.shouldReferenceServiceRegistryFunctionsWithUrls": {
          "default": false,
          "markdownDescription": "When adding a function coming from a Service Registry, use its URL to reference it, instead of downloading the file.",
          "type": "boolean"
        },
        "kogito.swf.specsStoragePath": {
          "default": "${fileDirname}/specs",
          "markdownDescription": "Directory where spec files are stored (defaults to a 'specs' directory in the same path as the Serverless Workflow file).",
          "type": "string"
        },
        "kogito.swf.svgFilePath": {
          "default": "${fileDirname}",
          "markdownDescription": "Where to save generated SVG files (defaults to same path as the file: `${fileDirname}`).",
          "type": "string"
        },
        "kogito.swf.svgFilenameTemplate": {
          "default": "${fileBasenameNoExtension}.svg",
          "markdownDescription": "Filename template to be used when generating SVG files (defaults to `${fileBasenameNoExtension}.svg`).",
          "type": "string"
        }
      },
      "title": "Serverless Workflow Editor"
    },
    "configurationDefaults": {
      "[json]": {
        "editor.wordBasedSuggestions": false
      },
      "[serverless-workflow-json]": {
        "editor.wordBasedSuggestions": false
      },
      "[serverless-workflow-yaml]": {
        "editor.wordBasedSuggestions": false
      },
      "[yaml]": {
        "editor.wordBasedSuggestions": false
      },
      "files.associations": {
        "*.sw.json": "json",
        "*.sw.yaml": "yaml",
        "*.sw.yml": "yaml"
      },
      "yaml.schemas": {
        "https://serverlessworkflow.io/schemas/0.8/workflow.json": [
          "**/*.sw.yml",
          "**/*.sw.yaml"
        ]
      }
    },
    "customEditors": [
      {
        "displayName": "Serverless Workflow Editor",
        "priority": "option",
        "selector": [
          {
            "filenamePattern": "*.{sw.json,sw.yaml,sw.yml}"
          }
        ],
        "viewType": "kieKogitoWebviewEditorsServerlessWorkflow"
      }
    ],
    "grammars": [
      {
        "language": "serverless-workflow-json",
        "path": "./syntaxes/JSON.tmLanguage.json",
        "scopeName": "source.json"
      },
      {
        "language": "serverless-workflow-yaml",
        "path": "./syntaxes/YAML.tmLanguage.json",
        "scopeName": "source.yaml"
      }
    ],
    "jsonValidation": [
      {
        "fileMatch": "**/*.sw.json",
        "url": "https://serverlessworkflow.io/schemas/0.8/workflow.json"
      }
    ],
    "keybindings": [
      {
        "command": "extension.kogito.swf.openAsDiagram",
        "key": "ctrl+k v",
        "mac": "cmd+k v",
        "when": "!activeCustomEditorId && resourceFilename =~ /^.*\\.sw\\.(json|yaml|yml)$/"
      },
      {
        "command": "extension.kogito.swf.openAsSource",
        "key": "ctrl+k v",
        "mac": "cmd+k v",
        "when": "activeCustomEditorId == kieKogitoWebviewEditorsServerlessWorkflow"
      },
      {
        "command": "extension.kogito.swf.getPreviewSvg",
        "key": "ctrl+k p",
        "mac": "cmd+k p",
        "when": "activeCustomEditorId == kieKogitoWebviewEditorsServerlessWorkflow"
      }
    ],
    "languages": [
      {
        "aliases": [
          "Serverless Workflow (JSON)",
          "sw.json"
        ],
        "configuration": "./languageConfiguration/jsonLanguageConfiguration.json",
        "extensions": [
          ".sw.json"
        ],
        "id": "serverless-workflow-json"
      },
      {
        "aliases": [
          "Serverless Workflow (YAML)",
          "sw.yaml",
          "sw.yml"
        ],
        "configuration": "./languageConfiguration/yamlLanguageConfiguration.json",
        "extensions": [
          ".sw.yml",
          ".sw.yaml"
        ],
        "id": "serverless-workflow-yaml"
      }
    ],
    "menus": {
      "commandPalette": [
        {
          "command": "extension.kogito.swf.getPreviewSvg",
          "when": "activeCustomEditorId == kieKogitoWebviewEditorsServerlessWorkflow"
        },
        {
          "command": "extension.kogito.swf.openAsSource",
          "when": "activeCustomEditorId == kieKogitoWebviewEditorsServerlessWorkflow"
        },
        {
          "command": "extension.kogito.swf.openAsDiagram",
          "when": "!activeCustomEditorId && resourceFilename =~ /^.*\\.sw\\.(json|yaml|yml)/"
        }
      ],
      "editor/title": [
        {
          "command": "extension.kogito.swf.getPreviewSvg",
          "group": "navigation",
          "when": "activeCustomEditorId == kieKogitoWebviewEditorsServerlessWorkflow"
        },
        {
          "command": "extension.kogito.swf.openAsSource",
          "group": "navigation",
          "when": "activeCustomEditorId == kieKogitoWebviewEditorsServerlessWorkflow"
        },
        {
          "command": "extension.kogito.swf.openAsDiagram",
          "group": "navigation",
          "when": "!activeCustomEditorId && resourceFilename =~ /^.*\\.sw\\.(json|yaml|yml)/"
        }
      ]
    }
  },
  "activationEvents": [
    "onLanguage:json",
    "onLanguage:yaml",
    "onLanguage:serverless-workflow-json",
    "onLanguage:serverless-workflow-yaml",
    "onCustomEditor:kieKogitoWebviewEditorsServerlessWorkflow"
  ],
  "extensionDependencies": [
    "redhat.vscode-yaml"
  ],
  "icon": "icon.png",
  "capabilities": {
    "untrustedWorkspaces": {
      "supported": false
    }
  },
  "vsce": {
    "dependencies": false
  }
}