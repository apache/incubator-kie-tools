#
# Licensed to the Apache Software Foundation (ASF) under one
# or more contributor license agreements.  See the NOTICE file
# distributed with this work for additional information
# regarding copyright ownership.  The ASF licenses this file
# to you under the Apache License, Version 2.0 (the
# "License"); you may not use this file except in compliance
# with the License.  You may obtain a copy of the License at
#
#   http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing,
# software distributed under the License is distributed on an
# "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
# KIND, either express or implied.  See the License for the
# specific language governing permissions and limitations
# under the License.
#

apiVersion: sonataflow.org/v1alpha08
kind: SonataFlowPlatform
metadata:
  name: sonataflow-platform
spec:
  persistence:
    postgresql:
      secretRef:
        name: postgres-secrets
        userKey: POSTGRES_USER
        passwordKey: POSTGRES_PASSWORD
      serviceRef:
        name: postgres
        port: 5432
        databaseName: sonataflow
  build:
    template:
      buildArgs:
        - name: QUARKUS_EXTENSIONS
          value: org.kie:kie-addons-quarkus-persistence-jdbc:999-20240623-SNAPSHOT,io.quarkus:quarkus-jdbc-postgresql:3.8.4,io.quarkus:quarkus-agroal:3.8.4
    config:
      strategyOptions:
        KanikoBuildCacheEnabled: "true"
  services:
    dataIndex:
      enabled: true
      podTemplate:
        initContainers:
          - name: init-postgres
            image: registry.access.redhat.com/ubi9/ubi-micro:latest
            imagePullPolicy: IfNotPresent
            command:
              [
                "sh",
                "-c",
                'until (echo 1 > /dev/tcp/postgres.$(cat /var/run/secrets/kubernetes.io/serviceaccount/namespace).svc.cluster.local/5432) >/dev/null 2>&1; do echo "Waiting for postgres server"; sleep 3; done;',
              ]
    jobService:
      enabled: true
      podTemplate:
        initContainers:
          - name: init-postgres
            image: registry.access.redhat.com/ubi9/ubi-micro:latest
            imagePullPolicy: IfNotPresent
            command:
              [
                "sh",
                "-c",
                'until (echo 1 > /dev/tcp/postgres.$(cat /var/run/secrets/kubernetes.io/serviceaccount/namespace).svc.cluster.local/5432) >/dev/null 2>&1; do echo "Waiting for postgres server"; sleep 3; done;',
              ]
