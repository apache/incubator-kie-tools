/*---------------------------------------------------------------------------------------------
 *  Copyright (c) Microsoft Corporation. All rights reserved.
 *  Licensed under the MIT License. See License.txt in the project root for license information.
 *--------------------------------------------------------------------------------------------*/
// Do not edit this file. It is machine generated.
{
	"extension.description": "Node.js 调试支持",
	"node.label": "借助于检查器协议的 Node.js v6.3+",
	"node.sourceMaps.description": "使用 JavaScript 源映射(如果存在)。",
	"outDir.deprecationMessage": "属性 \"outDir\" 已弃用，请改用 \"outFiles\"。",
	"node.outFiles.description": "如果启用了源映射，这些 glob 模式将指定生成的 JavaScript 文件。如果模式以 \"!\" 开始，则排除这些文件。如果未指定，则生成的代码应与其源代码位于同一目录。",
	"node.stopOnEntry.description": "启动后自动停止程序。",
	"node.port.description": "要附加到的调试端口。默认为 9229。",
	"node.address.description": "调试端口的 TCP/IP 地址。默认为 \"localhost\"。",
	"node.timeout.description": "重试连接到 Node.js 的此毫秒数。默认值为 10000 ms。",
	"node.smartStep.description": "自动单步执行无法映射回原始源的生成代码。",
	"node.enableSourceMapCaching.description": "当依照 URL 下载源映射时，将其缓存到磁盘上。",
	"node.diagnosticLogging.description": "当设置为 \"true\" 时，适配器会把诊断信息输出至控制台",
	"node.diagnosticLogging.deprecationMessage": "\"diagnosticLogging\" 已被弃用，请改用 \"trace\"。",
	"node.verboseDiagnosticLogging.description": "当为 \"true\" 时，适配器将记录客户端和目标的所有通信(以及由 \"diagnosticLogging\" 记录的信息)",
	"node.verboseDiagnosticLogging.deprecationMessage": "\"verboseDiagnosticLogging\" 已被弃用。请改为使用 \"trace\"。",
	"node.trace.description": "当为 \"true\" 时，调试器会将跟踪信息记录到文件中。当为 \"verbose\" 时，则它还将在控制台中显示日志。",
	"node.sourceMapPathOverrides.description": "用于根据源映射所述重写源文件位置的一组映射，其将映射到磁盘上所处位置。请参阅自述文件了解详细信息。",
	"node.skipFiles.description": "将在调试时跳过的一组文件名、文件夹名称或 glob 模式。",
	"node.restart.description": "在终止 Node.js 后重启会话。",
	"node.showAsyncStacks.description": "显示引导至当前调用堆栈的异步调用。",
	"node.launch.program.description": "程序的绝对路径。",
	"node.launch.console.description": "启动调试目标的位置: 内部控制台、集成终端或外部终端。",
	"node.launch.args.description": "传递给程序的命令行参数。",
	"node.launch.cwd.description": "正在进行调试的程序的工作目录的绝对路径。",
	"node.launch.runtimeExecutable.description": "要使用的运行时。应为绝对路径或在 PATH 上可用的运行时名称。默认值为 \"node\"。",
	"node.launch.runtimeArgs.description": "传递给运行时可执行文件的可选参数。",
	"node.launch.env.description": "传递给程序的环境变量。若值为 \"null\"，将从环境中移除变量。",
	"node.launch.envFile.description": "包含环境变量定义的文件的绝对路径。",
	"node.launch.outputCapture.description": "捕获输出信息的位置: 调试 API 或者 stdout/stderr 流。",
	"node.launch.config.name": "启动",
	"node.attach.processId.description": "要附加到的进程 ID。",
	"node.attach.localRoot.description": "与 \"remoteRoot\" 对应的本地源根目录。",
	"node.attach.remoteRoot.description": "远程主机的源根目录。",
	"node.attach.config.name": "附加",
	"node.processattach.config.name": "附加到进程",
	"toggle.skipping.this.file": "切换是否跳过此文件",
	"extensionHost.label": "VS Code 扩展开发",
	"extensionHost.launch.runtimeExecutable.description": "VS Code 的绝对路径。",
	"extensionHost.launch.stopOnEntry.description": "启动后自动停止扩展主机。",
	"extensionHost.launch.env.description": "传递到扩展主机的环境变量。",
	"extensionHost.snippet.launch.label": "VS Code 扩展开发",
	"extensionHost.snippet.launch.description": "在调试模式下启动 VS Code 扩展",
	"extensionHost.launch.config.name": "启动扩展"
}