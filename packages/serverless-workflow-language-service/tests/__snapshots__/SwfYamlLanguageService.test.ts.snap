// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`SWF LS YAML code completion Jq completions action data filter completions built-in functions completion cursor after a value - auto-complete the word map 1`] = `2`;

exports[`SWF LS YAML code completion Jq completions action data filter completions built-in functions completion cursor after a value - auto-complete the word map 2`] = `
Array [
  Object {
    "detail": "For any filter x, map(x) will run that filter for each element of the input array, and return the outputs in a new array. map(.+1) will increment each element of an array of numbers.",
    "filterText": "map",
    "insertText": "map(x)",
    "insertTextFormat": 2,
    "kind": 3,
    "label": "map(x)",
    "sortText": "100_map(x)",
    "textEdit": Object {
      "newText": "map(x)",
      "range": Object {
        "end": Object {
          "character": 35,
          "line": 18,
        },
        "start": Object {
          "character": 32,
          "line": 18,
        },
      },
    },
  },
  Object {
    "detail": "map_values(x) will run that filter for each element, but it will return an object when an object is passed.",
    "filterText": "map",
    "insertText": "map_values(x)",
    "insertTextFormat": 2,
    "kind": 3,
    "label": "map_values(x)",
    "sortText": "100_map_values(x)",
    "textEdit": Object {
      "newText": "map_values(x)",
      "range": Object {
        "end": Object {
          "character": 35,
          "line": 18,
        },
        "start": Object {
          "character": 32,
          "line": 18,
        },
      },
    },
  },
]
`;

exports[`SWF LS YAML code completion Jq completions action data filter completions built-in functions completion cursor after some random word 1`] = `140`;

exports[`SWF LS YAML code completion Jq completions action data filter completions built-in functions completion cursor after some random word 2`] = `
Array [
  Object {
    "detail": "The builtin function length gets the length of various different types of value.",
    "filterText": "length",
    "insertText": "length",
    "insertTextFormat": 2,
    "kind": 3,
    "label": "length",
    "sortText": "100_length",
    "textEdit": Object {
      "newText": "length",
      "range": Object {
        "end": Object {
          "character": 42,
          "line": 18,
        },
        "start": Object {
          "character": 42,
          "line": 18,
        },
      },
    },
  },
  Object {
    "detail": "The builtin function utf8bytelength outputs the number of bytes used to encode a string in UTF-8.",
    "filterText": "utf8bytelength",
    "insertText": "utf8bytelength",
    "insertTextFormat": 2,
    "kind": 3,
    "label": "utf8bytelength",
    "sortText": "100_utf8bytelength",
    "textEdit": Object {
      "newText": "'utf8bytelength'",
      "range": Object {
        "end": Object {
          "character": 42,
          "line": 18,
        },
        "start": Object {
          "character": 42,
          "line": 18,
        },
      },
    },
  },
  Object {
    "detail": "The builtin function keys, when given an object, returns its keys in an array.",
    "filterText": "keys",
    "insertText": "keys",
    "insertTextFormat": 2,
    "kind": 3,
    "label": "keys",
    "sortText": "100_keys",
    "textEdit": Object {
      "newText": "keys",
      "range": Object {
        "end": Object {
          "character": 42,
          "line": 18,
        },
        "start": Object {
          "character": 42,
          "line": 18,
        },
      },
    },
  },
  Object {
    "detail": "The keys_unsorted function is just like keys, but if the input is an object then the keys will not be sorted, instead the keys will roughly be in insertion order.",
    "filterText": "keys_unsorted",
    "insertText": "keys_unsorted",
    "insertTextFormat": 2,
    "kind": 3,
    "label": "keys_unsorted",
    "sortText": "100_keys_unsorted",
    "textEdit": Object {
      "newText": "keys_unsorted",
      "range": Object {
        "end": Object {
          "character": 42,
          "line": 18,
        },
        "start": Object {
          "character": 42,
          "line": 18,
        },
      },
    },
  },
  Object {
    "detail": "The builtin function has returns whether the input object has the given key, or the input array has an element at the given index.",
    "filterText": "has(key)",
    "insertText": "has(key)",
    "insertTextFormat": 2,
    "kind": 3,
    "label": "has(key)",
    "sortText": "100_has(key)",
    "textEdit": Object {
      "newText": "has(key)",
      "range": Object {
        "end": Object {
          "character": 42,
          "line": 18,
        },
        "start": Object {
          "character": 42,
          "line": 18,
        },
      },
    },
  },
]
`;

exports[`SWF LS YAML code completion Jq completions action data filter completions built-in functions completion cursor after the dot(variable):/double quotes 1`] = `4`;

exports[`SWF LS YAML code completion Jq completions action data filter completions built-in functions completion cursor after the dot(variable):/double quotes 2`] = `
Array [
  Object {
    "detail": "string",
    "filterText": "name",
    "insertText": "name",
    "insertTextFormat": 2,
    "kind": 12,
    "label": "name",
    "sortText": "100_name",
    "textEdit": Object {
      "newText": "name",
      "range": Object {
        "end": Object {
          "character": 33,
          "line": 18,
        },
        "start": Object {
          "character": 33,
          "line": 18,
        },
      },
    },
  },
  Object {
    "detail": "1",
    "filterText": "age",
    "insertText": "age",
    "insertTextFormat": 2,
    "kind": 12,
    "label": "age",
    "sortText": "100_age",
    "textEdit": Object {
      "newText": "age",
      "range": Object {
        "end": Object {
          "character": 33,
          "line": 18,
        },
        "start": Object {
          "character": 33,
          "line": 18,
        },
      },
    },
  },
  Object {
    "detail": "string",
    "filterText": "avgLoad",
    "insertText": "avgLoad",
    "insertTextFormat": 2,
    "kind": 12,
    "label": "avgLoad",
    "sortText": "100_avgLoad",
    "textEdit": Object {
      "newText": "avgLoad",
      "range": Object {
        "end": Object {
          "character": 33,
          "line": 18,
        },
        "start": Object {
          "character": 33,
          "line": 18,
        },
      },
    },
  },
  Object {
    "detail": "1",
    "filterText": "numberOfPods",
    "insertText": "numberOfPods",
    "insertTextFormat": 2,
    "kind": 12,
    "label": "numberOfPods",
    "sortText": "100_numberOfPods",
    "textEdit": Object {
      "newText": "numberOfPods",
      "range": Object {
        "end": Object {
          "character": 33,
          "line": 18,
        },
        "start": Object {
          "character": 33,
          "line": 18,
        },
      },
    },
  },
]
`;

exports[`SWF LS YAML code completion Jq completions action data filter completions built-in functions completion cursor after the dot(variable):/single quotes 1`] = `4`;

exports[`SWF LS YAML code completion Jq completions action data filter completions built-in functions completion cursor after the dot(variable):/single quotes 2`] = `
Array [
  Object {
    "detail": "string",
    "filterText": "name",
    "insertText": "name",
    "insertTextFormat": 2,
    "kind": 12,
    "label": "name",
    "sortText": "100_name",
    "textEdit": Object {
      "newText": "name",
      "range": Object {
        "end": Object {
          "character": 33,
          "line": 18,
        },
        "start": Object {
          "character": 33,
          "line": 18,
        },
      },
    },
  },
  Object {
    "detail": "1",
    "filterText": "age",
    "insertText": "age",
    "insertTextFormat": 2,
    "kind": 12,
    "label": "age",
    "sortText": "100_age",
    "textEdit": Object {
      "newText": "age",
      "range": Object {
        "end": Object {
          "character": 33,
          "line": 18,
        },
        "start": Object {
          "character": 33,
          "line": 18,
        },
      },
    },
  },
  Object {
    "detail": "string",
    "filterText": "avgLoad",
    "insertText": "avgLoad",
    "insertTextFormat": 2,
    "kind": 12,
    "label": "avgLoad",
    "sortText": "100_avgLoad",
    "textEdit": Object {
      "newText": "avgLoad",
      "range": Object {
        "end": Object {
          "character": 33,
          "line": 18,
        },
        "start": Object {
          "character": 33,
          "line": 18,
        },
      },
    },
  },
  Object {
    "detail": "1",
    "filterText": "numberOfPods",
    "insertText": "numberOfPods",
    "insertTextFormat": 2,
    "kind": 12,
    "label": "numberOfPods",
    "sortText": "100_numberOfPods",
    "textEdit": Object {
      "newText": "numberOfPods",
      "range": Object {
        "end": Object {
          "character": 33,
          "line": 18,
        },
        "start": Object {
          "character": 33,
          "line": 18,
        },
      },
    },
  },
]
`;

exports[`SWF LS YAML code completion Jq completions action data filter completions built-in functions completion cursor before empty space 1`] = `140`;

exports[`SWF LS YAML code completion Jq completions action data filter completions built-in functions completion cursor before empty space 2`] = `
Array [
  Object {
    "detail": "The builtin function length gets the length of various different types of value.",
    "filterText": "length",
    "insertText": "length",
    "insertTextFormat": 2,
    "kind": 3,
    "label": "length",
    "sortText": "100_length",
    "textEdit": Object {
      "newText": "length",
      "range": Object {
        "end": Object {
          "character": 32,
          "line": 18,
        },
        "start": Object {
          "character": 32,
          "line": 18,
        },
      },
    },
  },
  Object {
    "detail": "The builtin function utf8bytelength outputs the number of bytes used to encode a string in UTF-8.",
    "filterText": "utf8bytelength",
    "insertText": "utf8bytelength",
    "insertTextFormat": 2,
    "kind": 3,
    "label": "utf8bytelength",
    "sortText": "100_utf8bytelength",
    "textEdit": Object {
      "newText": "'utf8bytelength'",
      "range": Object {
        "end": Object {
          "character": 32,
          "line": 18,
        },
        "start": Object {
          "character": 32,
          "line": 18,
        },
      },
    },
  },
  Object {
    "detail": "The builtin function keys, when given an object, returns its keys in an array.",
    "filterText": "keys",
    "insertText": "keys",
    "insertTextFormat": 2,
    "kind": 3,
    "label": "keys",
    "sortText": "100_keys",
    "textEdit": Object {
      "newText": "keys",
      "range": Object {
        "end": Object {
          "character": 32,
          "line": 18,
        },
        "start": Object {
          "character": 32,
          "line": 18,
        },
      },
    },
  },
  Object {
    "detail": "The keys_unsorted function is just like keys, but if the input is an object then the keys will not be sorted, instead the keys will roughly be in insertion order.",
    "filterText": "keys_unsorted",
    "insertText": "keys_unsorted",
    "insertTextFormat": 2,
    "kind": 3,
    "label": "keys_unsorted",
    "sortText": "100_keys_unsorted",
    "textEdit": Object {
      "newText": "keys_unsorted",
      "range": Object {
        "end": Object {
          "character": 32,
          "line": 18,
        },
        "start": Object {
          "character": 32,
          "line": 18,
        },
      },
    },
  },
  Object {
    "detail": "The builtin function has returns whether the input object has the given key, or the input array has an element at the given index.",
    "filterText": "has(key)",
    "insertText": "has(key)",
    "insertTextFormat": 2,
    "kind": 3,
    "label": "has(key)",
    "sortText": "100_has(key)",
    "textEdit": Object {
      "newText": "has(key)",
      "range": Object {
        "end": Object {
          "character": 32,
          "line": 18,
        },
        "start": Object {
          "character": 32,
          "line": 18,
        },
      },
    },
  },
]
`;

exports[`SWF LS YAML code completion Jq completions action data filter completions built-in functions completion cursor before the dot(variable) 1`] = `140`;

exports[`SWF LS YAML code completion Jq completions action data filter completions built-in functions completion cursor before the dot(variable) 2`] = `
Array [
  Object {
    "detail": "The builtin function length gets the length of various different types of value.",
    "filterText": "length",
    "insertText": "length",
    "insertTextFormat": 2,
    "kind": 3,
    "label": "length",
    "sortText": "100_length",
    "textEdit": Object {
      "newText": "length",
      "range": Object {
        "end": Object {
          "character": 32,
          "line": 18,
        },
        "start": Object {
          "character": 32,
          "line": 18,
        },
      },
    },
  },
  Object {
    "detail": "The builtin function utf8bytelength outputs the number of bytes used to encode a string in UTF-8.",
    "filterText": "utf8bytelength",
    "insertText": "utf8bytelength",
    "insertTextFormat": 2,
    "kind": 3,
    "label": "utf8bytelength",
    "sortText": "100_utf8bytelength",
    "textEdit": Object {
      "newText": "'utf8bytelength'",
      "range": Object {
        "end": Object {
          "character": 32,
          "line": 18,
        },
        "start": Object {
          "character": 32,
          "line": 18,
        },
      },
    },
  },
  Object {
    "detail": "The builtin function keys, when given an object, returns its keys in an array.",
    "filterText": "keys",
    "insertText": "keys",
    "insertTextFormat": 2,
    "kind": 3,
    "label": "keys",
    "sortText": "100_keys",
    "textEdit": Object {
      "newText": "keys",
      "range": Object {
        "end": Object {
          "character": 32,
          "line": 18,
        },
        "start": Object {
          "character": 32,
          "line": 18,
        },
      },
    },
  },
  Object {
    "detail": "The keys_unsorted function is just like keys, but if the input is an object then the keys will not be sorted, instead the keys will roughly be in insertion order.",
    "filterText": "keys_unsorted",
    "insertText": "keys_unsorted",
    "insertTextFormat": 2,
    "kind": 3,
    "label": "keys_unsorted",
    "sortText": "100_keys_unsorted",
    "textEdit": Object {
      "newText": "keys_unsorted",
      "range": Object {
        "end": Object {
          "character": 32,
          "line": 18,
        },
        "start": Object {
          "character": 32,
          "line": 18,
        },
      },
    },
  },
  Object {
    "detail": "The builtin function has returns whether the input object has the given key, or the input array has an element at the given index.",
    "filterText": "has(key)",
    "insertText": "has(key)",
    "insertTextFormat": 2,
    "kind": 3,
    "label": "has(key)",
    "sortText": "100_has(key)",
    "textEdit": Object {
      "newText": "has(key)",
      "range": Object {
        "end": Object {
          "character": 32,
          "line": 18,
        },
        "start": Object {
          "character": 32,
          "line": 18,
        },
      },
    },
  },
]
`;

exports[`SWF LS YAML code completion Jq completions action data filter completions built-in functions completion cursor with a space after the  dot(variable) 1`] = `140`;

exports[`SWF LS YAML code completion Jq completions action data filter completions built-in functions completion cursor with a space after the  dot(variable) 2`] = `
Array [
  Object {
    "detail": "The builtin function length gets the length of various different types of value.",
    "filterText": "length",
    "insertText": "length",
    "insertTextFormat": 2,
    "kind": 3,
    "label": "length",
    "sortText": "100_length",
    "textEdit": Object {
      "newText": "length",
      "range": Object {
        "end": Object {
          "character": 34,
          "line": 18,
        },
        "start": Object {
          "character": 34,
          "line": 18,
        },
      },
    },
  },
  Object {
    "detail": "The builtin function utf8bytelength outputs the number of bytes used to encode a string in UTF-8.",
    "filterText": "utf8bytelength",
    "insertText": "utf8bytelength",
    "insertTextFormat": 2,
    "kind": 3,
    "label": "utf8bytelength",
    "sortText": "100_utf8bytelength",
    "textEdit": Object {
      "newText": "'utf8bytelength'",
      "range": Object {
        "end": Object {
          "character": 34,
          "line": 18,
        },
        "start": Object {
          "character": 34,
          "line": 18,
        },
      },
    },
  },
  Object {
    "detail": "The builtin function keys, when given an object, returns its keys in an array.",
    "filterText": "keys",
    "insertText": "keys",
    "insertTextFormat": 2,
    "kind": 3,
    "label": "keys",
    "sortText": "100_keys",
    "textEdit": Object {
      "newText": "keys",
      "range": Object {
        "end": Object {
          "character": 34,
          "line": 18,
        },
        "start": Object {
          "character": 34,
          "line": 18,
        },
      },
    },
  },
  Object {
    "detail": "The keys_unsorted function is just like keys, but if the input is an object then the keys will not be sorted, instead the keys will roughly be in insertion order.",
    "filterText": "keys_unsorted",
    "insertText": "keys_unsorted",
    "insertTextFormat": 2,
    "kind": 3,
    "label": "keys_unsorted",
    "sortText": "100_keys_unsorted",
    "textEdit": Object {
      "newText": "keys_unsorted",
      "range": Object {
        "end": Object {
          "character": 34,
          "line": 18,
        },
        "start": Object {
          "character": 34,
          "line": 18,
        },
      },
    },
  },
  Object {
    "detail": "The builtin function has returns whether the input object has the given key, or the input array has an element at the given index.",
    "filterText": "has(key)",
    "insertText": "has(key)",
    "insertTextFormat": 2,
    "kind": 3,
    "label": "has(key)",
    "sortText": "100_has(key)",
    "textEdit": Object {
      "newText": "has(key)",
      "range": Object {
        "end": Object {
          "character": 34,
          "line": 18,
        },
        "start": Object {
          "character": 34,
          "line": 18,
        },
      },
    },
  },
]
`;

exports[`SWF LS YAML code completion Jq completions action data filter completions built-in functions completion cursor with a value following the  dot(variable) 1`] = `2`;

exports[`SWF LS YAML code completion Jq completions action data filter completions built-in functions completion cursor with a value following the  dot(variable) 2`] = `
Array [
  Object {
    "detail": "1",
    "filterText": "a",
    "insertText": "age",
    "insertTextFormat": 2,
    "kind": 12,
    "label": "age",
    "sortText": "100_age",
    "textEdit": Object {
      "newText": "age",
      "range": Object {
        "end": Object {
          "character": 34,
          "line": 18,
        },
        "start": Object {
          "character": 33,
          "line": 18,
        },
      },
    },
  },
  Object {
    "detail": "string",
    "filterText": "a",
    "insertText": "avgLoad",
    "insertTextFormat": 2,
    "kind": 12,
    "label": "avgLoad",
    "sortText": "100_avgLoad",
    "textEdit": Object {
      "newText": "avgLoad",
      "range": Object {
        "end": Object {
          "character": 34,
          "line": 18,
        },
        "start": Object {
          "character": 33,
          "line": 18,
        },
      },
    },
  },
]
`;

exports[`SWF LS YAML code completion Jq completions action data filter completions built-in functions completion empty object 1`] = `0`;

exports[`SWF LS YAML code completion Jq completions action data filter completions built-in functions completion empty object 2`] = `Array []`;

exports[`SWF LS YAML code completion Jq completions action data filter completions built-in functions completion empty object 3`] = `0`;

exports[`SWF LS YAML code completion Jq completions action data filter completions built-in functions completion empty object 4`] = `Array []`;

exports[`SWF LS YAML code completion Jq completions action data filter completions built-in functions completion empty object 5`] = `0`;

exports[`SWF LS YAML code completion Jq completions action data filter completions built-in functions completion empty object 6`] = `Array []`;

exports[`SWF LS YAML code completion Jq completions action data filter completions built-in functions completion fn: after some value 1`] = `2`;

exports[`SWF LS YAML code completion Jq completions action data filter completions built-in functions completion fn: after some value 2`] = `
Array [
  Object {
    "detail": "Reusable functions(expressions) defined in the functions array",
    "filterText": "expressionFunc1",
    "insertText": "expressionFunc1",
    "insertTextFormat": 2,
    "kind": 3,
    "label": "expressionFunc1",
    "sortText": "100_expressionFunc1",
    "textEdit": Object {
      "newText": "'expressionFunc1'",
      "range": Object {
        "end": Object {
          "character": 44,
          "line": 18,
        },
        "start": Object {
          "character": 44,
          "line": 18,
        },
      },
    },
  },
  Object {
    "detail": "Reusable functions(expressions) defined in the functions array",
    "filterText": "expressionFunc2",
    "insertText": "expressionFunc2",
    "insertTextFormat": 2,
    "kind": 3,
    "label": "expressionFunc2",
    "sortText": "100_expressionFunc2",
    "textEdit": Object {
      "newText": "'expressionFunc2'",
      "range": Object {
        "end": Object {
          "character": 44,
          "line": 18,
        },
        "start": Object {
          "character": 44,
          "line": 18,
        },
      },
    },
  },
]
`;

exports[`SWF LS YAML code completion Jq completions action data filter completions built-in functions completion fn: starting with a 1`] = `0`;

exports[`SWF LS YAML code completion Jq completions action data filter completions built-in functions completion fn: starting with a 2`] = `Array []`;

exports[`SWF LS YAML code completion Jq completions action data filter completions built-in functions completion fn: starting with r 1`] = `0`;

exports[`SWF LS YAML code completion Jq completions action data filter completions built-in functions completion fn: starting with r 2`] = `Array []`;

exports[`SWF LS YAML code completion Jq completions action data filter completions built-in functions completion no value/double quotes 1`] = `140`;

exports[`SWF LS YAML code completion Jq completions action data filter completions built-in functions completion no value/double quotes 2`] = `
Array [
  Object {
    "detail": "The builtin function length gets the length of various different types of value.",
    "filterText": "length",
    "insertText": "length",
    "insertTextFormat": 2,
    "kind": 3,
    "label": "length",
    "sortText": "100_length",
    "textEdit": Object {
      "newText": "length",
      "range": Object {
        "end": Object {
          "character": 32,
          "line": 18,
        },
        "start": Object {
          "character": 32,
          "line": 18,
        },
      },
    },
  },
  Object {
    "detail": "The builtin function utf8bytelength outputs the number of bytes used to encode a string in UTF-8.",
    "filterText": "utf8bytelength",
    "insertText": "utf8bytelength",
    "insertTextFormat": 2,
    "kind": 3,
    "label": "utf8bytelength",
    "sortText": "100_utf8bytelength",
    "textEdit": Object {
      "newText": "'utf8bytelength'",
      "range": Object {
        "end": Object {
          "character": 32,
          "line": 18,
        },
        "start": Object {
          "character": 32,
          "line": 18,
        },
      },
    },
  },
  Object {
    "detail": "The builtin function keys, when given an object, returns its keys in an array.",
    "filterText": "keys",
    "insertText": "keys",
    "insertTextFormat": 2,
    "kind": 3,
    "label": "keys",
    "sortText": "100_keys",
    "textEdit": Object {
      "newText": "keys",
      "range": Object {
        "end": Object {
          "character": 32,
          "line": 18,
        },
        "start": Object {
          "character": 32,
          "line": 18,
        },
      },
    },
  },
  Object {
    "detail": "The keys_unsorted function is just like keys, but if the input is an object then the keys will not be sorted, instead the keys will roughly be in insertion order.",
    "filterText": "keys_unsorted",
    "insertText": "keys_unsorted",
    "insertTextFormat": 2,
    "kind": 3,
    "label": "keys_unsorted",
    "sortText": "100_keys_unsorted",
    "textEdit": Object {
      "newText": "keys_unsorted",
      "range": Object {
        "end": Object {
          "character": 32,
          "line": 18,
        },
        "start": Object {
          "character": 32,
          "line": 18,
        },
      },
    },
  },
  Object {
    "detail": "The builtin function has returns whether the input object has the given key, or the input array has an element at the given index.",
    "filterText": "has(key)",
    "insertText": "has(key)",
    "insertTextFormat": 2,
    "kind": 3,
    "label": "has(key)",
    "sortText": "100_has(key)",
    "textEdit": Object {
      "newText": "has(key)",
      "range": Object {
        "end": Object {
          "character": 32,
          "line": 18,
        },
        "start": Object {
          "character": 32,
          "line": 18,
        },
      },
    },
  },
]
`;

exports[`SWF LS YAML code completion Jq completions action data filter completions built-in functions completion no value/single quotes 1`] = `140`;

exports[`SWF LS YAML code completion Jq completions action data filter completions built-in functions completion no value/single quotes 2`] = `
Array [
  Object {
    "detail": "The builtin function length gets the length of various different types of value.",
    "filterText": "length",
    "insertText": "length",
    "insertTextFormat": 2,
    "kind": 3,
    "label": "length",
    "sortText": "100_length",
    "textEdit": Object {
      "newText": "length",
      "range": Object {
        "end": Object {
          "character": 32,
          "line": 18,
        },
        "start": Object {
          "character": 32,
          "line": 18,
        },
      },
    },
  },
  Object {
    "detail": "The builtin function utf8bytelength outputs the number of bytes used to encode a string in UTF-8.",
    "filterText": "utf8bytelength",
    "insertText": "utf8bytelength",
    "insertTextFormat": 2,
    "kind": 3,
    "label": "utf8bytelength",
    "sortText": "100_utf8bytelength",
    "textEdit": Object {
      "newText": "'utf8bytelength'",
      "range": Object {
        "end": Object {
          "character": 32,
          "line": 18,
        },
        "start": Object {
          "character": 32,
          "line": 18,
        },
      },
    },
  },
  Object {
    "detail": "The builtin function keys, when given an object, returns its keys in an array.",
    "filterText": "keys",
    "insertText": "keys",
    "insertTextFormat": 2,
    "kind": 3,
    "label": "keys",
    "sortText": "100_keys",
    "textEdit": Object {
      "newText": "keys",
      "range": Object {
        "end": Object {
          "character": 32,
          "line": 18,
        },
        "start": Object {
          "character": 32,
          "line": 18,
        },
      },
    },
  },
  Object {
    "detail": "The keys_unsorted function is just like keys, but if the input is an object then the keys will not be sorted, instead the keys will roughly be in insertion order.",
    "filterText": "keys_unsorted",
    "insertText": "keys_unsorted",
    "insertTextFormat": 2,
    "kind": 3,
    "label": "keys_unsorted",
    "sortText": "100_keys_unsorted",
    "textEdit": Object {
      "newText": "keys_unsorted",
      "range": Object {
        "end": Object {
          "character": 32,
          "line": 18,
        },
        "start": Object {
          "character": 32,
          "line": 18,
        },
      },
    },
  },
  Object {
    "detail": "The builtin function has returns whether the input object has the given key, or the input array has an element at the given index.",
    "filterText": "has(key)",
    "insertText": "has(key)",
    "insertTextFormat": 2,
    "kind": 3,
    "label": "has(key)",
    "sortText": "100_has(key)",
    "textEdit": Object {
      "newText": "has(key)",
      "range": Object {
        "end": Object {
          "character": 32,
          "line": 18,
        },
        "start": Object {
          "character": 32,
          "line": 18,
        },
      },
    },
  },
]
`;

exports[`SWF LS YAML code completion Jq completions action data filter completions built-in functions completion space before fn: 1`] = `2`;

exports[`SWF LS YAML code completion Jq completions action data filter completions built-in functions completion space before fn: 2`] = `
Array [
  Object {
    "detail": "Reusable functions(expressions) defined in the functions array",
    "filterText": "expressionFunc1",
    "insertText": "expressionFunc1",
    "insertTextFormat": 2,
    "kind": 3,
    "label": "expressionFunc1",
    "sortText": "100_expressionFunc1",
    "textEdit": Object {
      "newText": "'expressionFunc1'",
      "range": Object {
        "end": Object {
          "character": 36,
          "line": 18,
        },
        "start": Object {
          "character": 36,
          "line": 18,
        },
      },
    },
  },
  Object {
    "detail": "Reusable functions(expressions) defined in the functions array",
    "filterText": "expressionFunc2",
    "insertText": "expressionFunc2",
    "insertTextFormat": 2,
    "kind": 3,
    "label": "expressionFunc2",
    "sortText": "100_expressionFunc2",
    "textEdit": Object {
      "newText": "'expressionFunc2'",
      "range": Object {
        "end": Object {
          "character": 36,
          "line": 18,
        },
        "start": Object {
          "character": 36,
          "line": 18,
        },
      },
    },
  },
]
`;

exports[`SWF LS YAML code completion Jq completions action data filter completions built-in functions completion value fn:/double quotes 1`] = `2`;

exports[`SWF LS YAML code completion Jq completions action data filter completions built-in functions completion value fn:/double quotes 2`] = `
Array [
  Object {
    "detail": "Reusable functions(expressions) defined in the functions array",
    "filterText": "expressionFunc1",
    "insertText": "expressionFunc1",
    "insertTextFormat": 2,
    "kind": 3,
    "label": "expressionFunc1",
    "sortText": "100_expressionFunc1",
    "textEdit": Object {
      "newText": "'expressionFunc1'",
      "range": Object {
        "end": Object {
          "character": 35,
          "line": 18,
        },
        "start": Object {
          "character": 35,
          "line": 18,
        },
      },
    },
  },
  Object {
    "detail": "Reusable functions(expressions) defined in the functions array",
    "filterText": "expressionFunc2",
    "insertText": "expressionFunc2",
    "insertTextFormat": 2,
    "kind": 3,
    "label": "expressionFunc2",
    "sortText": "100_expressionFunc2",
    "textEdit": Object {
      "newText": "'expressionFunc2'",
      "range": Object {
        "end": Object {
          "character": 35,
          "line": 18,
        },
        "start": Object {
          "character": 35,
          "line": 18,
        },
      },
    },
  },
]
`;

exports[`SWF LS YAML code completion Jq completions action data filter completions built-in functions completion value fn:/single quotes 1`] = `2`;

exports[`SWF LS YAML code completion Jq completions action data filter completions built-in functions completion value fn:/single quotes 2`] = `
Array [
  Object {
    "detail": "Reusable functions(expressions) defined in the functions array",
    "filterText": "expressionFunc1",
    "insertText": "expressionFunc1",
    "insertTextFormat": 2,
    "kind": 3,
    "label": "expressionFunc1",
    "sortText": "100_expressionFunc1",
    "textEdit": Object {
      "newText": "'expressionFunc1'",
      "range": Object {
        "end": Object {
          "character": 35,
          "line": 18,
        },
        "start": Object {
          "character": 35,
          "line": 18,
        },
      },
    },
  },
  Object {
    "detail": "Reusable functions(expressions) defined in the functions array",
    "filterText": "expressionFunc2",
    "insertText": "expressionFunc2",
    "insertTextFormat": 2,
    "kind": 3,
    "label": "expressionFunc2",
    "sortText": "100_expressionFunc2",
    "textEdit": Object {
      "newText": "'expressionFunc2'",
      "range": Object {
        "end": Object {
          "character": 35,
          "line": 18,
        },
        "start": Object {
          "character": 35,
          "line": 18,
        },
      },
    },
  },
]
`;

exports[`SWF LS YAML code completion Jq completions action data filter completions variables completion cursor after a value - auto-complete the word map 1`] = `2`;

exports[`SWF LS YAML code completion Jq completions action data filter completions variables completion cursor after a value - auto-complete the word map 2`] = `
Array [
  Object {
    "detail": "For any filter x, map(x) will run that filter for each element of the input array, and return the outputs in a new array. map(.+1) will increment each element of an array of numbers.",
    "filterText": "map",
    "insertText": "map(x)",
    "insertTextFormat": 2,
    "kind": 3,
    "label": "map(x)",
    "sortText": "100_map(x)",
    "textEdit": Object {
      "newText": "map(x)",
      "range": Object {
        "end": Object {
          "character": 35,
          "line": 18,
        },
        "start": Object {
          "character": 32,
          "line": 18,
        },
      },
    },
  },
  Object {
    "detail": "map_values(x) will run that filter for each element, but it will return an object when an object is passed.",
    "filterText": "map",
    "insertText": "map_values(x)",
    "insertTextFormat": 2,
    "kind": 3,
    "label": "map_values(x)",
    "sortText": "100_map_values(x)",
    "textEdit": Object {
      "newText": "map_values(x)",
      "range": Object {
        "end": Object {
          "character": 35,
          "line": 18,
        },
        "start": Object {
          "character": 32,
          "line": 18,
        },
      },
    },
  },
]
`;

exports[`SWF LS YAML code completion Jq completions action data filter completions variables completion cursor after some random word 1`] = `140`;

exports[`SWF LS YAML code completion Jq completions action data filter completions variables completion cursor after some random word 2`] = `
Array [
  Object {
    "detail": "The builtin function length gets the length of various different types of value.",
    "filterText": "length",
    "insertText": "length",
    "insertTextFormat": 2,
    "kind": 3,
    "label": "length",
    "sortText": "100_length",
    "textEdit": Object {
      "newText": "length",
      "range": Object {
        "end": Object {
          "character": 42,
          "line": 18,
        },
        "start": Object {
          "character": 42,
          "line": 18,
        },
      },
    },
  },
  Object {
    "detail": "The builtin function utf8bytelength outputs the number of bytes used to encode a string in UTF-8.",
    "filterText": "utf8bytelength",
    "insertText": "utf8bytelength",
    "insertTextFormat": 2,
    "kind": 3,
    "label": "utf8bytelength",
    "sortText": "100_utf8bytelength",
    "textEdit": Object {
      "newText": "'utf8bytelength'",
      "range": Object {
        "end": Object {
          "character": 42,
          "line": 18,
        },
        "start": Object {
          "character": 42,
          "line": 18,
        },
      },
    },
  },
  Object {
    "detail": "The builtin function keys, when given an object, returns its keys in an array.",
    "filterText": "keys",
    "insertText": "keys",
    "insertTextFormat": 2,
    "kind": 3,
    "label": "keys",
    "sortText": "100_keys",
    "textEdit": Object {
      "newText": "keys",
      "range": Object {
        "end": Object {
          "character": 42,
          "line": 18,
        },
        "start": Object {
          "character": 42,
          "line": 18,
        },
      },
    },
  },
  Object {
    "detail": "The keys_unsorted function is just like keys, but if the input is an object then the keys will not be sorted, instead the keys will roughly be in insertion order.",
    "filterText": "keys_unsorted",
    "insertText": "keys_unsorted",
    "insertTextFormat": 2,
    "kind": 3,
    "label": "keys_unsorted",
    "sortText": "100_keys_unsorted",
    "textEdit": Object {
      "newText": "keys_unsorted",
      "range": Object {
        "end": Object {
          "character": 42,
          "line": 18,
        },
        "start": Object {
          "character": 42,
          "line": 18,
        },
      },
    },
  },
  Object {
    "detail": "The builtin function has returns whether the input object has the given key, or the input array has an element at the given index.",
    "filterText": "has(key)",
    "insertText": "has(key)",
    "insertTextFormat": 2,
    "kind": 3,
    "label": "has(key)",
    "sortText": "100_has(key)",
    "textEdit": Object {
      "newText": "has(key)",
      "range": Object {
        "end": Object {
          "character": 42,
          "line": 18,
        },
        "start": Object {
          "character": 42,
          "line": 18,
        },
      },
    },
  },
]
`;

exports[`SWF LS YAML code completion Jq completions action data filter completions variables completion cursor after the dot(variable):/double quotes 1`] = `4`;

exports[`SWF LS YAML code completion Jq completions action data filter completions variables completion cursor after the dot(variable):/double quotes 2`] = `
Array [
  Object {
    "detail": "string",
    "filterText": "name",
    "insertText": "name",
    "insertTextFormat": 2,
    "kind": 12,
    "label": "name",
    "sortText": "100_name",
    "textEdit": Object {
      "newText": "name",
      "range": Object {
        "end": Object {
          "character": 33,
          "line": 18,
        },
        "start": Object {
          "character": 33,
          "line": 18,
        },
      },
    },
  },
  Object {
    "detail": "1",
    "filterText": "age",
    "insertText": "age",
    "insertTextFormat": 2,
    "kind": 12,
    "label": "age",
    "sortText": "100_age",
    "textEdit": Object {
      "newText": "age",
      "range": Object {
        "end": Object {
          "character": 33,
          "line": 18,
        },
        "start": Object {
          "character": 33,
          "line": 18,
        },
      },
    },
  },
  Object {
    "detail": "string",
    "filterText": "avgLoad",
    "insertText": "avgLoad",
    "insertTextFormat": 2,
    "kind": 12,
    "label": "avgLoad",
    "sortText": "100_avgLoad",
    "textEdit": Object {
      "newText": "avgLoad",
      "range": Object {
        "end": Object {
          "character": 33,
          "line": 18,
        },
        "start": Object {
          "character": 33,
          "line": 18,
        },
      },
    },
  },
  Object {
    "detail": "1",
    "filterText": "numberOfPods",
    "insertText": "numberOfPods",
    "insertTextFormat": 2,
    "kind": 12,
    "label": "numberOfPods",
    "sortText": "100_numberOfPods",
    "textEdit": Object {
      "newText": "numberOfPods",
      "range": Object {
        "end": Object {
          "character": 33,
          "line": 18,
        },
        "start": Object {
          "character": 33,
          "line": 18,
        },
      },
    },
  },
]
`;

exports[`SWF LS YAML code completion Jq completions action data filter completions variables completion cursor after the dot(variable):/single quotes 1`] = `4`;

exports[`SWF LS YAML code completion Jq completions action data filter completions variables completion cursor after the dot(variable):/single quotes 2`] = `
Array [
  Object {
    "detail": "string",
    "filterText": "name",
    "insertText": "name",
    "insertTextFormat": 2,
    "kind": 12,
    "label": "name",
    "sortText": "100_name",
    "textEdit": Object {
      "newText": "name",
      "range": Object {
        "end": Object {
          "character": 33,
          "line": 18,
        },
        "start": Object {
          "character": 33,
          "line": 18,
        },
      },
    },
  },
  Object {
    "detail": "1",
    "filterText": "age",
    "insertText": "age",
    "insertTextFormat": 2,
    "kind": 12,
    "label": "age",
    "sortText": "100_age",
    "textEdit": Object {
      "newText": "age",
      "range": Object {
        "end": Object {
          "character": 33,
          "line": 18,
        },
        "start": Object {
          "character": 33,
          "line": 18,
        },
      },
    },
  },
  Object {
    "detail": "string",
    "filterText": "avgLoad",
    "insertText": "avgLoad",
    "insertTextFormat": 2,
    "kind": 12,
    "label": "avgLoad",
    "sortText": "100_avgLoad",
    "textEdit": Object {
      "newText": "avgLoad",
      "range": Object {
        "end": Object {
          "character": 33,
          "line": 18,
        },
        "start": Object {
          "character": 33,
          "line": 18,
        },
      },
    },
  },
  Object {
    "detail": "1",
    "filterText": "numberOfPods",
    "insertText": "numberOfPods",
    "insertTextFormat": 2,
    "kind": 12,
    "label": "numberOfPods",
    "sortText": "100_numberOfPods",
    "textEdit": Object {
      "newText": "numberOfPods",
      "range": Object {
        "end": Object {
          "character": 33,
          "line": 18,
        },
        "start": Object {
          "character": 33,
          "line": 18,
        },
      },
    },
  },
]
`;

exports[`SWF LS YAML code completion Jq completions action data filter completions variables completion cursor before empty space 1`] = `140`;

exports[`SWF LS YAML code completion Jq completions action data filter completions variables completion cursor before empty space 2`] = `
Array [
  Object {
    "detail": "The builtin function length gets the length of various different types of value.",
    "filterText": "length",
    "insertText": "length",
    "insertTextFormat": 2,
    "kind": 3,
    "label": "length",
    "sortText": "100_length",
    "textEdit": Object {
      "newText": "length",
      "range": Object {
        "end": Object {
          "character": 32,
          "line": 18,
        },
        "start": Object {
          "character": 32,
          "line": 18,
        },
      },
    },
  },
  Object {
    "detail": "The builtin function utf8bytelength outputs the number of bytes used to encode a string in UTF-8.",
    "filterText": "utf8bytelength",
    "insertText": "utf8bytelength",
    "insertTextFormat": 2,
    "kind": 3,
    "label": "utf8bytelength",
    "sortText": "100_utf8bytelength",
    "textEdit": Object {
      "newText": "'utf8bytelength'",
      "range": Object {
        "end": Object {
          "character": 32,
          "line": 18,
        },
        "start": Object {
          "character": 32,
          "line": 18,
        },
      },
    },
  },
  Object {
    "detail": "The builtin function keys, when given an object, returns its keys in an array.",
    "filterText": "keys",
    "insertText": "keys",
    "insertTextFormat": 2,
    "kind": 3,
    "label": "keys",
    "sortText": "100_keys",
    "textEdit": Object {
      "newText": "keys",
      "range": Object {
        "end": Object {
          "character": 32,
          "line": 18,
        },
        "start": Object {
          "character": 32,
          "line": 18,
        },
      },
    },
  },
  Object {
    "detail": "The keys_unsorted function is just like keys, but if the input is an object then the keys will not be sorted, instead the keys will roughly be in insertion order.",
    "filterText": "keys_unsorted",
    "insertText": "keys_unsorted",
    "insertTextFormat": 2,
    "kind": 3,
    "label": "keys_unsorted",
    "sortText": "100_keys_unsorted",
    "textEdit": Object {
      "newText": "keys_unsorted",
      "range": Object {
        "end": Object {
          "character": 32,
          "line": 18,
        },
        "start": Object {
          "character": 32,
          "line": 18,
        },
      },
    },
  },
  Object {
    "detail": "The builtin function has returns whether the input object has the given key, or the input array has an element at the given index.",
    "filterText": "has(key)",
    "insertText": "has(key)",
    "insertTextFormat": 2,
    "kind": 3,
    "label": "has(key)",
    "sortText": "100_has(key)",
    "textEdit": Object {
      "newText": "has(key)",
      "range": Object {
        "end": Object {
          "character": 32,
          "line": 18,
        },
        "start": Object {
          "character": 32,
          "line": 18,
        },
      },
    },
  },
]
`;

exports[`SWF LS YAML code completion Jq completions action data filter completions variables completion cursor before the dot(variable) 1`] = `140`;

exports[`SWF LS YAML code completion Jq completions action data filter completions variables completion cursor before the dot(variable) 2`] = `
Array [
  Object {
    "detail": "The builtin function length gets the length of various different types of value.",
    "filterText": "length",
    "insertText": "length",
    "insertTextFormat": 2,
    "kind": 3,
    "label": "length",
    "sortText": "100_length",
    "textEdit": Object {
      "newText": "length",
      "range": Object {
        "end": Object {
          "character": 32,
          "line": 18,
        },
        "start": Object {
          "character": 32,
          "line": 18,
        },
      },
    },
  },
  Object {
    "detail": "The builtin function utf8bytelength outputs the number of bytes used to encode a string in UTF-8.",
    "filterText": "utf8bytelength",
    "insertText": "utf8bytelength",
    "insertTextFormat": 2,
    "kind": 3,
    "label": "utf8bytelength",
    "sortText": "100_utf8bytelength",
    "textEdit": Object {
      "newText": "'utf8bytelength'",
      "range": Object {
        "end": Object {
          "character": 32,
          "line": 18,
        },
        "start": Object {
          "character": 32,
          "line": 18,
        },
      },
    },
  },
  Object {
    "detail": "The builtin function keys, when given an object, returns its keys in an array.",
    "filterText": "keys",
    "insertText": "keys",
    "insertTextFormat": 2,
    "kind": 3,
    "label": "keys",
    "sortText": "100_keys",
    "textEdit": Object {
      "newText": "keys",
      "range": Object {
        "end": Object {
          "character": 32,
          "line": 18,
        },
        "start": Object {
          "character": 32,
          "line": 18,
        },
      },
    },
  },
  Object {
    "detail": "The keys_unsorted function is just like keys, but if the input is an object then the keys will not be sorted, instead the keys will roughly be in insertion order.",
    "filterText": "keys_unsorted",
    "insertText": "keys_unsorted",
    "insertTextFormat": 2,
    "kind": 3,
    "label": "keys_unsorted",
    "sortText": "100_keys_unsorted",
    "textEdit": Object {
      "newText": "keys_unsorted",
      "range": Object {
        "end": Object {
          "character": 32,
          "line": 18,
        },
        "start": Object {
          "character": 32,
          "line": 18,
        },
      },
    },
  },
  Object {
    "detail": "The builtin function has returns whether the input object has the given key, or the input array has an element at the given index.",
    "filterText": "has(key)",
    "insertText": "has(key)",
    "insertTextFormat": 2,
    "kind": 3,
    "label": "has(key)",
    "sortText": "100_has(key)",
    "textEdit": Object {
      "newText": "has(key)",
      "range": Object {
        "end": Object {
          "character": 32,
          "line": 18,
        },
        "start": Object {
          "character": 32,
          "line": 18,
        },
      },
    },
  },
]
`;

exports[`SWF LS YAML code completion Jq completions action data filter completions variables completion cursor with a space after the  dot(variable) 1`] = `140`;

exports[`SWF LS YAML code completion Jq completions action data filter completions variables completion cursor with a space after the  dot(variable) 2`] = `
Array [
  Object {
    "detail": "The builtin function length gets the length of various different types of value.",
    "filterText": "length",
    "insertText": "length",
    "insertTextFormat": 2,
    "kind": 3,
    "label": "length",
    "sortText": "100_length",
    "textEdit": Object {
      "newText": "length",
      "range": Object {
        "end": Object {
          "character": 34,
          "line": 18,
        },
        "start": Object {
          "character": 34,
          "line": 18,
        },
      },
    },
  },
  Object {
    "detail": "The builtin function utf8bytelength outputs the number of bytes used to encode a string in UTF-8.",
    "filterText": "utf8bytelength",
    "insertText": "utf8bytelength",
    "insertTextFormat": 2,
    "kind": 3,
    "label": "utf8bytelength",
    "sortText": "100_utf8bytelength",
    "textEdit": Object {
      "newText": "'utf8bytelength'",
      "range": Object {
        "end": Object {
          "character": 34,
          "line": 18,
        },
        "start": Object {
          "character": 34,
          "line": 18,
        },
      },
    },
  },
  Object {
    "detail": "The builtin function keys, when given an object, returns its keys in an array.",
    "filterText": "keys",
    "insertText": "keys",
    "insertTextFormat": 2,
    "kind": 3,
    "label": "keys",
    "sortText": "100_keys",
    "textEdit": Object {
      "newText": "keys",
      "range": Object {
        "end": Object {
          "character": 34,
          "line": 18,
        },
        "start": Object {
          "character": 34,
          "line": 18,
        },
      },
    },
  },
  Object {
    "detail": "The keys_unsorted function is just like keys, but if the input is an object then the keys will not be sorted, instead the keys will roughly be in insertion order.",
    "filterText": "keys_unsorted",
    "insertText": "keys_unsorted",
    "insertTextFormat": 2,
    "kind": 3,
    "label": "keys_unsorted",
    "sortText": "100_keys_unsorted",
    "textEdit": Object {
      "newText": "keys_unsorted",
      "range": Object {
        "end": Object {
          "character": 34,
          "line": 18,
        },
        "start": Object {
          "character": 34,
          "line": 18,
        },
      },
    },
  },
  Object {
    "detail": "The builtin function has returns whether the input object has the given key, or the input array has an element at the given index.",
    "filterText": "has(key)",
    "insertText": "has(key)",
    "insertTextFormat": 2,
    "kind": 3,
    "label": "has(key)",
    "sortText": "100_has(key)",
    "textEdit": Object {
      "newText": "has(key)",
      "range": Object {
        "end": Object {
          "character": 34,
          "line": 18,
        },
        "start": Object {
          "character": 34,
          "line": 18,
        },
      },
    },
  },
]
`;

exports[`SWF LS YAML code completion Jq completions action data filter completions variables completion cursor with a value following the  dot(variable) 1`] = `2`;

exports[`SWF LS YAML code completion Jq completions action data filter completions variables completion cursor with a value following the  dot(variable) 2`] = `
Array [
  Object {
    "detail": "1",
    "filterText": "a",
    "insertText": "age",
    "insertTextFormat": 2,
    "kind": 12,
    "label": "age",
    "sortText": "100_age",
    "textEdit": Object {
      "newText": "age",
      "range": Object {
        "end": Object {
          "character": 34,
          "line": 18,
        },
        "start": Object {
          "character": 33,
          "line": 18,
        },
      },
    },
  },
  Object {
    "detail": "string",
    "filterText": "a",
    "insertText": "avgLoad",
    "insertTextFormat": 2,
    "kind": 12,
    "label": "avgLoad",
    "sortText": "100_avgLoad",
    "textEdit": Object {
      "newText": "avgLoad",
      "range": Object {
        "end": Object {
          "character": 34,
          "line": 18,
        },
        "start": Object {
          "character": 33,
          "line": 18,
        },
      },
    },
  },
]
`;

exports[`SWF LS YAML code completion Jq completions action data filter completions variables completion empty object 1`] = `0`;

exports[`SWF LS YAML code completion Jq completions action data filter completions variables completion empty object 2`] = `Array []`;

exports[`SWF LS YAML code completion Jq completions action data filter completions variables completion empty object 3`] = `0`;

exports[`SWF LS YAML code completion Jq completions action data filter completions variables completion empty object 4`] = `Array []`;

exports[`SWF LS YAML code completion Jq completions action data filter completions variables completion empty object 5`] = `0`;

exports[`SWF LS YAML code completion Jq completions action data filter completions variables completion empty object 6`] = `Array []`;

exports[`SWF LS YAML code completion Jq completions action data filter completions variables completion fn: after some value 1`] = `2`;

exports[`SWF LS YAML code completion Jq completions action data filter completions variables completion fn: after some value 2`] = `
Array [
  Object {
    "detail": "Reusable functions(expressions) defined in the functions array",
    "filterText": "expressionFunc1",
    "insertText": "expressionFunc1",
    "insertTextFormat": 2,
    "kind": 3,
    "label": "expressionFunc1",
    "sortText": "100_expressionFunc1",
    "textEdit": Object {
      "newText": "'expressionFunc1'",
      "range": Object {
        "end": Object {
          "character": 44,
          "line": 18,
        },
        "start": Object {
          "character": 44,
          "line": 18,
        },
      },
    },
  },
  Object {
    "detail": "Reusable functions(expressions) defined in the functions array",
    "filterText": "expressionFunc2",
    "insertText": "expressionFunc2",
    "insertTextFormat": 2,
    "kind": 3,
    "label": "expressionFunc2",
    "sortText": "100_expressionFunc2",
    "textEdit": Object {
      "newText": "'expressionFunc2'",
      "range": Object {
        "end": Object {
          "character": 44,
          "line": 18,
        },
        "start": Object {
          "character": 44,
          "line": 18,
        },
      },
    },
  },
]
`;

exports[`SWF LS YAML code completion Jq completions action data filter completions variables completion fn: starting with a 1`] = `0`;

exports[`SWF LS YAML code completion Jq completions action data filter completions variables completion fn: starting with a 2`] = `Array []`;

exports[`SWF LS YAML code completion Jq completions action data filter completions variables completion fn: starting with r 1`] = `0`;

exports[`SWF LS YAML code completion Jq completions action data filter completions variables completion fn: starting with r 2`] = `Array []`;

exports[`SWF LS YAML code completion Jq completions action data filter completions variables completion no value/double quotes 1`] = `140`;

exports[`SWF LS YAML code completion Jq completions action data filter completions variables completion no value/double quotes 2`] = `
Array [
  Object {
    "detail": "The builtin function length gets the length of various different types of value.",
    "filterText": "length",
    "insertText": "length",
    "insertTextFormat": 2,
    "kind": 3,
    "label": "length",
    "sortText": "100_length",
    "textEdit": Object {
      "newText": "length",
      "range": Object {
        "end": Object {
          "character": 32,
          "line": 18,
        },
        "start": Object {
          "character": 32,
          "line": 18,
        },
      },
    },
  },
  Object {
    "detail": "The builtin function utf8bytelength outputs the number of bytes used to encode a string in UTF-8.",
    "filterText": "utf8bytelength",
    "insertText": "utf8bytelength",
    "insertTextFormat": 2,
    "kind": 3,
    "label": "utf8bytelength",
    "sortText": "100_utf8bytelength",
    "textEdit": Object {
      "newText": "'utf8bytelength'",
      "range": Object {
        "end": Object {
          "character": 32,
          "line": 18,
        },
        "start": Object {
          "character": 32,
          "line": 18,
        },
      },
    },
  },
  Object {
    "detail": "The builtin function keys, when given an object, returns its keys in an array.",
    "filterText": "keys",
    "insertText": "keys",
    "insertTextFormat": 2,
    "kind": 3,
    "label": "keys",
    "sortText": "100_keys",
    "textEdit": Object {
      "newText": "keys",
      "range": Object {
        "end": Object {
          "character": 32,
          "line": 18,
        },
        "start": Object {
          "character": 32,
          "line": 18,
        },
      },
    },
  },
  Object {
    "detail": "The keys_unsorted function is just like keys, but if the input is an object then the keys will not be sorted, instead the keys will roughly be in insertion order.",
    "filterText": "keys_unsorted",
    "insertText": "keys_unsorted",
    "insertTextFormat": 2,
    "kind": 3,
    "label": "keys_unsorted",
    "sortText": "100_keys_unsorted",
    "textEdit": Object {
      "newText": "keys_unsorted",
      "range": Object {
        "end": Object {
          "character": 32,
          "line": 18,
        },
        "start": Object {
          "character": 32,
          "line": 18,
        },
      },
    },
  },
  Object {
    "detail": "The builtin function has returns whether the input object has the given key, or the input array has an element at the given index.",
    "filterText": "has(key)",
    "insertText": "has(key)",
    "insertTextFormat": 2,
    "kind": 3,
    "label": "has(key)",
    "sortText": "100_has(key)",
    "textEdit": Object {
      "newText": "has(key)",
      "range": Object {
        "end": Object {
          "character": 32,
          "line": 18,
        },
        "start": Object {
          "character": 32,
          "line": 18,
        },
      },
    },
  },
]
`;

exports[`SWF LS YAML code completion Jq completions action data filter completions variables completion no value/single quotes 1`] = `140`;

exports[`SWF LS YAML code completion Jq completions action data filter completions variables completion no value/single quotes 2`] = `
Array [
  Object {
    "detail": "The builtin function length gets the length of various different types of value.",
    "filterText": "length",
    "insertText": "length",
    "insertTextFormat": 2,
    "kind": 3,
    "label": "length",
    "sortText": "100_length",
    "textEdit": Object {
      "newText": "length",
      "range": Object {
        "end": Object {
          "character": 32,
          "line": 18,
        },
        "start": Object {
          "character": 32,
          "line": 18,
        },
      },
    },
  },
  Object {
    "detail": "The builtin function utf8bytelength outputs the number of bytes used to encode a string in UTF-8.",
    "filterText": "utf8bytelength",
    "insertText": "utf8bytelength",
    "insertTextFormat": 2,
    "kind": 3,
    "label": "utf8bytelength",
    "sortText": "100_utf8bytelength",
    "textEdit": Object {
      "newText": "'utf8bytelength'",
      "range": Object {
        "end": Object {
          "character": 32,
          "line": 18,
        },
        "start": Object {
          "character": 32,
          "line": 18,
        },
      },
    },
  },
  Object {
    "detail": "The builtin function keys, when given an object, returns its keys in an array.",
    "filterText": "keys",
    "insertText": "keys",
    "insertTextFormat": 2,
    "kind": 3,
    "label": "keys",
    "sortText": "100_keys",
    "textEdit": Object {
      "newText": "keys",
      "range": Object {
        "end": Object {
          "character": 32,
          "line": 18,
        },
        "start": Object {
          "character": 32,
          "line": 18,
        },
      },
    },
  },
  Object {
    "detail": "The keys_unsorted function is just like keys, but if the input is an object then the keys will not be sorted, instead the keys will roughly be in insertion order.",
    "filterText": "keys_unsorted",
    "insertText": "keys_unsorted",
    "insertTextFormat": 2,
    "kind": 3,
    "label": "keys_unsorted",
    "sortText": "100_keys_unsorted",
    "textEdit": Object {
      "newText": "keys_unsorted",
      "range": Object {
        "end": Object {
          "character": 32,
          "line": 18,
        },
        "start": Object {
          "character": 32,
          "line": 18,
        },
      },
    },
  },
  Object {
    "detail": "The builtin function has returns whether the input object has the given key, or the input array has an element at the given index.",
    "filterText": "has(key)",
    "insertText": "has(key)",
    "insertTextFormat": 2,
    "kind": 3,
    "label": "has(key)",
    "sortText": "100_has(key)",
    "textEdit": Object {
      "newText": "has(key)",
      "range": Object {
        "end": Object {
          "character": 32,
          "line": 18,
        },
        "start": Object {
          "character": 32,
          "line": 18,
        },
      },
    },
  },
]
`;

exports[`SWF LS YAML code completion Jq completions action data filter completions variables completion space before fn: 1`] = `2`;

exports[`SWF LS YAML code completion Jq completions action data filter completions variables completion space before fn: 2`] = `
Array [
  Object {
    "detail": "Reusable functions(expressions) defined in the functions array",
    "filterText": "expressionFunc1",
    "insertText": "expressionFunc1",
    "insertTextFormat": 2,
    "kind": 3,
    "label": "expressionFunc1",
    "sortText": "100_expressionFunc1",
    "textEdit": Object {
      "newText": "'expressionFunc1'",
      "range": Object {
        "end": Object {
          "character": 36,
          "line": 18,
        },
        "start": Object {
          "character": 36,
          "line": 18,
        },
      },
    },
  },
  Object {
    "detail": "Reusable functions(expressions) defined in the functions array",
    "filterText": "expressionFunc2",
    "insertText": "expressionFunc2",
    "insertTextFormat": 2,
    "kind": 3,
    "label": "expressionFunc2",
    "sortText": "100_expressionFunc2",
    "textEdit": Object {
      "newText": "'expressionFunc2'",
      "range": Object {
        "end": Object {
          "character": 36,
          "line": 18,
        },
        "start": Object {
          "character": 36,
          "line": 18,
        },
      },
    },
  },
]
`;

exports[`SWF LS YAML code completion Jq completions action data filter completions variables completion value fn:/double quotes 1`] = `2`;

exports[`SWF LS YAML code completion Jq completions action data filter completions variables completion value fn:/double quotes 2`] = `
Array [
  Object {
    "detail": "Reusable functions(expressions) defined in the functions array",
    "filterText": "expressionFunc1",
    "insertText": "expressionFunc1",
    "insertTextFormat": 2,
    "kind": 3,
    "label": "expressionFunc1",
    "sortText": "100_expressionFunc1",
    "textEdit": Object {
      "newText": "'expressionFunc1'",
      "range": Object {
        "end": Object {
          "character": 35,
          "line": 18,
        },
        "start": Object {
          "character": 35,
          "line": 18,
        },
      },
    },
  },
  Object {
    "detail": "Reusable functions(expressions) defined in the functions array",
    "filterText": "expressionFunc2",
    "insertText": "expressionFunc2",
    "insertTextFormat": 2,
    "kind": 3,
    "label": "expressionFunc2",
    "sortText": "100_expressionFunc2",
    "textEdit": Object {
      "newText": "'expressionFunc2'",
      "range": Object {
        "end": Object {
          "character": 35,
          "line": 18,
        },
        "start": Object {
          "character": 35,
          "line": 18,
        },
      },
    },
  },
]
`;

exports[`SWF LS YAML code completion Jq completions action data filter completions variables completion value fn:/single quotes 1`] = `2`;

exports[`SWF LS YAML code completion Jq completions action data filter completions variables completion value fn:/single quotes 2`] = `
Array [
  Object {
    "detail": "Reusable functions(expressions) defined in the functions array",
    "filterText": "expressionFunc1",
    "insertText": "expressionFunc1",
    "insertTextFormat": 2,
    "kind": 3,
    "label": "expressionFunc1",
    "sortText": "100_expressionFunc1",
    "textEdit": Object {
      "newText": "'expressionFunc1'",
      "range": Object {
        "end": Object {
          "character": 35,
          "line": 18,
        },
        "start": Object {
          "character": 35,
          "line": 18,
        },
      },
    },
  },
  Object {
    "detail": "Reusable functions(expressions) defined in the functions array",
    "filterText": "expressionFunc2",
    "insertText": "expressionFunc2",
    "insertTextFormat": 2,
    "kind": 3,
    "label": "expressionFunc2",
    "sortText": "100_expressionFunc2",
    "textEdit": Object {
      "newText": "'expressionFunc2'",
      "range": Object {
        "end": Object {
          "character": 35,
          "line": 18,
        },
        "start": Object {
          "character": 35,
          "line": 18,
        },
      },
    },
  },
]
`;

exports[`SWF LS YAML code completion Jq completions data condition completion built-in functions completion cursor after a value - auto-complete the word map 1`] = `2`;

exports[`SWF LS YAML code completion Jq completions data condition completion built-in functions completion cursor after a value - auto-complete the word map 2`] = `
Array [
  Object {
    "detail": "For any filter x, map(x) will run that filter for each element of the input array, and return the outputs in a new array. map(.+1) will increment each element of an array of numbers.",
    "filterText": "map",
    "insertText": "map(x)",
    "insertTextFormat": 2,
    "kind": 3,
    "label": "map(x)",
    "sortText": "100_map(x)",
    "textEdit": Object {
      "newText": "map(x)",
      "range": Object {
        "end": Object {
          "character": 35,
          "line": 16,
        },
        "start": Object {
          "character": 32,
          "line": 16,
        },
      },
    },
  },
  Object {
    "detail": "map_values(x) will run that filter for each element, but it will return an object when an object is passed.",
    "filterText": "map",
    "insertText": "map_values(x)",
    "insertTextFormat": 2,
    "kind": 3,
    "label": "map_values(x)",
    "sortText": "100_map_values(x)",
    "textEdit": Object {
      "newText": "map_values(x)",
      "range": Object {
        "end": Object {
          "character": 35,
          "line": 16,
        },
        "start": Object {
          "character": 32,
          "line": 16,
        },
      },
    },
  },
]
`;

exports[`SWF LS YAML code completion Jq completions data condition completion built-in functions completion cursor after some random word 1`] = `140`;

exports[`SWF LS YAML code completion Jq completions data condition completion built-in functions completion cursor after some random word 2`] = `
Array [
  Object {
    "detail": "The builtin function length gets the length of various different types of value.",
    "filterText": "length",
    "insertText": "length",
    "insertTextFormat": 2,
    "kind": 3,
    "label": "length",
    "sortText": "100_length",
    "textEdit": Object {
      "newText": "length",
      "range": Object {
        "end": Object {
          "character": 42,
          "line": 16,
        },
        "start": Object {
          "character": 42,
          "line": 16,
        },
      },
    },
  },
  Object {
    "detail": "The builtin function utf8bytelength outputs the number of bytes used to encode a string in UTF-8.",
    "filterText": "utf8bytelength",
    "insertText": "utf8bytelength",
    "insertTextFormat": 2,
    "kind": 3,
    "label": "utf8bytelength",
    "sortText": "100_utf8bytelength",
    "textEdit": Object {
      "newText": "'utf8bytelength'",
      "range": Object {
        "end": Object {
          "character": 42,
          "line": 16,
        },
        "start": Object {
          "character": 42,
          "line": 16,
        },
      },
    },
  },
  Object {
    "detail": "The builtin function keys, when given an object, returns its keys in an array.",
    "filterText": "keys",
    "insertText": "keys",
    "insertTextFormat": 2,
    "kind": 3,
    "label": "keys",
    "sortText": "100_keys",
    "textEdit": Object {
      "newText": "keys",
      "range": Object {
        "end": Object {
          "character": 42,
          "line": 16,
        },
        "start": Object {
          "character": 42,
          "line": 16,
        },
      },
    },
  },
  Object {
    "detail": "The keys_unsorted function is just like keys, but if the input is an object then the keys will not be sorted, instead the keys will roughly be in insertion order.",
    "filterText": "keys_unsorted",
    "insertText": "keys_unsorted",
    "insertTextFormat": 2,
    "kind": 3,
    "label": "keys_unsorted",
    "sortText": "100_keys_unsorted",
    "textEdit": Object {
      "newText": "keys_unsorted",
      "range": Object {
        "end": Object {
          "character": 42,
          "line": 16,
        },
        "start": Object {
          "character": 42,
          "line": 16,
        },
      },
    },
  },
  Object {
    "detail": "The builtin function has returns whether the input object has the given key, or the input array has an element at the given index.",
    "filterText": "has(key)",
    "insertText": "has(key)",
    "insertTextFormat": 2,
    "kind": 3,
    "label": "has(key)",
    "sortText": "100_has(key)",
    "textEdit": Object {
      "newText": "has(key)",
      "range": Object {
        "end": Object {
          "character": 42,
          "line": 16,
        },
        "start": Object {
          "character": 42,
          "line": 16,
        },
      },
    },
  },
]
`;

exports[`SWF LS YAML code completion Jq completions data condition completion built-in functions completion cursor after the dot(variable):/double quotes 1`] = `4`;

exports[`SWF LS YAML code completion Jq completions data condition completion built-in functions completion cursor after the dot(variable):/double quotes 2`] = `
Array [
  Object {
    "detail": "string",
    "filterText": "name",
    "insertText": "name",
    "insertTextFormat": 2,
    "kind": 12,
    "label": "name",
    "sortText": "100_name",
    "textEdit": Object {
      "newText": "name",
      "range": Object {
        "end": Object {
          "character": 33,
          "line": 16,
        },
        "start": Object {
          "character": 33,
          "line": 16,
        },
      },
    },
  },
  Object {
    "detail": "1",
    "filterText": "age",
    "insertText": "age",
    "insertTextFormat": 2,
    "kind": 12,
    "label": "age",
    "sortText": "100_age",
    "textEdit": Object {
      "newText": "age",
      "range": Object {
        "end": Object {
          "character": 33,
          "line": 16,
        },
        "start": Object {
          "character": 33,
          "line": 16,
        },
      },
    },
  },
  Object {
    "detail": "string",
    "filterText": "avgLoad",
    "insertText": "avgLoad",
    "insertTextFormat": 2,
    "kind": 12,
    "label": "avgLoad",
    "sortText": "100_avgLoad",
    "textEdit": Object {
      "newText": "avgLoad",
      "range": Object {
        "end": Object {
          "character": 33,
          "line": 16,
        },
        "start": Object {
          "character": 33,
          "line": 16,
        },
      },
    },
  },
  Object {
    "detail": "1",
    "filterText": "numberOfPods",
    "insertText": "numberOfPods",
    "insertTextFormat": 2,
    "kind": 12,
    "label": "numberOfPods",
    "sortText": "100_numberOfPods",
    "textEdit": Object {
      "newText": "numberOfPods",
      "range": Object {
        "end": Object {
          "character": 33,
          "line": 16,
        },
        "start": Object {
          "character": 33,
          "line": 16,
        },
      },
    },
  },
]
`;

exports[`SWF LS YAML code completion Jq completions data condition completion built-in functions completion cursor after the dot(variable):/single quotes 1`] = `4`;

exports[`SWF LS YAML code completion Jq completions data condition completion built-in functions completion cursor after the dot(variable):/single quotes 2`] = `
Array [
  Object {
    "detail": "string",
    "filterText": "name",
    "insertText": "name",
    "insertTextFormat": 2,
    "kind": 12,
    "label": "name",
    "sortText": "100_name",
    "textEdit": Object {
      "newText": "name",
      "range": Object {
        "end": Object {
          "character": 33,
          "line": 16,
        },
        "start": Object {
          "character": 33,
          "line": 16,
        },
      },
    },
  },
  Object {
    "detail": "1",
    "filterText": "age",
    "insertText": "age",
    "insertTextFormat": 2,
    "kind": 12,
    "label": "age",
    "sortText": "100_age",
    "textEdit": Object {
      "newText": "age",
      "range": Object {
        "end": Object {
          "character": 33,
          "line": 16,
        },
        "start": Object {
          "character": 33,
          "line": 16,
        },
      },
    },
  },
  Object {
    "detail": "string",
    "filterText": "avgLoad",
    "insertText": "avgLoad",
    "insertTextFormat": 2,
    "kind": 12,
    "label": "avgLoad",
    "sortText": "100_avgLoad",
    "textEdit": Object {
      "newText": "avgLoad",
      "range": Object {
        "end": Object {
          "character": 33,
          "line": 16,
        },
        "start": Object {
          "character": 33,
          "line": 16,
        },
      },
    },
  },
  Object {
    "detail": "1",
    "filterText": "numberOfPods",
    "insertText": "numberOfPods",
    "insertTextFormat": 2,
    "kind": 12,
    "label": "numberOfPods",
    "sortText": "100_numberOfPods",
    "textEdit": Object {
      "newText": "numberOfPods",
      "range": Object {
        "end": Object {
          "character": 33,
          "line": 16,
        },
        "start": Object {
          "character": 33,
          "line": 16,
        },
      },
    },
  },
]
`;

exports[`SWF LS YAML code completion Jq completions data condition completion built-in functions completion cursor before empty space 1`] = `140`;

exports[`SWF LS YAML code completion Jq completions data condition completion built-in functions completion cursor before empty space 2`] = `
Array [
  Object {
    "detail": "The builtin function length gets the length of various different types of value.",
    "filterText": "length",
    "insertText": "length",
    "insertTextFormat": 2,
    "kind": 3,
    "label": "length",
    "sortText": "100_length",
    "textEdit": Object {
      "newText": "length",
      "range": Object {
        "end": Object {
          "character": 32,
          "line": 16,
        },
        "start": Object {
          "character": 32,
          "line": 16,
        },
      },
    },
  },
  Object {
    "detail": "The builtin function utf8bytelength outputs the number of bytes used to encode a string in UTF-8.",
    "filterText": "utf8bytelength",
    "insertText": "utf8bytelength",
    "insertTextFormat": 2,
    "kind": 3,
    "label": "utf8bytelength",
    "sortText": "100_utf8bytelength",
    "textEdit": Object {
      "newText": "'utf8bytelength'",
      "range": Object {
        "end": Object {
          "character": 32,
          "line": 16,
        },
        "start": Object {
          "character": 32,
          "line": 16,
        },
      },
    },
  },
  Object {
    "detail": "The builtin function keys, when given an object, returns its keys in an array.",
    "filterText": "keys",
    "insertText": "keys",
    "insertTextFormat": 2,
    "kind": 3,
    "label": "keys",
    "sortText": "100_keys",
    "textEdit": Object {
      "newText": "keys",
      "range": Object {
        "end": Object {
          "character": 32,
          "line": 16,
        },
        "start": Object {
          "character": 32,
          "line": 16,
        },
      },
    },
  },
  Object {
    "detail": "The keys_unsorted function is just like keys, but if the input is an object then the keys will not be sorted, instead the keys will roughly be in insertion order.",
    "filterText": "keys_unsorted",
    "insertText": "keys_unsorted",
    "insertTextFormat": 2,
    "kind": 3,
    "label": "keys_unsorted",
    "sortText": "100_keys_unsorted",
    "textEdit": Object {
      "newText": "keys_unsorted",
      "range": Object {
        "end": Object {
          "character": 32,
          "line": 16,
        },
        "start": Object {
          "character": 32,
          "line": 16,
        },
      },
    },
  },
  Object {
    "detail": "The builtin function has returns whether the input object has the given key, or the input array has an element at the given index.",
    "filterText": "has(key)",
    "insertText": "has(key)",
    "insertTextFormat": 2,
    "kind": 3,
    "label": "has(key)",
    "sortText": "100_has(key)",
    "textEdit": Object {
      "newText": "has(key)",
      "range": Object {
        "end": Object {
          "character": 32,
          "line": 16,
        },
        "start": Object {
          "character": 32,
          "line": 16,
        },
      },
    },
  },
]
`;

exports[`SWF LS YAML code completion Jq completions data condition completion built-in functions completion cursor before the dot(variable) 1`] = `140`;

exports[`SWF LS YAML code completion Jq completions data condition completion built-in functions completion cursor before the dot(variable) 2`] = `
Array [
  Object {
    "detail": "The builtin function length gets the length of various different types of value.",
    "filterText": "length",
    "insertText": "length",
    "insertTextFormat": 2,
    "kind": 3,
    "label": "length",
    "sortText": "100_length",
    "textEdit": Object {
      "newText": "length",
      "range": Object {
        "end": Object {
          "character": 32,
          "line": 16,
        },
        "start": Object {
          "character": 32,
          "line": 16,
        },
      },
    },
  },
  Object {
    "detail": "The builtin function utf8bytelength outputs the number of bytes used to encode a string in UTF-8.",
    "filterText": "utf8bytelength",
    "insertText": "utf8bytelength",
    "insertTextFormat": 2,
    "kind": 3,
    "label": "utf8bytelength",
    "sortText": "100_utf8bytelength",
    "textEdit": Object {
      "newText": "'utf8bytelength'",
      "range": Object {
        "end": Object {
          "character": 32,
          "line": 16,
        },
        "start": Object {
          "character": 32,
          "line": 16,
        },
      },
    },
  },
  Object {
    "detail": "The builtin function keys, when given an object, returns its keys in an array.",
    "filterText": "keys",
    "insertText": "keys",
    "insertTextFormat": 2,
    "kind": 3,
    "label": "keys",
    "sortText": "100_keys",
    "textEdit": Object {
      "newText": "keys",
      "range": Object {
        "end": Object {
          "character": 32,
          "line": 16,
        },
        "start": Object {
          "character": 32,
          "line": 16,
        },
      },
    },
  },
  Object {
    "detail": "The keys_unsorted function is just like keys, but if the input is an object then the keys will not be sorted, instead the keys will roughly be in insertion order.",
    "filterText": "keys_unsorted",
    "insertText": "keys_unsorted",
    "insertTextFormat": 2,
    "kind": 3,
    "label": "keys_unsorted",
    "sortText": "100_keys_unsorted",
    "textEdit": Object {
      "newText": "keys_unsorted",
      "range": Object {
        "end": Object {
          "character": 32,
          "line": 16,
        },
        "start": Object {
          "character": 32,
          "line": 16,
        },
      },
    },
  },
  Object {
    "detail": "The builtin function has returns whether the input object has the given key, or the input array has an element at the given index.",
    "filterText": "has(key)",
    "insertText": "has(key)",
    "insertTextFormat": 2,
    "kind": 3,
    "label": "has(key)",
    "sortText": "100_has(key)",
    "textEdit": Object {
      "newText": "has(key)",
      "range": Object {
        "end": Object {
          "character": 32,
          "line": 16,
        },
        "start": Object {
          "character": 32,
          "line": 16,
        },
      },
    },
  },
]
`;

exports[`SWF LS YAML code completion Jq completions data condition completion built-in functions completion cursor with a space after the  dot(variable) 1`] = `140`;

exports[`SWF LS YAML code completion Jq completions data condition completion built-in functions completion cursor with a space after the  dot(variable) 2`] = `
Array [
  Object {
    "detail": "The builtin function length gets the length of various different types of value.",
    "filterText": "length",
    "insertText": "length",
    "insertTextFormat": 2,
    "kind": 3,
    "label": "length",
    "sortText": "100_length",
    "textEdit": Object {
      "newText": "length",
      "range": Object {
        "end": Object {
          "character": 34,
          "line": 16,
        },
        "start": Object {
          "character": 34,
          "line": 16,
        },
      },
    },
  },
  Object {
    "detail": "The builtin function utf8bytelength outputs the number of bytes used to encode a string in UTF-8.",
    "filterText": "utf8bytelength",
    "insertText": "utf8bytelength",
    "insertTextFormat": 2,
    "kind": 3,
    "label": "utf8bytelength",
    "sortText": "100_utf8bytelength",
    "textEdit": Object {
      "newText": "'utf8bytelength'",
      "range": Object {
        "end": Object {
          "character": 34,
          "line": 16,
        },
        "start": Object {
          "character": 34,
          "line": 16,
        },
      },
    },
  },
  Object {
    "detail": "The builtin function keys, when given an object, returns its keys in an array.",
    "filterText": "keys",
    "insertText": "keys",
    "insertTextFormat": 2,
    "kind": 3,
    "label": "keys",
    "sortText": "100_keys",
    "textEdit": Object {
      "newText": "keys",
      "range": Object {
        "end": Object {
          "character": 34,
          "line": 16,
        },
        "start": Object {
          "character": 34,
          "line": 16,
        },
      },
    },
  },
  Object {
    "detail": "The keys_unsorted function is just like keys, but if the input is an object then the keys will not be sorted, instead the keys will roughly be in insertion order.",
    "filterText": "keys_unsorted",
    "insertText": "keys_unsorted",
    "insertTextFormat": 2,
    "kind": 3,
    "label": "keys_unsorted",
    "sortText": "100_keys_unsorted",
    "textEdit": Object {
      "newText": "keys_unsorted",
      "range": Object {
        "end": Object {
          "character": 34,
          "line": 16,
        },
        "start": Object {
          "character": 34,
          "line": 16,
        },
      },
    },
  },
  Object {
    "detail": "The builtin function has returns whether the input object has the given key, or the input array has an element at the given index.",
    "filterText": "has(key)",
    "insertText": "has(key)",
    "insertTextFormat": 2,
    "kind": 3,
    "label": "has(key)",
    "sortText": "100_has(key)",
    "textEdit": Object {
      "newText": "has(key)",
      "range": Object {
        "end": Object {
          "character": 34,
          "line": 16,
        },
        "start": Object {
          "character": 34,
          "line": 16,
        },
      },
    },
  },
]
`;

exports[`SWF LS YAML code completion Jq completions data condition completion built-in functions completion cursor with a value following the  dot(variable) 1`] = `2`;

exports[`SWF LS YAML code completion Jq completions data condition completion built-in functions completion cursor with a value following the  dot(variable) 2`] = `
Array [
  Object {
    "detail": "1",
    "filterText": "a",
    "insertText": "age",
    "insertTextFormat": 2,
    "kind": 12,
    "label": "age",
    "sortText": "100_age",
    "textEdit": Object {
      "newText": "age",
      "range": Object {
        "end": Object {
          "character": 34,
          "line": 16,
        },
        "start": Object {
          "character": 33,
          "line": 16,
        },
      },
    },
  },
  Object {
    "detail": "string",
    "filterText": "a",
    "insertText": "avgLoad",
    "insertTextFormat": 2,
    "kind": 12,
    "label": "avgLoad",
    "sortText": "100_avgLoad",
    "textEdit": Object {
      "newText": "avgLoad",
      "range": Object {
        "end": Object {
          "character": 34,
          "line": 16,
        },
        "start": Object {
          "character": 33,
          "line": 16,
        },
      },
    },
  },
]
`;

exports[`SWF LS YAML code completion Jq completions data condition completion built-in functions completion empty object 1`] = `0`;

exports[`SWF LS YAML code completion Jq completions data condition completion built-in functions completion empty object 2`] = `Array []`;

exports[`SWF LS YAML code completion Jq completions data condition completion built-in functions completion empty object 3`] = `0`;

exports[`SWF LS YAML code completion Jq completions data condition completion built-in functions completion empty object 4`] = `Array []`;

exports[`SWF LS YAML code completion Jq completions data condition completion built-in functions completion empty object 5`] = `0`;

exports[`SWF LS YAML code completion Jq completions data condition completion built-in functions completion empty object 6`] = `Array []`;

exports[`SWF LS YAML code completion Jq completions data condition completion built-in functions completion fn: after some value 1`] = `2`;

exports[`SWF LS YAML code completion Jq completions data condition completion built-in functions completion fn: after some value 2`] = `
Array [
  Object {
    "detail": "Reusable functions(expressions) defined in the functions array",
    "filterText": "expressionFunc1",
    "insertText": "expressionFunc1",
    "insertTextFormat": 2,
    "kind": 3,
    "label": "expressionFunc1",
    "sortText": "100_expressionFunc1",
    "textEdit": Object {
      "newText": "'expressionFunc1'",
      "range": Object {
        "end": Object {
          "character": 44,
          "line": 16,
        },
        "start": Object {
          "character": 44,
          "line": 16,
        },
      },
    },
  },
  Object {
    "detail": "Reusable functions(expressions) defined in the functions array",
    "filterText": "expressionFunc2",
    "insertText": "expressionFunc2",
    "insertTextFormat": 2,
    "kind": 3,
    "label": "expressionFunc2",
    "sortText": "100_expressionFunc2",
    "textEdit": Object {
      "newText": "'expressionFunc2'",
      "range": Object {
        "end": Object {
          "character": 44,
          "line": 16,
        },
        "start": Object {
          "character": 44,
          "line": 16,
        },
      },
    },
  },
]
`;

exports[`SWF LS YAML code completion Jq completions data condition completion built-in functions completion fn: starting with a 1`] = `0`;

exports[`SWF LS YAML code completion Jq completions data condition completion built-in functions completion fn: starting with a 2`] = `Array []`;

exports[`SWF LS YAML code completion Jq completions data condition completion built-in functions completion fn: starting with r 1`] = `0`;

exports[`SWF LS YAML code completion Jq completions data condition completion built-in functions completion fn: starting with r 2`] = `Array []`;

exports[`SWF LS YAML code completion Jq completions data condition completion built-in functions completion no value/double quotes 1`] = `140`;

exports[`SWF LS YAML code completion Jq completions data condition completion built-in functions completion no value/double quotes 2`] = `
Array [
  Object {
    "detail": "The builtin function length gets the length of various different types of value.",
    "filterText": "length",
    "insertText": "length",
    "insertTextFormat": 2,
    "kind": 3,
    "label": "length",
    "sortText": "100_length",
    "textEdit": Object {
      "newText": "length",
      "range": Object {
        "end": Object {
          "character": 32,
          "line": 16,
        },
        "start": Object {
          "character": 32,
          "line": 16,
        },
      },
    },
  },
  Object {
    "detail": "The builtin function utf8bytelength outputs the number of bytes used to encode a string in UTF-8.",
    "filterText": "utf8bytelength",
    "insertText": "utf8bytelength",
    "insertTextFormat": 2,
    "kind": 3,
    "label": "utf8bytelength",
    "sortText": "100_utf8bytelength",
    "textEdit": Object {
      "newText": "'utf8bytelength'",
      "range": Object {
        "end": Object {
          "character": 32,
          "line": 16,
        },
        "start": Object {
          "character": 32,
          "line": 16,
        },
      },
    },
  },
  Object {
    "detail": "The builtin function keys, when given an object, returns its keys in an array.",
    "filterText": "keys",
    "insertText": "keys",
    "insertTextFormat": 2,
    "kind": 3,
    "label": "keys",
    "sortText": "100_keys",
    "textEdit": Object {
      "newText": "keys",
      "range": Object {
        "end": Object {
          "character": 32,
          "line": 16,
        },
        "start": Object {
          "character": 32,
          "line": 16,
        },
      },
    },
  },
  Object {
    "detail": "The keys_unsorted function is just like keys, but if the input is an object then the keys will not be sorted, instead the keys will roughly be in insertion order.",
    "filterText": "keys_unsorted",
    "insertText": "keys_unsorted",
    "insertTextFormat": 2,
    "kind": 3,
    "label": "keys_unsorted",
    "sortText": "100_keys_unsorted",
    "textEdit": Object {
      "newText": "keys_unsorted",
      "range": Object {
        "end": Object {
          "character": 32,
          "line": 16,
        },
        "start": Object {
          "character": 32,
          "line": 16,
        },
      },
    },
  },
  Object {
    "detail": "The builtin function has returns whether the input object has the given key, or the input array has an element at the given index.",
    "filterText": "has(key)",
    "insertText": "has(key)",
    "insertTextFormat": 2,
    "kind": 3,
    "label": "has(key)",
    "sortText": "100_has(key)",
    "textEdit": Object {
      "newText": "has(key)",
      "range": Object {
        "end": Object {
          "character": 32,
          "line": 16,
        },
        "start": Object {
          "character": 32,
          "line": 16,
        },
      },
    },
  },
]
`;

exports[`SWF LS YAML code completion Jq completions data condition completion built-in functions completion no value/single quotes 1`] = `140`;

exports[`SWF LS YAML code completion Jq completions data condition completion built-in functions completion no value/single quotes 2`] = `
Array [
  Object {
    "detail": "The builtin function length gets the length of various different types of value.",
    "filterText": "length",
    "insertText": "length",
    "insertTextFormat": 2,
    "kind": 3,
    "label": "length",
    "sortText": "100_length",
    "textEdit": Object {
      "newText": "length",
      "range": Object {
        "end": Object {
          "character": 32,
          "line": 16,
        },
        "start": Object {
          "character": 32,
          "line": 16,
        },
      },
    },
  },
  Object {
    "detail": "The builtin function utf8bytelength outputs the number of bytes used to encode a string in UTF-8.",
    "filterText": "utf8bytelength",
    "insertText": "utf8bytelength",
    "insertTextFormat": 2,
    "kind": 3,
    "label": "utf8bytelength",
    "sortText": "100_utf8bytelength",
    "textEdit": Object {
      "newText": "'utf8bytelength'",
      "range": Object {
        "end": Object {
          "character": 32,
          "line": 16,
        },
        "start": Object {
          "character": 32,
          "line": 16,
        },
      },
    },
  },
  Object {
    "detail": "The builtin function keys, when given an object, returns its keys in an array.",
    "filterText": "keys",
    "insertText": "keys",
    "insertTextFormat": 2,
    "kind": 3,
    "label": "keys",
    "sortText": "100_keys",
    "textEdit": Object {
      "newText": "keys",
      "range": Object {
        "end": Object {
          "character": 32,
          "line": 16,
        },
        "start": Object {
          "character": 32,
          "line": 16,
        },
      },
    },
  },
  Object {
    "detail": "The keys_unsorted function is just like keys, but if the input is an object then the keys will not be sorted, instead the keys will roughly be in insertion order.",
    "filterText": "keys_unsorted",
    "insertText": "keys_unsorted",
    "insertTextFormat": 2,
    "kind": 3,
    "label": "keys_unsorted",
    "sortText": "100_keys_unsorted",
    "textEdit": Object {
      "newText": "keys_unsorted",
      "range": Object {
        "end": Object {
          "character": 32,
          "line": 16,
        },
        "start": Object {
          "character": 32,
          "line": 16,
        },
      },
    },
  },
  Object {
    "detail": "The builtin function has returns whether the input object has the given key, or the input array has an element at the given index.",
    "filterText": "has(key)",
    "insertText": "has(key)",
    "insertTextFormat": 2,
    "kind": 3,
    "label": "has(key)",
    "sortText": "100_has(key)",
    "textEdit": Object {
      "newText": "has(key)",
      "range": Object {
        "end": Object {
          "character": 32,
          "line": 16,
        },
        "start": Object {
          "character": 32,
          "line": 16,
        },
      },
    },
  },
]
`;

exports[`SWF LS YAML code completion Jq completions data condition completion built-in functions completion space before fn: 1`] = `2`;

exports[`SWF LS YAML code completion Jq completions data condition completion built-in functions completion space before fn: 2`] = `
Array [
  Object {
    "detail": "Reusable functions(expressions) defined in the functions array",
    "filterText": "expressionFunc1",
    "insertText": "expressionFunc1",
    "insertTextFormat": 2,
    "kind": 3,
    "label": "expressionFunc1",
    "sortText": "100_expressionFunc1",
    "textEdit": Object {
      "newText": "'expressionFunc1'",
      "range": Object {
        "end": Object {
          "character": 36,
          "line": 16,
        },
        "start": Object {
          "character": 36,
          "line": 16,
        },
      },
    },
  },
  Object {
    "detail": "Reusable functions(expressions) defined in the functions array",
    "filterText": "expressionFunc2",
    "insertText": "expressionFunc2",
    "insertTextFormat": 2,
    "kind": 3,
    "label": "expressionFunc2",
    "sortText": "100_expressionFunc2",
    "textEdit": Object {
      "newText": "'expressionFunc2'",
      "range": Object {
        "end": Object {
          "character": 36,
          "line": 16,
        },
        "start": Object {
          "character": 36,
          "line": 16,
        },
      },
    },
  },
]
`;

exports[`SWF LS YAML code completion Jq completions data condition completion built-in functions completion value fn:/double quotes 1`] = `2`;

exports[`SWF LS YAML code completion Jq completions data condition completion built-in functions completion value fn:/double quotes 2`] = `
Array [
  Object {
    "detail": "Reusable functions(expressions) defined in the functions array",
    "filterText": "expressionFunc1",
    "insertText": "expressionFunc1",
    "insertTextFormat": 2,
    "kind": 3,
    "label": "expressionFunc1",
    "sortText": "100_expressionFunc1",
    "textEdit": Object {
      "newText": "'expressionFunc1'",
      "range": Object {
        "end": Object {
          "character": 35,
          "line": 16,
        },
        "start": Object {
          "character": 35,
          "line": 16,
        },
      },
    },
  },
  Object {
    "detail": "Reusable functions(expressions) defined in the functions array",
    "filterText": "expressionFunc2",
    "insertText": "expressionFunc2",
    "insertTextFormat": 2,
    "kind": 3,
    "label": "expressionFunc2",
    "sortText": "100_expressionFunc2",
    "textEdit": Object {
      "newText": "'expressionFunc2'",
      "range": Object {
        "end": Object {
          "character": 35,
          "line": 16,
        },
        "start": Object {
          "character": 35,
          "line": 16,
        },
      },
    },
  },
]
`;

exports[`SWF LS YAML code completion Jq completions data condition completion built-in functions completion value fn:/single quotes 1`] = `2`;

exports[`SWF LS YAML code completion Jq completions data condition completion built-in functions completion value fn:/single quotes 2`] = `
Array [
  Object {
    "detail": "Reusable functions(expressions) defined in the functions array",
    "filterText": "expressionFunc1",
    "insertText": "expressionFunc1",
    "insertTextFormat": 2,
    "kind": 3,
    "label": "expressionFunc1",
    "sortText": "100_expressionFunc1",
    "textEdit": Object {
      "newText": "'expressionFunc1'",
      "range": Object {
        "end": Object {
          "character": 35,
          "line": 16,
        },
        "start": Object {
          "character": 35,
          "line": 16,
        },
      },
    },
  },
  Object {
    "detail": "Reusable functions(expressions) defined in the functions array",
    "filterText": "expressionFunc2",
    "insertText": "expressionFunc2",
    "insertTextFormat": 2,
    "kind": 3,
    "label": "expressionFunc2",
    "sortText": "100_expressionFunc2",
    "textEdit": Object {
      "newText": "'expressionFunc2'",
      "range": Object {
        "end": Object {
          "character": 35,
          "line": 16,
        },
        "start": Object {
          "character": 35,
          "line": 16,
        },
      },
    },
  },
]
`;

exports[`SWF LS YAML code completion Jq completions data condition completion variables completion cursor after a value - auto-complete the word map 1`] = `2`;

exports[`SWF LS YAML code completion Jq completions data condition completion variables completion cursor after a value - auto-complete the word map 2`] = `
Array [
  Object {
    "detail": "For any filter x, map(x) will run that filter for each element of the input array, and return the outputs in a new array. map(.+1) will increment each element of an array of numbers.",
    "filterText": "map",
    "insertText": "map(x)",
    "insertTextFormat": 2,
    "kind": 3,
    "label": "map(x)",
    "sortText": "100_map(x)",
    "textEdit": Object {
      "newText": "map(x)",
      "range": Object {
        "end": Object {
          "character": 35,
          "line": 16,
        },
        "start": Object {
          "character": 32,
          "line": 16,
        },
      },
    },
  },
  Object {
    "detail": "map_values(x) will run that filter for each element, but it will return an object when an object is passed.",
    "filterText": "map",
    "insertText": "map_values(x)",
    "insertTextFormat": 2,
    "kind": 3,
    "label": "map_values(x)",
    "sortText": "100_map_values(x)",
    "textEdit": Object {
      "newText": "map_values(x)",
      "range": Object {
        "end": Object {
          "character": 35,
          "line": 16,
        },
        "start": Object {
          "character": 32,
          "line": 16,
        },
      },
    },
  },
]
`;

exports[`SWF LS YAML code completion Jq completions data condition completion variables completion cursor after some random word 1`] = `140`;

exports[`SWF LS YAML code completion Jq completions data condition completion variables completion cursor after some random word 2`] = `
Array [
  Object {
    "detail": "The builtin function length gets the length of various different types of value.",
    "filterText": "length",
    "insertText": "length",
    "insertTextFormat": 2,
    "kind": 3,
    "label": "length",
    "sortText": "100_length",
    "textEdit": Object {
      "newText": "length",
      "range": Object {
        "end": Object {
          "character": 42,
          "line": 16,
        },
        "start": Object {
          "character": 42,
          "line": 16,
        },
      },
    },
  },
  Object {
    "detail": "The builtin function utf8bytelength outputs the number of bytes used to encode a string in UTF-8.",
    "filterText": "utf8bytelength",
    "insertText": "utf8bytelength",
    "insertTextFormat": 2,
    "kind": 3,
    "label": "utf8bytelength",
    "sortText": "100_utf8bytelength",
    "textEdit": Object {
      "newText": "'utf8bytelength'",
      "range": Object {
        "end": Object {
          "character": 42,
          "line": 16,
        },
        "start": Object {
          "character": 42,
          "line": 16,
        },
      },
    },
  },
  Object {
    "detail": "The builtin function keys, when given an object, returns its keys in an array.",
    "filterText": "keys",
    "insertText": "keys",
    "insertTextFormat": 2,
    "kind": 3,
    "label": "keys",
    "sortText": "100_keys",
    "textEdit": Object {
      "newText": "keys",
      "range": Object {
        "end": Object {
          "character": 42,
          "line": 16,
        },
        "start": Object {
          "character": 42,
          "line": 16,
        },
      },
    },
  },
  Object {
    "detail": "The keys_unsorted function is just like keys, but if the input is an object then the keys will not be sorted, instead the keys will roughly be in insertion order.",
    "filterText": "keys_unsorted",
    "insertText": "keys_unsorted",
    "insertTextFormat": 2,
    "kind": 3,
    "label": "keys_unsorted",
    "sortText": "100_keys_unsorted",
    "textEdit": Object {
      "newText": "keys_unsorted",
      "range": Object {
        "end": Object {
          "character": 42,
          "line": 16,
        },
        "start": Object {
          "character": 42,
          "line": 16,
        },
      },
    },
  },
  Object {
    "detail": "The builtin function has returns whether the input object has the given key, or the input array has an element at the given index.",
    "filterText": "has(key)",
    "insertText": "has(key)",
    "insertTextFormat": 2,
    "kind": 3,
    "label": "has(key)",
    "sortText": "100_has(key)",
    "textEdit": Object {
      "newText": "has(key)",
      "range": Object {
        "end": Object {
          "character": 42,
          "line": 16,
        },
        "start": Object {
          "character": 42,
          "line": 16,
        },
      },
    },
  },
]
`;

exports[`SWF LS YAML code completion Jq completions data condition completion variables completion cursor after the dot(variable):/double quotes 1`] = `4`;

exports[`SWF LS YAML code completion Jq completions data condition completion variables completion cursor after the dot(variable):/double quotes 2`] = `
Array [
  Object {
    "detail": "string",
    "filterText": "name",
    "insertText": "name",
    "insertTextFormat": 2,
    "kind": 12,
    "label": "name",
    "sortText": "100_name",
    "textEdit": Object {
      "newText": "name",
      "range": Object {
        "end": Object {
          "character": 33,
          "line": 16,
        },
        "start": Object {
          "character": 33,
          "line": 16,
        },
      },
    },
  },
  Object {
    "detail": "1",
    "filterText": "age",
    "insertText": "age",
    "insertTextFormat": 2,
    "kind": 12,
    "label": "age",
    "sortText": "100_age",
    "textEdit": Object {
      "newText": "age",
      "range": Object {
        "end": Object {
          "character": 33,
          "line": 16,
        },
        "start": Object {
          "character": 33,
          "line": 16,
        },
      },
    },
  },
  Object {
    "detail": "string",
    "filterText": "avgLoad",
    "insertText": "avgLoad",
    "insertTextFormat": 2,
    "kind": 12,
    "label": "avgLoad",
    "sortText": "100_avgLoad",
    "textEdit": Object {
      "newText": "avgLoad",
      "range": Object {
        "end": Object {
          "character": 33,
          "line": 16,
        },
        "start": Object {
          "character": 33,
          "line": 16,
        },
      },
    },
  },
  Object {
    "detail": "1",
    "filterText": "numberOfPods",
    "insertText": "numberOfPods",
    "insertTextFormat": 2,
    "kind": 12,
    "label": "numberOfPods",
    "sortText": "100_numberOfPods",
    "textEdit": Object {
      "newText": "numberOfPods",
      "range": Object {
        "end": Object {
          "character": 33,
          "line": 16,
        },
        "start": Object {
          "character": 33,
          "line": 16,
        },
      },
    },
  },
]
`;

exports[`SWF LS YAML code completion Jq completions data condition completion variables completion cursor after the dot(variable):/single quotes 1`] = `4`;

exports[`SWF LS YAML code completion Jq completions data condition completion variables completion cursor after the dot(variable):/single quotes 2`] = `
Array [
  Object {
    "detail": "string",
    "filterText": "name",
    "insertText": "name",
    "insertTextFormat": 2,
    "kind": 12,
    "label": "name",
    "sortText": "100_name",
    "textEdit": Object {
      "newText": "name",
      "range": Object {
        "end": Object {
          "character": 33,
          "line": 16,
        },
        "start": Object {
          "character": 33,
          "line": 16,
        },
      },
    },
  },
  Object {
    "detail": "1",
    "filterText": "age",
    "insertText": "age",
    "insertTextFormat": 2,
    "kind": 12,
    "label": "age",
    "sortText": "100_age",
    "textEdit": Object {
      "newText": "age",
      "range": Object {
        "end": Object {
          "character": 33,
          "line": 16,
        },
        "start": Object {
          "character": 33,
          "line": 16,
        },
      },
    },
  },
  Object {
    "detail": "string",
    "filterText": "avgLoad",
    "insertText": "avgLoad",
    "insertTextFormat": 2,
    "kind": 12,
    "label": "avgLoad",
    "sortText": "100_avgLoad",
    "textEdit": Object {
      "newText": "avgLoad",
      "range": Object {
        "end": Object {
          "character": 33,
          "line": 16,
        },
        "start": Object {
          "character": 33,
          "line": 16,
        },
      },
    },
  },
  Object {
    "detail": "1",
    "filterText": "numberOfPods",
    "insertText": "numberOfPods",
    "insertTextFormat": 2,
    "kind": 12,
    "label": "numberOfPods",
    "sortText": "100_numberOfPods",
    "textEdit": Object {
      "newText": "numberOfPods",
      "range": Object {
        "end": Object {
          "character": 33,
          "line": 16,
        },
        "start": Object {
          "character": 33,
          "line": 16,
        },
      },
    },
  },
]
`;

exports[`SWF LS YAML code completion Jq completions data condition completion variables completion cursor before empty space 1`] = `140`;

exports[`SWF LS YAML code completion Jq completions data condition completion variables completion cursor before empty space 2`] = `
Array [
  Object {
    "detail": "The builtin function length gets the length of various different types of value.",
    "filterText": "length",
    "insertText": "length",
    "insertTextFormat": 2,
    "kind": 3,
    "label": "length",
    "sortText": "100_length",
    "textEdit": Object {
      "newText": "length",
      "range": Object {
        "end": Object {
          "character": 32,
          "line": 16,
        },
        "start": Object {
          "character": 32,
          "line": 16,
        },
      },
    },
  },
  Object {
    "detail": "The builtin function utf8bytelength outputs the number of bytes used to encode a string in UTF-8.",
    "filterText": "utf8bytelength",
    "insertText": "utf8bytelength",
    "insertTextFormat": 2,
    "kind": 3,
    "label": "utf8bytelength",
    "sortText": "100_utf8bytelength",
    "textEdit": Object {
      "newText": "'utf8bytelength'",
      "range": Object {
        "end": Object {
          "character": 32,
          "line": 16,
        },
        "start": Object {
          "character": 32,
          "line": 16,
        },
      },
    },
  },
  Object {
    "detail": "The builtin function keys, when given an object, returns its keys in an array.",
    "filterText": "keys",
    "insertText": "keys",
    "insertTextFormat": 2,
    "kind": 3,
    "label": "keys",
    "sortText": "100_keys",
    "textEdit": Object {
      "newText": "keys",
      "range": Object {
        "end": Object {
          "character": 32,
          "line": 16,
        },
        "start": Object {
          "character": 32,
          "line": 16,
        },
      },
    },
  },
  Object {
    "detail": "The keys_unsorted function is just like keys, but if the input is an object then the keys will not be sorted, instead the keys will roughly be in insertion order.",
    "filterText": "keys_unsorted",
    "insertText": "keys_unsorted",
    "insertTextFormat": 2,
    "kind": 3,
    "label": "keys_unsorted",
    "sortText": "100_keys_unsorted",
    "textEdit": Object {
      "newText": "keys_unsorted",
      "range": Object {
        "end": Object {
          "character": 32,
          "line": 16,
        },
        "start": Object {
          "character": 32,
          "line": 16,
        },
      },
    },
  },
  Object {
    "detail": "The builtin function has returns whether the input object has the given key, or the input array has an element at the given index.",
    "filterText": "has(key)",
    "insertText": "has(key)",
    "insertTextFormat": 2,
    "kind": 3,
    "label": "has(key)",
    "sortText": "100_has(key)",
    "textEdit": Object {
      "newText": "has(key)",
      "range": Object {
        "end": Object {
          "character": 32,
          "line": 16,
        },
        "start": Object {
          "character": 32,
          "line": 16,
        },
      },
    },
  },
]
`;

exports[`SWF LS YAML code completion Jq completions data condition completion variables completion cursor before the dot(variable) 1`] = `140`;

exports[`SWF LS YAML code completion Jq completions data condition completion variables completion cursor before the dot(variable) 2`] = `
Array [
  Object {
    "detail": "The builtin function length gets the length of various different types of value.",
    "filterText": "length",
    "insertText": "length",
    "insertTextFormat": 2,
    "kind": 3,
    "label": "length",
    "sortText": "100_length",
    "textEdit": Object {
      "newText": "length",
      "range": Object {
        "end": Object {
          "character": 32,
          "line": 16,
        },
        "start": Object {
          "character": 32,
          "line": 16,
        },
      },
    },
  },
  Object {
    "detail": "The builtin function utf8bytelength outputs the number of bytes used to encode a string in UTF-8.",
    "filterText": "utf8bytelength",
    "insertText": "utf8bytelength",
    "insertTextFormat": 2,
    "kind": 3,
    "label": "utf8bytelength",
    "sortText": "100_utf8bytelength",
    "textEdit": Object {
      "newText": "'utf8bytelength'",
      "range": Object {
        "end": Object {
          "character": 32,
          "line": 16,
        },
        "start": Object {
          "character": 32,
          "line": 16,
        },
      },
    },
  },
  Object {
    "detail": "The builtin function keys, when given an object, returns its keys in an array.",
    "filterText": "keys",
    "insertText": "keys",
    "insertTextFormat": 2,
    "kind": 3,
    "label": "keys",
    "sortText": "100_keys",
    "textEdit": Object {
      "newText": "keys",
      "range": Object {
        "end": Object {
          "character": 32,
          "line": 16,
        },
        "start": Object {
          "character": 32,
          "line": 16,
        },
      },
    },
  },
  Object {
    "detail": "The keys_unsorted function is just like keys, but if the input is an object then the keys will not be sorted, instead the keys will roughly be in insertion order.",
    "filterText": "keys_unsorted",
    "insertText": "keys_unsorted",
    "insertTextFormat": 2,
    "kind": 3,
    "label": "keys_unsorted",
    "sortText": "100_keys_unsorted",
    "textEdit": Object {
      "newText": "keys_unsorted",
      "range": Object {
        "end": Object {
          "character": 32,
          "line": 16,
        },
        "start": Object {
          "character": 32,
          "line": 16,
        },
      },
    },
  },
  Object {
    "detail": "The builtin function has returns whether the input object has the given key, or the input array has an element at the given index.",
    "filterText": "has(key)",
    "insertText": "has(key)",
    "insertTextFormat": 2,
    "kind": 3,
    "label": "has(key)",
    "sortText": "100_has(key)",
    "textEdit": Object {
      "newText": "has(key)",
      "range": Object {
        "end": Object {
          "character": 32,
          "line": 16,
        },
        "start": Object {
          "character": 32,
          "line": 16,
        },
      },
    },
  },
]
`;

exports[`SWF LS YAML code completion Jq completions data condition completion variables completion cursor with a space after the  dot(variable) 1`] = `140`;

exports[`SWF LS YAML code completion Jq completions data condition completion variables completion cursor with a space after the  dot(variable) 2`] = `
Array [
  Object {
    "detail": "The builtin function length gets the length of various different types of value.",
    "filterText": "length",
    "insertText": "length",
    "insertTextFormat": 2,
    "kind": 3,
    "label": "length",
    "sortText": "100_length",
    "textEdit": Object {
      "newText": "length",
      "range": Object {
        "end": Object {
          "character": 34,
          "line": 16,
        },
        "start": Object {
          "character": 34,
          "line": 16,
        },
      },
    },
  },
  Object {
    "detail": "The builtin function utf8bytelength outputs the number of bytes used to encode a string in UTF-8.",
    "filterText": "utf8bytelength",
    "insertText": "utf8bytelength",
    "insertTextFormat": 2,
    "kind": 3,
    "label": "utf8bytelength",
    "sortText": "100_utf8bytelength",
    "textEdit": Object {
      "newText": "'utf8bytelength'",
      "range": Object {
        "end": Object {
          "character": 34,
          "line": 16,
        },
        "start": Object {
          "character": 34,
          "line": 16,
        },
      },
    },
  },
  Object {
    "detail": "The builtin function keys, when given an object, returns its keys in an array.",
    "filterText": "keys",
    "insertText": "keys",
    "insertTextFormat": 2,
    "kind": 3,
    "label": "keys",
    "sortText": "100_keys",
    "textEdit": Object {
      "newText": "keys",
      "range": Object {
        "end": Object {
          "character": 34,
          "line": 16,
        },
        "start": Object {
          "character": 34,
          "line": 16,
        },
      },
    },
  },
  Object {
    "detail": "The keys_unsorted function is just like keys, but if the input is an object then the keys will not be sorted, instead the keys will roughly be in insertion order.",
    "filterText": "keys_unsorted",
    "insertText": "keys_unsorted",
    "insertTextFormat": 2,
    "kind": 3,
    "label": "keys_unsorted",
    "sortText": "100_keys_unsorted",
    "textEdit": Object {
      "newText": "keys_unsorted",
      "range": Object {
        "end": Object {
          "character": 34,
          "line": 16,
        },
        "start": Object {
          "character": 34,
          "line": 16,
        },
      },
    },
  },
  Object {
    "detail": "The builtin function has returns whether the input object has the given key, or the input array has an element at the given index.",
    "filterText": "has(key)",
    "insertText": "has(key)",
    "insertTextFormat": 2,
    "kind": 3,
    "label": "has(key)",
    "sortText": "100_has(key)",
    "textEdit": Object {
      "newText": "has(key)",
      "range": Object {
        "end": Object {
          "character": 34,
          "line": 16,
        },
        "start": Object {
          "character": 34,
          "line": 16,
        },
      },
    },
  },
]
`;

exports[`SWF LS YAML code completion Jq completions data condition completion variables completion cursor with a value following the  dot(variable) 1`] = `2`;

exports[`SWF LS YAML code completion Jq completions data condition completion variables completion cursor with a value following the  dot(variable) 2`] = `
Array [
  Object {
    "detail": "1",
    "filterText": "a",
    "insertText": "age",
    "insertTextFormat": 2,
    "kind": 12,
    "label": "age",
    "sortText": "100_age",
    "textEdit": Object {
      "newText": "age",
      "range": Object {
        "end": Object {
          "character": 34,
          "line": 16,
        },
        "start": Object {
          "character": 33,
          "line": 16,
        },
      },
    },
  },
  Object {
    "detail": "string",
    "filterText": "a",
    "insertText": "avgLoad",
    "insertTextFormat": 2,
    "kind": 12,
    "label": "avgLoad",
    "sortText": "100_avgLoad",
    "textEdit": Object {
      "newText": "avgLoad",
      "range": Object {
        "end": Object {
          "character": 34,
          "line": 16,
        },
        "start": Object {
          "character": 33,
          "line": 16,
        },
      },
    },
  },
]
`;

exports[`SWF LS YAML code completion Jq completions data condition completion variables completion empty object 1`] = `0`;

exports[`SWF LS YAML code completion Jq completions data condition completion variables completion empty object 2`] = `Array []`;

exports[`SWF LS YAML code completion Jq completions data condition completion variables completion empty object 3`] = `0`;

exports[`SWF LS YAML code completion Jq completions data condition completion variables completion empty object 4`] = `Array []`;

exports[`SWF LS YAML code completion Jq completions data condition completion variables completion empty object 5`] = `0`;

exports[`SWF LS YAML code completion Jq completions data condition completion variables completion empty object 6`] = `Array []`;

exports[`SWF LS YAML code completion Jq completions data condition completion variables completion fn: after some value 1`] = `2`;

exports[`SWF LS YAML code completion Jq completions data condition completion variables completion fn: after some value 2`] = `
Array [
  Object {
    "detail": "Reusable functions(expressions) defined in the functions array",
    "filterText": "expressionFunc1",
    "insertText": "expressionFunc1",
    "insertTextFormat": 2,
    "kind": 3,
    "label": "expressionFunc1",
    "sortText": "100_expressionFunc1",
    "textEdit": Object {
      "newText": "'expressionFunc1'",
      "range": Object {
        "end": Object {
          "character": 44,
          "line": 16,
        },
        "start": Object {
          "character": 44,
          "line": 16,
        },
      },
    },
  },
  Object {
    "detail": "Reusable functions(expressions) defined in the functions array",
    "filterText": "expressionFunc2",
    "insertText": "expressionFunc2",
    "insertTextFormat": 2,
    "kind": 3,
    "label": "expressionFunc2",
    "sortText": "100_expressionFunc2",
    "textEdit": Object {
      "newText": "'expressionFunc2'",
      "range": Object {
        "end": Object {
          "character": 44,
          "line": 16,
        },
        "start": Object {
          "character": 44,
          "line": 16,
        },
      },
    },
  },
]
`;

exports[`SWF LS YAML code completion Jq completions data condition completion variables completion fn: starting with a 1`] = `0`;

exports[`SWF LS YAML code completion Jq completions data condition completion variables completion fn: starting with a 2`] = `Array []`;

exports[`SWF LS YAML code completion Jq completions data condition completion variables completion fn: starting with r 1`] = `0`;

exports[`SWF LS YAML code completion Jq completions data condition completion variables completion fn: starting with r 2`] = `Array []`;

exports[`SWF LS YAML code completion Jq completions data condition completion variables completion no value/double quotes 1`] = `140`;

exports[`SWF LS YAML code completion Jq completions data condition completion variables completion no value/double quotes 2`] = `
Array [
  Object {
    "detail": "The builtin function length gets the length of various different types of value.",
    "filterText": "length",
    "insertText": "length",
    "insertTextFormat": 2,
    "kind": 3,
    "label": "length",
    "sortText": "100_length",
    "textEdit": Object {
      "newText": "length",
      "range": Object {
        "end": Object {
          "character": 32,
          "line": 16,
        },
        "start": Object {
          "character": 32,
          "line": 16,
        },
      },
    },
  },
  Object {
    "detail": "The builtin function utf8bytelength outputs the number of bytes used to encode a string in UTF-8.",
    "filterText": "utf8bytelength",
    "insertText": "utf8bytelength",
    "insertTextFormat": 2,
    "kind": 3,
    "label": "utf8bytelength",
    "sortText": "100_utf8bytelength",
    "textEdit": Object {
      "newText": "'utf8bytelength'",
      "range": Object {
        "end": Object {
          "character": 32,
          "line": 16,
        },
        "start": Object {
          "character": 32,
          "line": 16,
        },
      },
    },
  },
  Object {
    "detail": "The builtin function keys, when given an object, returns its keys in an array.",
    "filterText": "keys",
    "insertText": "keys",
    "insertTextFormat": 2,
    "kind": 3,
    "label": "keys",
    "sortText": "100_keys",
    "textEdit": Object {
      "newText": "keys",
      "range": Object {
        "end": Object {
          "character": 32,
          "line": 16,
        },
        "start": Object {
          "character": 32,
          "line": 16,
        },
      },
    },
  },
  Object {
    "detail": "The keys_unsorted function is just like keys, but if the input is an object then the keys will not be sorted, instead the keys will roughly be in insertion order.",
    "filterText": "keys_unsorted",
    "insertText": "keys_unsorted",
    "insertTextFormat": 2,
    "kind": 3,
    "label": "keys_unsorted",
    "sortText": "100_keys_unsorted",
    "textEdit": Object {
      "newText": "keys_unsorted",
      "range": Object {
        "end": Object {
          "character": 32,
          "line": 16,
        },
        "start": Object {
          "character": 32,
          "line": 16,
        },
      },
    },
  },
  Object {
    "detail": "The builtin function has returns whether the input object has the given key, or the input array has an element at the given index.",
    "filterText": "has(key)",
    "insertText": "has(key)",
    "insertTextFormat": 2,
    "kind": 3,
    "label": "has(key)",
    "sortText": "100_has(key)",
    "textEdit": Object {
      "newText": "has(key)",
      "range": Object {
        "end": Object {
          "character": 32,
          "line": 16,
        },
        "start": Object {
          "character": 32,
          "line": 16,
        },
      },
    },
  },
]
`;

exports[`SWF LS YAML code completion Jq completions data condition completion variables completion no value/single quotes 1`] = `140`;

exports[`SWF LS YAML code completion Jq completions data condition completion variables completion no value/single quotes 2`] = `
Array [
  Object {
    "detail": "The builtin function length gets the length of various different types of value.",
    "filterText": "length",
    "insertText": "length",
    "insertTextFormat": 2,
    "kind": 3,
    "label": "length",
    "sortText": "100_length",
    "textEdit": Object {
      "newText": "length",
      "range": Object {
        "end": Object {
          "character": 32,
          "line": 16,
        },
        "start": Object {
          "character": 32,
          "line": 16,
        },
      },
    },
  },
  Object {
    "detail": "The builtin function utf8bytelength outputs the number of bytes used to encode a string in UTF-8.",
    "filterText": "utf8bytelength",
    "insertText": "utf8bytelength",
    "insertTextFormat": 2,
    "kind": 3,
    "label": "utf8bytelength",
    "sortText": "100_utf8bytelength",
    "textEdit": Object {
      "newText": "'utf8bytelength'",
      "range": Object {
        "end": Object {
          "character": 32,
          "line": 16,
        },
        "start": Object {
          "character": 32,
          "line": 16,
        },
      },
    },
  },
  Object {
    "detail": "The builtin function keys, when given an object, returns its keys in an array.",
    "filterText": "keys",
    "insertText": "keys",
    "insertTextFormat": 2,
    "kind": 3,
    "label": "keys",
    "sortText": "100_keys",
    "textEdit": Object {
      "newText": "keys",
      "range": Object {
        "end": Object {
          "character": 32,
          "line": 16,
        },
        "start": Object {
          "character": 32,
          "line": 16,
        },
      },
    },
  },
  Object {
    "detail": "The keys_unsorted function is just like keys, but if the input is an object then the keys will not be sorted, instead the keys will roughly be in insertion order.",
    "filterText": "keys_unsorted",
    "insertText": "keys_unsorted",
    "insertTextFormat": 2,
    "kind": 3,
    "label": "keys_unsorted",
    "sortText": "100_keys_unsorted",
    "textEdit": Object {
      "newText": "keys_unsorted",
      "range": Object {
        "end": Object {
          "character": 32,
          "line": 16,
        },
        "start": Object {
          "character": 32,
          "line": 16,
        },
      },
    },
  },
  Object {
    "detail": "The builtin function has returns whether the input object has the given key, or the input array has an element at the given index.",
    "filterText": "has(key)",
    "insertText": "has(key)",
    "insertTextFormat": 2,
    "kind": 3,
    "label": "has(key)",
    "sortText": "100_has(key)",
    "textEdit": Object {
      "newText": "has(key)",
      "range": Object {
        "end": Object {
          "character": 32,
          "line": 16,
        },
        "start": Object {
          "character": 32,
          "line": 16,
        },
      },
    },
  },
]
`;

exports[`SWF LS YAML code completion Jq completions data condition completion variables completion space before fn: 1`] = `2`;

exports[`SWF LS YAML code completion Jq completions data condition completion variables completion space before fn: 2`] = `
Array [
  Object {
    "detail": "Reusable functions(expressions) defined in the functions array",
    "filterText": "expressionFunc1",
    "insertText": "expressionFunc1",
    "insertTextFormat": 2,
    "kind": 3,
    "label": "expressionFunc1",
    "sortText": "100_expressionFunc1",
    "textEdit": Object {
      "newText": "'expressionFunc1'",
      "range": Object {
        "end": Object {
          "character": 36,
          "line": 16,
        },
        "start": Object {
          "character": 36,
          "line": 16,
        },
      },
    },
  },
  Object {
    "detail": "Reusable functions(expressions) defined in the functions array",
    "filterText": "expressionFunc2",
    "insertText": "expressionFunc2",
    "insertTextFormat": 2,
    "kind": 3,
    "label": "expressionFunc2",
    "sortText": "100_expressionFunc2",
    "textEdit": Object {
      "newText": "'expressionFunc2'",
      "range": Object {
        "end": Object {
          "character": 36,
          "line": 16,
        },
        "start": Object {
          "character": 36,
          "line": 16,
        },
      },
    },
  },
]
`;

exports[`SWF LS YAML code completion Jq completions data condition completion variables completion value fn:/double quotes 1`] = `2`;

exports[`SWF LS YAML code completion Jq completions data condition completion variables completion value fn:/double quotes 2`] = `
Array [
  Object {
    "detail": "Reusable functions(expressions) defined in the functions array",
    "filterText": "expressionFunc1",
    "insertText": "expressionFunc1",
    "insertTextFormat": 2,
    "kind": 3,
    "label": "expressionFunc1",
    "sortText": "100_expressionFunc1",
    "textEdit": Object {
      "newText": "'expressionFunc1'",
      "range": Object {
        "end": Object {
          "character": 35,
          "line": 16,
        },
        "start": Object {
          "character": 35,
          "line": 16,
        },
      },
    },
  },
  Object {
    "detail": "Reusable functions(expressions) defined in the functions array",
    "filterText": "expressionFunc2",
    "insertText": "expressionFunc2",
    "insertTextFormat": 2,
    "kind": 3,
    "label": "expressionFunc2",
    "sortText": "100_expressionFunc2",
    "textEdit": Object {
      "newText": "'expressionFunc2'",
      "range": Object {
        "end": Object {
          "character": 35,
          "line": 16,
        },
        "start": Object {
          "character": 35,
          "line": 16,
        },
      },
    },
  },
]
`;

exports[`SWF LS YAML code completion Jq completions data condition completion variables completion value fn:/single quotes 1`] = `2`;

exports[`SWF LS YAML code completion Jq completions data condition completion variables completion value fn:/single quotes 2`] = `
Array [
  Object {
    "detail": "Reusable functions(expressions) defined in the functions array",
    "filterText": "expressionFunc1",
    "insertText": "expressionFunc1",
    "insertTextFormat": 2,
    "kind": 3,
    "label": "expressionFunc1",
    "sortText": "100_expressionFunc1",
    "textEdit": Object {
      "newText": "'expressionFunc1'",
      "range": Object {
        "end": Object {
          "character": 35,
          "line": 16,
        },
        "start": Object {
          "character": 35,
          "line": 16,
        },
      },
    },
  },
  Object {
    "detail": "Reusable functions(expressions) defined in the functions array",
    "filterText": "expressionFunc2",
    "insertText": "expressionFunc2",
    "insertTextFormat": 2,
    "kind": 3,
    "label": "expressionFunc2",
    "sortText": "100_expressionFunc2",
    "textEdit": Object {
      "newText": "'expressionFunc2'",
      "range": Object {
        "end": Object {
          "character": 35,
          "line": 16,
        },
        "start": Object {
          "character": 35,
          "line": 16,
        },
      },
    },
  },
]
`;

exports[`SWF LS YAML code completion Jq completions event data filter completions built-in functions completion cursor after a value - auto-complete the word map 1`] = `2`;

exports[`SWF LS YAML code completion Jq completions event data filter completions built-in functions completion cursor after a value - auto-complete the word map 2`] = `
Array [
  Object {
    "detail": "For any filter x, map(x) will run that filter for each element of the input array, and return the outputs in a new array. map(.+1) will increment each element of an array of numbers.",
    "filterText": "map",
    "insertText": "map(x)",
    "insertTextFormat": 2,
    "kind": 3,
    "label": "map(x)",
    "sortText": "100_map(x)",
    "textEdit": Object {
      "newText": "map(x)",
      "range": Object {
        "end": Object {
          "character": 28,
          "line": 16,
        },
        "start": Object {
          "character": 25,
          "line": 16,
        },
      },
    },
  },
  Object {
    "detail": "map_values(x) will run that filter for each element, but it will return an object when an object is passed.",
    "filterText": "map",
    "insertText": "map_values(x)",
    "insertTextFormat": 2,
    "kind": 3,
    "label": "map_values(x)",
    "sortText": "100_map_values(x)",
    "textEdit": Object {
      "newText": "map_values(x)",
      "range": Object {
        "end": Object {
          "character": 28,
          "line": 16,
        },
        "start": Object {
          "character": 25,
          "line": 16,
        },
      },
    },
  },
]
`;

exports[`SWF LS YAML code completion Jq completions event data filter completions built-in functions completion cursor after some random word 1`] = `140`;

exports[`SWF LS YAML code completion Jq completions event data filter completions built-in functions completion cursor after some random word 2`] = `
Array [
  Object {
    "detail": "The builtin function length gets the length of various different types of value.",
    "filterText": "length",
    "insertText": "length",
    "insertTextFormat": 2,
    "kind": 3,
    "label": "length",
    "sortText": "100_length",
    "textEdit": Object {
      "newText": "length",
      "range": Object {
        "end": Object {
          "character": 35,
          "line": 16,
        },
        "start": Object {
          "character": 35,
          "line": 16,
        },
      },
    },
  },
  Object {
    "detail": "The builtin function utf8bytelength outputs the number of bytes used to encode a string in UTF-8.",
    "filterText": "utf8bytelength",
    "insertText": "utf8bytelength",
    "insertTextFormat": 2,
    "kind": 3,
    "label": "utf8bytelength",
    "sortText": "100_utf8bytelength",
    "textEdit": Object {
      "newText": "'utf8bytelength'",
      "range": Object {
        "end": Object {
          "character": 35,
          "line": 16,
        },
        "start": Object {
          "character": 35,
          "line": 16,
        },
      },
    },
  },
  Object {
    "detail": "The builtin function keys, when given an object, returns its keys in an array.",
    "filterText": "keys",
    "insertText": "keys",
    "insertTextFormat": 2,
    "kind": 3,
    "label": "keys",
    "sortText": "100_keys",
    "textEdit": Object {
      "newText": "keys",
      "range": Object {
        "end": Object {
          "character": 35,
          "line": 16,
        },
        "start": Object {
          "character": 35,
          "line": 16,
        },
      },
    },
  },
  Object {
    "detail": "The keys_unsorted function is just like keys, but if the input is an object then the keys will not be sorted, instead the keys will roughly be in insertion order.",
    "filterText": "keys_unsorted",
    "insertText": "keys_unsorted",
    "insertTextFormat": 2,
    "kind": 3,
    "label": "keys_unsorted",
    "sortText": "100_keys_unsorted",
    "textEdit": Object {
      "newText": "keys_unsorted",
      "range": Object {
        "end": Object {
          "character": 35,
          "line": 16,
        },
        "start": Object {
          "character": 35,
          "line": 16,
        },
      },
    },
  },
  Object {
    "detail": "The builtin function has returns whether the input object has the given key, or the input array has an element at the given index.",
    "filterText": "has(key)",
    "insertText": "has(key)",
    "insertTextFormat": 2,
    "kind": 3,
    "label": "has(key)",
    "sortText": "100_has(key)",
    "textEdit": Object {
      "newText": "has(key)",
      "range": Object {
        "end": Object {
          "character": 35,
          "line": 16,
        },
        "start": Object {
          "character": 35,
          "line": 16,
        },
      },
    },
  },
]
`;

exports[`SWF LS YAML code completion Jq completions event data filter completions built-in functions completion cursor after the dot(variable):/double quotes 1`] = `4`;

exports[`SWF LS YAML code completion Jq completions event data filter completions built-in functions completion cursor after the dot(variable):/double quotes 2`] = `
Array [
  Object {
    "detail": "string",
    "filterText": "name",
    "insertText": "name",
    "insertTextFormat": 2,
    "kind": 12,
    "label": "name",
    "sortText": "100_name",
    "textEdit": Object {
      "newText": "name",
      "range": Object {
        "end": Object {
          "character": 26,
          "line": 16,
        },
        "start": Object {
          "character": 26,
          "line": 16,
        },
      },
    },
  },
  Object {
    "detail": "1",
    "filterText": "age",
    "insertText": "age",
    "insertTextFormat": 2,
    "kind": 12,
    "label": "age",
    "sortText": "100_age",
    "textEdit": Object {
      "newText": "age",
      "range": Object {
        "end": Object {
          "character": 26,
          "line": 16,
        },
        "start": Object {
          "character": 26,
          "line": 16,
        },
      },
    },
  },
  Object {
    "detail": "string",
    "filterText": "avgLoad",
    "insertText": "avgLoad",
    "insertTextFormat": 2,
    "kind": 12,
    "label": "avgLoad",
    "sortText": "100_avgLoad",
    "textEdit": Object {
      "newText": "avgLoad",
      "range": Object {
        "end": Object {
          "character": 26,
          "line": 16,
        },
        "start": Object {
          "character": 26,
          "line": 16,
        },
      },
    },
  },
  Object {
    "detail": "1",
    "filterText": "numberOfPods",
    "insertText": "numberOfPods",
    "insertTextFormat": 2,
    "kind": 12,
    "label": "numberOfPods",
    "sortText": "100_numberOfPods",
    "textEdit": Object {
      "newText": "numberOfPods",
      "range": Object {
        "end": Object {
          "character": 26,
          "line": 16,
        },
        "start": Object {
          "character": 26,
          "line": 16,
        },
      },
    },
  },
]
`;

exports[`SWF LS YAML code completion Jq completions event data filter completions built-in functions completion cursor after the dot(variable):/single quotes 1`] = `4`;

exports[`SWF LS YAML code completion Jq completions event data filter completions built-in functions completion cursor after the dot(variable):/single quotes 2`] = `
Array [
  Object {
    "detail": "string",
    "filterText": "name",
    "insertText": "name",
    "insertTextFormat": 2,
    "kind": 12,
    "label": "name",
    "sortText": "100_name",
    "textEdit": Object {
      "newText": "name",
      "range": Object {
        "end": Object {
          "character": 26,
          "line": 16,
        },
        "start": Object {
          "character": 26,
          "line": 16,
        },
      },
    },
  },
  Object {
    "detail": "1",
    "filterText": "age",
    "insertText": "age",
    "insertTextFormat": 2,
    "kind": 12,
    "label": "age",
    "sortText": "100_age",
    "textEdit": Object {
      "newText": "age",
      "range": Object {
        "end": Object {
          "character": 26,
          "line": 16,
        },
        "start": Object {
          "character": 26,
          "line": 16,
        },
      },
    },
  },
  Object {
    "detail": "string",
    "filterText": "avgLoad",
    "insertText": "avgLoad",
    "insertTextFormat": 2,
    "kind": 12,
    "label": "avgLoad",
    "sortText": "100_avgLoad",
    "textEdit": Object {
      "newText": "avgLoad",
      "range": Object {
        "end": Object {
          "character": 26,
          "line": 16,
        },
        "start": Object {
          "character": 26,
          "line": 16,
        },
      },
    },
  },
  Object {
    "detail": "1",
    "filterText": "numberOfPods",
    "insertText": "numberOfPods",
    "insertTextFormat": 2,
    "kind": 12,
    "label": "numberOfPods",
    "sortText": "100_numberOfPods",
    "textEdit": Object {
      "newText": "numberOfPods",
      "range": Object {
        "end": Object {
          "character": 26,
          "line": 16,
        },
        "start": Object {
          "character": 26,
          "line": 16,
        },
      },
    },
  },
]
`;

exports[`SWF LS YAML code completion Jq completions event data filter completions built-in functions completion cursor before empty space 1`] = `140`;

exports[`SWF LS YAML code completion Jq completions event data filter completions built-in functions completion cursor before empty space 2`] = `
Array [
  Object {
    "detail": "The builtin function length gets the length of various different types of value.",
    "filterText": "length",
    "insertText": "length",
    "insertTextFormat": 2,
    "kind": 3,
    "label": "length",
    "sortText": "100_length",
    "textEdit": Object {
      "newText": "length",
      "range": Object {
        "end": Object {
          "character": 25,
          "line": 16,
        },
        "start": Object {
          "character": 25,
          "line": 16,
        },
      },
    },
  },
  Object {
    "detail": "The builtin function utf8bytelength outputs the number of bytes used to encode a string in UTF-8.",
    "filterText": "utf8bytelength",
    "insertText": "utf8bytelength",
    "insertTextFormat": 2,
    "kind": 3,
    "label": "utf8bytelength",
    "sortText": "100_utf8bytelength",
    "textEdit": Object {
      "newText": "'utf8bytelength'",
      "range": Object {
        "end": Object {
          "character": 25,
          "line": 16,
        },
        "start": Object {
          "character": 25,
          "line": 16,
        },
      },
    },
  },
  Object {
    "detail": "The builtin function keys, when given an object, returns its keys in an array.",
    "filterText": "keys",
    "insertText": "keys",
    "insertTextFormat": 2,
    "kind": 3,
    "label": "keys",
    "sortText": "100_keys",
    "textEdit": Object {
      "newText": "keys",
      "range": Object {
        "end": Object {
          "character": 25,
          "line": 16,
        },
        "start": Object {
          "character": 25,
          "line": 16,
        },
      },
    },
  },
  Object {
    "detail": "The keys_unsorted function is just like keys, but if the input is an object then the keys will not be sorted, instead the keys will roughly be in insertion order.",
    "filterText": "keys_unsorted",
    "insertText": "keys_unsorted",
    "insertTextFormat": 2,
    "kind": 3,
    "label": "keys_unsorted",
    "sortText": "100_keys_unsorted",
    "textEdit": Object {
      "newText": "keys_unsorted",
      "range": Object {
        "end": Object {
          "character": 25,
          "line": 16,
        },
        "start": Object {
          "character": 25,
          "line": 16,
        },
      },
    },
  },
  Object {
    "detail": "The builtin function has returns whether the input object has the given key, or the input array has an element at the given index.",
    "filterText": "has(key)",
    "insertText": "has(key)",
    "insertTextFormat": 2,
    "kind": 3,
    "label": "has(key)",
    "sortText": "100_has(key)",
    "textEdit": Object {
      "newText": "has(key)",
      "range": Object {
        "end": Object {
          "character": 25,
          "line": 16,
        },
        "start": Object {
          "character": 25,
          "line": 16,
        },
      },
    },
  },
]
`;

exports[`SWF LS YAML code completion Jq completions event data filter completions built-in functions completion cursor before the dot(variable) 1`] = `140`;

exports[`SWF LS YAML code completion Jq completions event data filter completions built-in functions completion cursor before the dot(variable) 2`] = `
Array [
  Object {
    "detail": "The builtin function length gets the length of various different types of value.",
    "filterText": "length",
    "insertText": "length",
    "insertTextFormat": 2,
    "kind": 3,
    "label": "length",
    "sortText": "100_length",
    "textEdit": Object {
      "newText": "length",
      "range": Object {
        "end": Object {
          "character": 25,
          "line": 16,
        },
        "start": Object {
          "character": 25,
          "line": 16,
        },
      },
    },
  },
  Object {
    "detail": "The builtin function utf8bytelength outputs the number of bytes used to encode a string in UTF-8.",
    "filterText": "utf8bytelength",
    "insertText": "utf8bytelength",
    "insertTextFormat": 2,
    "kind": 3,
    "label": "utf8bytelength",
    "sortText": "100_utf8bytelength",
    "textEdit": Object {
      "newText": "'utf8bytelength'",
      "range": Object {
        "end": Object {
          "character": 25,
          "line": 16,
        },
        "start": Object {
          "character": 25,
          "line": 16,
        },
      },
    },
  },
  Object {
    "detail": "The builtin function keys, when given an object, returns its keys in an array.",
    "filterText": "keys",
    "insertText": "keys",
    "insertTextFormat": 2,
    "kind": 3,
    "label": "keys",
    "sortText": "100_keys",
    "textEdit": Object {
      "newText": "keys",
      "range": Object {
        "end": Object {
          "character": 25,
          "line": 16,
        },
        "start": Object {
          "character": 25,
          "line": 16,
        },
      },
    },
  },
  Object {
    "detail": "The keys_unsorted function is just like keys, but if the input is an object then the keys will not be sorted, instead the keys will roughly be in insertion order.",
    "filterText": "keys_unsorted",
    "insertText": "keys_unsorted",
    "insertTextFormat": 2,
    "kind": 3,
    "label": "keys_unsorted",
    "sortText": "100_keys_unsorted",
    "textEdit": Object {
      "newText": "keys_unsorted",
      "range": Object {
        "end": Object {
          "character": 25,
          "line": 16,
        },
        "start": Object {
          "character": 25,
          "line": 16,
        },
      },
    },
  },
  Object {
    "detail": "The builtin function has returns whether the input object has the given key, or the input array has an element at the given index.",
    "filterText": "has(key)",
    "insertText": "has(key)",
    "insertTextFormat": 2,
    "kind": 3,
    "label": "has(key)",
    "sortText": "100_has(key)",
    "textEdit": Object {
      "newText": "has(key)",
      "range": Object {
        "end": Object {
          "character": 25,
          "line": 16,
        },
        "start": Object {
          "character": 25,
          "line": 16,
        },
      },
    },
  },
]
`;

exports[`SWF LS YAML code completion Jq completions event data filter completions built-in functions completion cursor with a space after the  dot(variable) 1`] = `140`;

exports[`SWF LS YAML code completion Jq completions event data filter completions built-in functions completion cursor with a space after the  dot(variable) 2`] = `
Array [
  Object {
    "detail": "The builtin function length gets the length of various different types of value.",
    "filterText": "length",
    "insertText": "length",
    "insertTextFormat": 2,
    "kind": 3,
    "label": "length",
    "sortText": "100_length",
    "textEdit": Object {
      "newText": "length",
      "range": Object {
        "end": Object {
          "character": 27,
          "line": 16,
        },
        "start": Object {
          "character": 27,
          "line": 16,
        },
      },
    },
  },
  Object {
    "detail": "The builtin function utf8bytelength outputs the number of bytes used to encode a string in UTF-8.",
    "filterText": "utf8bytelength",
    "insertText": "utf8bytelength",
    "insertTextFormat": 2,
    "kind": 3,
    "label": "utf8bytelength",
    "sortText": "100_utf8bytelength",
    "textEdit": Object {
      "newText": "'utf8bytelength'",
      "range": Object {
        "end": Object {
          "character": 27,
          "line": 16,
        },
        "start": Object {
          "character": 27,
          "line": 16,
        },
      },
    },
  },
  Object {
    "detail": "The builtin function keys, when given an object, returns its keys in an array.",
    "filterText": "keys",
    "insertText": "keys",
    "insertTextFormat": 2,
    "kind": 3,
    "label": "keys",
    "sortText": "100_keys",
    "textEdit": Object {
      "newText": "keys",
      "range": Object {
        "end": Object {
          "character": 27,
          "line": 16,
        },
        "start": Object {
          "character": 27,
          "line": 16,
        },
      },
    },
  },
  Object {
    "detail": "The keys_unsorted function is just like keys, but if the input is an object then the keys will not be sorted, instead the keys will roughly be in insertion order.",
    "filterText": "keys_unsorted",
    "insertText": "keys_unsorted",
    "insertTextFormat": 2,
    "kind": 3,
    "label": "keys_unsorted",
    "sortText": "100_keys_unsorted",
    "textEdit": Object {
      "newText": "keys_unsorted",
      "range": Object {
        "end": Object {
          "character": 27,
          "line": 16,
        },
        "start": Object {
          "character": 27,
          "line": 16,
        },
      },
    },
  },
  Object {
    "detail": "The builtin function has returns whether the input object has the given key, or the input array has an element at the given index.",
    "filterText": "has(key)",
    "insertText": "has(key)",
    "insertTextFormat": 2,
    "kind": 3,
    "label": "has(key)",
    "sortText": "100_has(key)",
    "textEdit": Object {
      "newText": "has(key)",
      "range": Object {
        "end": Object {
          "character": 27,
          "line": 16,
        },
        "start": Object {
          "character": 27,
          "line": 16,
        },
      },
    },
  },
]
`;

exports[`SWF LS YAML code completion Jq completions event data filter completions built-in functions completion cursor with a value following the  dot(variable) 1`] = `2`;

exports[`SWF LS YAML code completion Jq completions event data filter completions built-in functions completion cursor with a value following the  dot(variable) 2`] = `
Array [
  Object {
    "detail": "1",
    "filterText": "a",
    "insertText": "age",
    "insertTextFormat": 2,
    "kind": 12,
    "label": "age",
    "sortText": "100_age",
    "textEdit": Object {
      "newText": "age",
      "range": Object {
        "end": Object {
          "character": 27,
          "line": 16,
        },
        "start": Object {
          "character": 26,
          "line": 16,
        },
      },
    },
  },
  Object {
    "detail": "string",
    "filterText": "a",
    "insertText": "avgLoad",
    "insertTextFormat": 2,
    "kind": 12,
    "label": "avgLoad",
    "sortText": "100_avgLoad",
    "textEdit": Object {
      "newText": "avgLoad",
      "range": Object {
        "end": Object {
          "character": 27,
          "line": 16,
        },
        "start": Object {
          "character": 26,
          "line": 16,
        },
      },
    },
  },
]
`;

exports[`SWF LS YAML code completion Jq completions event data filter completions built-in functions completion empty object 1`] = `0`;

exports[`SWF LS YAML code completion Jq completions event data filter completions built-in functions completion empty object 2`] = `Array []`;

exports[`SWF LS YAML code completion Jq completions event data filter completions built-in functions completion empty object 3`] = `0`;

exports[`SWF LS YAML code completion Jq completions event data filter completions built-in functions completion empty object 4`] = `Array []`;

exports[`SWF LS YAML code completion Jq completions event data filter completions built-in functions completion empty object 5`] = `0`;

exports[`SWF LS YAML code completion Jq completions event data filter completions built-in functions completion empty object 6`] = `Array []`;

exports[`SWF LS YAML code completion Jq completions event data filter completions built-in functions completion fn: after some value 1`] = `2`;

exports[`SWF LS YAML code completion Jq completions event data filter completions built-in functions completion fn: after some value 2`] = `
Array [
  Object {
    "detail": "Reusable functions(expressions) defined in the functions array",
    "filterText": "expressionFunc1",
    "insertText": "expressionFunc1",
    "insertTextFormat": 2,
    "kind": 3,
    "label": "expressionFunc1",
    "sortText": "100_expressionFunc1",
    "textEdit": Object {
      "newText": "'expressionFunc1'",
      "range": Object {
        "end": Object {
          "character": 37,
          "line": 16,
        },
        "start": Object {
          "character": 37,
          "line": 16,
        },
      },
    },
  },
  Object {
    "detail": "Reusable functions(expressions) defined in the functions array",
    "filterText": "expressionFunc2",
    "insertText": "expressionFunc2",
    "insertTextFormat": 2,
    "kind": 3,
    "label": "expressionFunc2",
    "sortText": "100_expressionFunc2",
    "textEdit": Object {
      "newText": "'expressionFunc2'",
      "range": Object {
        "end": Object {
          "character": 37,
          "line": 16,
        },
        "start": Object {
          "character": 37,
          "line": 16,
        },
      },
    },
  },
]
`;

exports[`SWF LS YAML code completion Jq completions event data filter completions built-in functions completion fn: starting with a 1`] = `0`;

exports[`SWF LS YAML code completion Jq completions event data filter completions built-in functions completion fn: starting with a 2`] = `Array []`;

exports[`SWF LS YAML code completion Jq completions event data filter completions built-in functions completion fn: starting with r 1`] = `0`;

exports[`SWF LS YAML code completion Jq completions event data filter completions built-in functions completion fn: starting with r 2`] = `Array []`;

exports[`SWF LS YAML code completion Jq completions event data filter completions built-in functions completion no value/double quotes 1`] = `140`;

exports[`SWF LS YAML code completion Jq completions event data filter completions built-in functions completion no value/double quotes 2`] = `
Array [
  Object {
    "detail": "The builtin function length gets the length of various different types of value.",
    "filterText": "length",
    "insertText": "length",
    "insertTextFormat": 2,
    "kind": 3,
    "label": "length",
    "sortText": "100_length",
    "textEdit": Object {
      "newText": "length",
      "range": Object {
        "end": Object {
          "character": 25,
          "line": 16,
        },
        "start": Object {
          "character": 25,
          "line": 16,
        },
      },
    },
  },
  Object {
    "detail": "The builtin function utf8bytelength outputs the number of bytes used to encode a string in UTF-8.",
    "filterText": "utf8bytelength",
    "insertText": "utf8bytelength",
    "insertTextFormat": 2,
    "kind": 3,
    "label": "utf8bytelength",
    "sortText": "100_utf8bytelength",
    "textEdit": Object {
      "newText": "'utf8bytelength'",
      "range": Object {
        "end": Object {
          "character": 25,
          "line": 16,
        },
        "start": Object {
          "character": 25,
          "line": 16,
        },
      },
    },
  },
  Object {
    "detail": "The builtin function keys, when given an object, returns its keys in an array.",
    "filterText": "keys",
    "insertText": "keys",
    "insertTextFormat": 2,
    "kind": 3,
    "label": "keys",
    "sortText": "100_keys",
    "textEdit": Object {
      "newText": "keys",
      "range": Object {
        "end": Object {
          "character": 25,
          "line": 16,
        },
        "start": Object {
          "character": 25,
          "line": 16,
        },
      },
    },
  },
  Object {
    "detail": "The keys_unsorted function is just like keys, but if the input is an object then the keys will not be sorted, instead the keys will roughly be in insertion order.",
    "filterText": "keys_unsorted",
    "insertText": "keys_unsorted",
    "insertTextFormat": 2,
    "kind": 3,
    "label": "keys_unsorted",
    "sortText": "100_keys_unsorted",
    "textEdit": Object {
      "newText": "keys_unsorted",
      "range": Object {
        "end": Object {
          "character": 25,
          "line": 16,
        },
        "start": Object {
          "character": 25,
          "line": 16,
        },
      },
    },
  },
  Object {
    "detail": "The builtin function has returns whether the input object has the given key, or the input array has an element at the given index.",
    "filterText": "has(key)",
    "insertText": "has(key)",
    "insertTextFormat": 2,
    "kind": 3,
    "label": "has(key)",
    "sortText": "100_has(key)",
    "textEdit": Object {
      "newText": "has(key)",
      "range": Object {
        "end": Object {
          "character": 25,
          "line": 16,
        },
        "start": Object {
          "character": 25,
          "line": 16,
        },
      },
    },
  },
]
`;

exports[`SWF LS YAML code completion Jq completions event data filter completions built-in functions completion no value/single quotes 1`] = `140`;

exports[`SWF LS YAML code completion Jq completions event data filter completions built-in functions completion no value/single quotes 2`] = `
Array [
  Object {
    "detail": "The builtin function length gets the length of various different types of value.",
    "filterText": "length",
    "insertText": "length",
    "insertTextFormat": 2,
    "kind": 3,
    "label": "length",
    "sortText": "100_length",
    "textEdit": Object {
      "newText": "length",
      "range": Object {
        "end": Object {
          "character": 25,
          "line": 16,
        },
        "start": Object {
          "character": 25,
          "line": 16,
        },
      },
    },
  },
  Object {
    "detail": "The builtin function utf8bytelength outputs the number of bytes used to encode a string in UTF-8.",
    "filterText": "utf8bytelength",
    "insertText": "utf8bytelength",
    "insertTextFormat": 2,
    "kind": 3,
    "label": "utf8bytelength",
    "sortText": "100_utf8bytelength",
    "textEdit": Object {
      "newText": "'utf8bytelength'",
      "range": Object {
        "end": Object {
          "character": 25,
          "line": 16,
        },
        "start": Object {
          "character": 25,
          "line": 16,
        },
      },
    },
  },
  Object {
    "detail": "The builtin function keys, when given an object, returns its keys in an array.",
    "filterText": "keys",
    "insertText": "keys",
    "insertTextFormat": 2,
    "kind": 3,
    "label": "keys",
    "sortText": "100_keys",
    "textEdit": Object {
      "newText": "keys",
      "range": Object {
        "end": Object {
          "character": 25,
          "line": 16,
        },
        "start": Object {
          "character": 25,
          "line": 16,
        },
      },
    },
  },
  Object {
    "detail": "The keys_unsorted function is just like keys, but if the input is an object then the keys will not be sorted, instead the keys will roughly be in insertion order.",
    "filterText": "keys_unsorted",
    "insertText": "keys_unsorted",
    "insertTextFormat": 2,
    "kind": 3,
    "label": "keys_unsorted",
    "sortText": "100_keys_unsorted",
    "textEdit": Object {
      "newText": "keys_unsorted",
      "range": Object {
        "end": Object {
          "character": 25,
          "line": 16,
        },
        "start": Object {
          "character": 25,
          "line": 16,
        },
      },
    },
  },
  Object {
    "detail": "The builtin function has returns whether the input object has the given key, or the input array has an element at the given index.",
    "filterText": "has(key)",
    "insertText": "has(key)",
    "insertTextFormat": 2,
    "kind": 3,
    "label": "has(key)",
    "sortText": "100_has(key)",
    "textEdit": Object {
      "newText": "has(key)",
      "range": Object {
        "end": Object {
          "character": 25,
          "line": 16,
        },
        "start": Object {
          "character": 25,
          "line": 16,
        },
      },
    },
  },
]
`;

exports[`SWF LS YAML code completion Jq completions event data filter completions built-in functions completion space before fn: 1`] = `2`;

exports[`SWF LS YAML code completion Jq completions event data filter completions built-in functions completion space before fn: 2`] = `
Array [
  Object {
    "detail": "Reusable functions(expressions) defined in the functions array",
    "filterText": "expressionFunc1",
    "insertText": "expressionFunc1",
    "insertTextFormat": 2,
    "kind": 3,
    "label": "expressionFunc1",
    "sortText": "100_expressionFunc1",
    "textEdit": Object {
      "newText": "'expressionFunc1'",
      "range": Object {
        "end": Object {
          "character": 29,
          "line": 16,
        },
        "start": Object {
          "character": 29,
          "line": 16,
        },
      },
    },
  },
  Object {
    "detail": "Reusable functions(expressions) defined in the functions array",
    "filterText": "expressionFunc2",
    "insertText": "expressionFunc2",
    "insertTextFormat": 2,
    "kind": 3,
    "label": "expressionFunc2",
    "sortText": "100_expressionFunc2",
    "textEdit": Object {
      "newText": "'expressionFunc2'",
      "range": Object {
        "end": Object {
          "character": 29,
          "line": 16,
        },
        "start": Object {
          "character": 29,
          "line": 16,
        },
      },
    },
  },
]
`;

exports[`SWF LS YAML code completion Jq completions event data filter completions built-in functions completion value fn:/double quotes 1`] = `2`;

exports[`SWF LS YAML code completion Jq completions event data filter completions built-in functions completion value fn:/double quotes 2`] = `
Array [
  Object {
    "detail": "Reusable functions(expressions) defined in the functions array",
    "filterText": "expressionFunc1",
    "insertText": "expressionFunc1",
    "insertTextFormat": 2,
    "kind": 3,
    "label": "expressionFunc1",
    "sortText": "100_expressionFunc1",
    "textEdit": Object {
      "newText": "'expressionFunc1'",
      "range": Object {
        "end": Object {
          "character": 28,
          "line": 16,
        },
        "start": Object {
          "character": 28,
          "line": 16,
        },
      },
    },
  },
  Object {
    "detail": "Reusable functions(expressions) defined in the functions array",
    "filterText": "expressionFunc2",
    "insertText": "expressionFunc2",
    "insertTextFormat": 2,
    "kind": 3,
    "label": "expressionFunc2",
    "sortText": "100_expressionFunc2",
    "textEdit": Object {
      "newText": "'expressionFunc2'",
      "range": Object {
        "end": Object {
          "character": 28,
          "line": 16,
        },
        "start": Object {
          "character": 28,
          "line": 16,
        },
      },
    },
  },
]
`;

exports[`SWF LS YAML code completion Jq completions event data filter completions built-in functions completion value fn:/single quotes 1`] = `2`;

exports[`SWF LS YAML code completion Jq completions event data filter completions built-in functions completion value fn:/single quotes 2`] = `
Array [
  Object {
    "detail": "Reusable functions(expressions) defined in the functions array",
    "filterText": "expressionFunc1",
    "insertText": "expressionFunc1",
    "insertTextFormat": 2,
    "kind": 3,
    "label": "expressionFunc1",
    "sortText": "100_expressionFunc1",
    "textEdit": Object {
      "newText": "'expressionFunc1'",
      "range": Object {
        "end": Object {
          "character": 28,
          "line": 16,
        },
        "start": Object {
          "character": 28,
          "line": 16,
        },
      },
    },
  },
  Object {
    "detail": "Reusable functions(expressions) defined in the functions array",
    "filterText": "expressionFunc2",
    "insertText": "expressionFunc2",
    "insertTextFormat": 2,
    "kind": 3,
    "label": "expressionFunc2",
    "sortText": "100_expressionFunc2",
    "textEdit": Object {
      "newText": "'expressionFunc2'",
      "range": Object {
        "end": Object {
          "character": 28,
          "line": 16,
        },
        "start": Object {
          "character": 28,
          "line": 16,
        },
      },
    },
  },
]
`;

exports[`SWF LS YAML code completion Jq completions event data filter completions variables completion cursor after a value - auto-complete the word map 1`] = `2`;

exports[`SWF LS YAML code completion Jq completions event data filter completions variables completion cursor after a value - auto-complete the word map 2`] = `
Array [
  Object {
    "detail": "For any filter x, map(x) will run that filter for each element of the input array, and return the outputs in a new array. map(.+1) will increment each element of an array of numbers.",
    "filterText": "map",
    "insertText": "map(x)",
    "insertTextFormat": 2,
    "kind": 3,
    "label": "map(x)",
    "sortText": "100_map(x)",
    "textEdit": Object {
      "newText": "map(x)",
      "range": Object {
        "end": Object {
          "character": 28,
          "line": 16,
        },
        "start": Object {
          "character": 25,
          "line": 16,
        },
      },
    },
  },
  Object {
    "detail": "map_values(x) will run that filter for each element, but it will return an object when an object is passed.",
    "filterText": "map",
    "insertText": "map_values(x)",
    "insertTextFormat": 2,
    "kind": 3,
    "label": "map_values(x)",
    "sortText": "100_map_values(x)",
    "textEdit": Object {
      "newText": "map_values(x)",
      "range": Object {
        "end": Object {
          "character": 28,
          "line": 16,
        },
        "start": Object {
          "character": 25,
          "line": 16,
        },
      },
    },
  },
]
`;

exports[`SWF LS YAML code completion Jq completions event data filter completions variables completion cursor after some random word 1`] = `140`;

exports[`SWF LS YAML code completion Jq completions event data filter completions variables completion cursor after some random word 2`] = `
Array [
  Object {
    "detail": "The builtin function length gets the length of various different types of value.",
    "filterText": "length",
    "insertText": "length",
    "insertTextFormat": 2,
    "kind": 3,
    "label": "length",
    "sortText": "100_length",
    "textEdit": Object {
      "newText": "length",
      "range": Object {
        "end": Object {
          "character": 35,
          "line": 16,
        },
        "start": Object {
          "character": 35,
          "line": 16,
        },
      },
    },
  },
  Object {
    "detail": "The builtin function utf8bytelength outputs the number of bytes used to encode a string in UTF-8.",
    "filterText": "utf8bytelength",
    "insertText": "utf8bytelength",
    "insertTextFormat": 2,
    "kind": 3,
    "label": "utf8bytelength",
    "sortText": "100_utf8bytelength",
    "textEdit": Object {
      "newText": "'utf8bytelength'",
      "range": Object {
        "end": Object {
          "character": 35,
          "line": 16,
        },
        "start": Object {
          "character": 35,
          "line": 16,
        },
      },
    },
  },
  Object {
    "detail": "The builtin function keys, when given an object, returns its keys in an array.",
    "filterText": "keys",
    "insertText": "keys",
    "insertTextFormat": 2,
    "kind": 3,
    "label": "keys",
    "sortText": "100_keys",
    "textEdit": Object {
      "newText": "keys",
      "range": Object {
        "end": Object {
          "character": 35,
          "line": 16,
        },
        "start": Object {
          "character": 35,
          "line": 16,
        },
      },
    },
  },
  Object {
    "detail": "The keys_unsorted function is just like keys, but if the input is an object then the keys will not be sorted, instead the keys will roughly be in insertion order.",
    "filterText": "keys_unsorted",
    "insertText": "keys_unsorted",
    "insertTextFormat": 2,
    "kind": 3,
    "label": "keys_unsorted",
    "sortText": "100_keys_unsorted",
    "textEdit": Object {
      "newText": "keys_unsorted",
      "range": Object {
        "end": Object {
          "character": 35,
          "line": 16,
        },
        "start": Object {
          "character": 35,
          "line": 16,
        },
      },
    },
  },
  Object {
    "detail": "The builtin function has returns whether the input object has the given key, or the input array has an element at the given index.",
    "filterText": "has(key)",
    "insertText": "has(key)",
    "insertTextFormat": 2,
    "kind": 3,
    "label": "has(key)",
    "sortText": "100_has(key)",
    "textEdit": Object {
      "newText": "has(key)",
      "range": Object {
        "end": Object {
          "character": 35,
          "line": 16,
        },
        "start": Object {
          "character": 35,
          "line": 16,
        },
      },
    },
  },
]
`;

exports[`SWF LS YAML code completion Jq completions event data filter completions variables completion cursor after the dot(variable):/double quotes 1`] = `4`;

exports[`SWF LS YAML code completion Jq completions event data filter completions variables completion cursor after the dot(variable):/double quotes 2`] = `
Array [
  Object {
    "detail": "string",
    "filterText": "name",
    "insertText": "name",
    "insertTextFormat": 2,
    "kind": 12,
    "label": "name",
    "sortText": "100_name",
    "textEdit": Object {
      "newText": "name",
      "range": Object {
        "end": Object {
          "character": 26,
          "line": 16,
        },
        "start": Object {
          "character": 26,
          "line": 16,
        },
      },
    },
  },
  Object {
    "detail": "1",
    "filterText": "age",
    "insertText": "age",
    "insertTextFormat": 2,
    "kind": 12,
    "label": "age",
    "sortText": "100_age",
    "textEdit": Object {
      "newText": "age",
      "range": Object {
        "end": Object {
          "character": 26,
          "line": 16,
        },
        "start": Object {
          "character": 26,
          "line": 16,
        },
      },
    },
  },
  Object {
    "detail": "string",
    "filterText": "avgLoad",
    "insertText": "avgLoad",
    "insertTextFormat": 2,
    "kind": 12,
    "label": "avgLoad",
    "sortText": "100_avgLoad",
    "textEdit": Object {
      "newText": "avgLoad",
      "range": Object {
        "end": Object {
          "character": 26,
          "line": 16,
        },
        "start": Object {
          "character": 26,
          "line": 16,
        },
      },
    },
  },
  Object {
    "detail": "1",
    "filterText": "numberOfPods",
    "insertText": "numberOfPods",
    "insertTextFormat": 2,
    "kind": 12,
    "label": "numberOfPods",
    "sortText": "100_numberOfPods",
    "textEdit": Object {
      "newText": "numberOfPods",
      "range": Object {
        "end": Object {
          "character": 26,
          "line": 16,
        },
        "start": Object {
          "character": 26,
          "line": 16,
        },
      },
    },
  },
]
`;

exports[`SWF LS YAML code completion Jq completions event data filter completions variables completion cursor after the dot(variable):/single quotes 1`] = `4`;

exports[`SWF LS YAML code completion Jq completions event data filter completions variables completion cursor after the dot(variable):/single quotes 2`] = `
Array [
  Object {
    "detail": "string",
    "filterText": "name",
    "insertText": "name",
    "insertTextFormat": 2,
    "kind": 12,
    "label": "name",
    "sortText": "100_name",
    "textEdit": Object {
      "newText": "name",
      "range": Object {
        "end": Object {
          "character": 26,
          "line": 16,
        },
        "start": Object {
          "character": 26,
          "line": 16,
        },
      },
    },
  },
  Object {
    "detail": "1",
    "filterText": "age",
    "insertText": "age",
    "insertTextFormat": 2,
    "kind": 12,
    "label": "age",
    "sortText": "100_age",
    "textEdit": Object {
      "newText": "age",
      "range": Object {
        "end": Object {
          "character": 26,
          "line": 16,
        },
        "start": Object {
          "character": 26,
          "line": 16,
        },
      },
    },
  },
  Object {
    "detail": "string",
    "filterText": "avgLoad",
    "insertText": "avgLoad",
    "insertTextFormat": 2,
    "kind": 12,
    "label": "avgLoad",
    "sortText": "100_avgLoad",
    "textEdit": Object {
      "newText": "avgLoad",
      "range": Object {
        "end": Object {
          "character": 26,
          "line": 16,
        },
        "start": Object {
          "character": 26,
          "line": 16,
        },
      },
    },
  },
  Object {
    "detail": "1",
    "filterText": "numberOfPods",
    "insertText": "numberOfPods",
    "insertTextFormat": 2,
    "kind": 12,
    "label": "numberOfPods",
    "sortText": "100_numberOfPods",
    "textEdit": Object {
      "newText": "numberOfPods",
      "range": Object {
        "end": Object {
          "character": 26,
          "line": 16,
        },
        "start": Object {
          "character": 26,
          "line": 16,
        },
      },
    },
  },
]
`;

exports[`SWF LS YAML code completion Jq completions event data filter completions variables completion cursor before empty space 1`] = `140`;

exports[`SWF LS YAML code completion Jq completions event data filter completions variables completion cursor before empty space 2`] = `
Array [
  Object {
    "detail": "The builtin function length gets the length of various different types of value.",
    "filterText": "length",
    "insertText": "length",
    "insertTextFormat": 2,
    "kind": 3,
    "label": "length",
    "sortText": "100_length",
    "textEdit": Object {
      "newText": "length",
      "range": Object {
        "end": Object {
          "character": 25,
          "line": 16,
        },
        "start": Object {
          "character": 25,
          "line": 16,
        },
      },
    },
  },
  Object {
    "detail": "The builtin function utf8bytelength outputs the number of bytes used to encode a string in UTF-8.",
    "filterText": "utf8bytelength",
    "insertText": "utf8bytelength",
    "insertTextFormat": 2,
    "kind": 3,
    "label": "utf8bytelength",
    "sortText": "100_utf8bytelength",
    "textEdit": Object {
      "newText": "'utf8bytelength'",
      "range": Object {
        "end": Object {
          "character": 25,
          "line": 16,
        },
        "start": Object {
          "character": 25,
          "line": 16,
        },
      },
    },
  },
  Object {
    "detail": "The builtin function keys, when given an object, returns its keys in an array.",
    "filterText": "keys",
    "insertText": "keys",
    "insertTextFormat": 2,
    "kind": 3,
    "label": "keys",
    "sortText": "100_keys",
    "textEdit": Object {
      "newText": "keys",
      "range": Object {
        "end": Object {
          "character": 25,
          "line": 16,
        },
        "start": Object {
          "character": 25,
          "line": 16,
        },
      },
    },
  },
  Object {
    "detail": "The keys_unsorted function is just like keys, but if the input is an object then the keys will not be sorted, instead the keys will roughly be in insertion order.",
    "filterText": "keys_unsorted",
    "insertText": "keys_unsorted",
    "insertTextFormat": 2,
    "kind": 3,
    "label": "keys_unsorted",
    "sortText": "100_keys_unsorted",
    "textEdit": Object {
      "newText": "keys_unsorted",
      "range": Object {
        "end": Object {
          "character": 25,
          "line": 16,
        },
        "start": Object {
          "character": 25,
          "line": 16,
        },
      },
    },
  },
  Object {
    "detail": "The builtin function has returns whether the input object has the given key, or the input array has an element at the given index.",
    "filterText": "has(key)",
    "insertText": "has(key)",
    "insertTextFormat": 2,
    "kind": 3,
    "label": "has(key)",
    "sortText": "100_has(key)",
    "textEdit": Object {
      "newText": "has(key)",
      "range": Object {
        "end": Object {
          "character": 25,
          "line": 16,
        },
        "start": Object {
          "character": 25,
          "line": 16,
        },
      },
    },
  },
]
`;

exports[`SWF LS YAML code completion Jq completions event data filter completions variables completion cursor before the dot(variable) 1`] = `140`;

exports[`SWF LS YAML code completion Jq completions event data filter completions variables completion cursor before the dot(variable) 2`] = `
Array [
  Object {
    "detail": "The builtin function length gets the length of various different types of value.",
    "filterText": "length",
    "insertText": "length",
    "insertTextFormat": 2,
    "kind": 3,
    "label": "length",
    "sortText": "100_length",
    "textEdit": Object {
      "newText": "length",
      "range": Object {
        "end": Object {
          "character": 25,
          "line": 16,
        },
        "start": Object {
          "character": 25,
          "line": 16,
        },
      },
    },
  },
  Object {
    "detail": "The builtin function utf8bytelength outputs the number of bytes used to encode a string in UTF-8.",
    "filterText": "utf8bytelength",
    "insertText": "utf8bytelength",
    "insertTextFormat": 2,
    "kind": 3,
    "label": "utf8bytelength",
    "sortText": "100_utf8bytelength",
    "textEdit": Object {
      "newText": "'utf8bytelength'",
      "range": Object {
        "end": Object {
          "character": 25,
          "line": 16,
        },
        "start": Object {
          "character": 25,
          "line": 16,
        },
      },
    },
  },
  Object {
    "detail": "The builtin function keys, when given an object, returns its keys in an array.",
    "filterText": "keys",
    "insertText": "keys",
    "insertTextFormat": 2,
    "kind": 3,
    "label": "keys",
    "sortText": "100_keys",
    "textEdit": Object {
      "newText": "keys",
      "range": Object {
        "end": Object {
          "character": 25,
          "line": 16,
        },
        "start": Object {
          "character": 25,
          "line": 16,
        },
      },
    },
  },
  Object {
    "detail": "The keys_unsorted function is just like keys, but if the input is an object then the keys will not be sorted, instead the keys will roughly be in insertion order.",
    "filterText": "keys_unsorted",
    "insertText": "keys_unsorted",
    "insertTextFormat": 2,
    "kind": 3,
    "label": "keys_unsorted",
    "sortText": "100_keys_unsorted",
    "textEdit": Object {
      "newText": "keys_unsorted",
      "range": Object {
        "end": Object {
          "character": 25,
          "line": 16,
        },
        "start": Object {
          "character": 25,
          "line": 16,
        },
      },
    },
  },
  Object {
    "detail": "The builtin function has returns whether the input object has the given key, or the input array has an element at the given index.",
    "filterText": "has(key)",
    "insertText": "has(key)",
    "insertTextFormat": 2,
    "kind": 3,
    "label": "has(key)",
    "sortText": "100_has(key)",
    "textEdit": Object {
      "newText": "has(key)",
      "range": Object {
        "end": Object {
          "character": 25,
          "line": 16,
        },
        "start": Object {
          "character": 25,
          "line": 16,
        },
      },
    },
  },
]
`;

exports[`SWF LS YAML code completion Jq completions event data filter completions variables completion cursor with a space after the  dot(variable) 1`] = `140`;

exports[`SWF LS YAML code completion Jq completions event data filter completions variables completion cursor with a space after the  dot(variable) 2`] = `
Array [
  Object {
    "detail": "The builtin function length gets the length of various different types of value.",
    "filterText": "length",
    "insertText": "length",
    "insertTextFormat": 2,
    "kind": 3,
    "label": "length",
    "sortText": "100_length",
    "textEdit": Object {
      "newText": "length",
      "range": Object {
        "end": Object {
          "character": 27,
          "line": 16,
        },
        "start": Object {
          "character": 27,
          "line": 16,
        },
      },
    },
  },
  Object {
    "detail": "The builtin function utf8bytelength outputs the number of bytes used to encode a string in UTF-8.",
    "filterText": "utf8bytelength",
    "insertText": "utf8bytelength",
    "insertTextFormat": 2,
    "kind": 3,
    "label": "utf8bytelength",
    "sortText": "100_utf8bytelength",
    "textEdit": Object {
      "newText": "'utf8bytelength'",
      "range": Object {
        "end": Object {
          "character": 27,
          "line": 16,
        },
        "start": Object {
          "character": 27,
          "line": 16,
        },
      },
    },
  },
  Object {
    "detail": "The builtin function keys, when given an object, returns its keys in an array.",
    "filterText": "keys",
    "insertText": "keys",
    "insertTextFormat": 2,
    "kind": 3,
    "label": "keys",
    "sortText": "100_keys",
    "textEdit": Object {
      "newText": "keys",
      "range": Object {
        "end": Object {
          "character": 27,
          "line": 16,
        },
        "start": Object {
          "character": 27,
          "line": 16,
        },
      },
    },
  },
  Object {
    "detail": "The keys_unsorted function is just like keys, but if the input is an object then the keys will not be sorted, instead the keys will roughly be in insertion order.",
    "filterText": "keys_unsorted",
    "insertText": "keys_unsorted",
    "insertTextFormat": 2,
    "kind": 3,
    "label": "keys_unsorted",
    "sortText": "100_keys_unsorted",
    "textEdit": Object {
      "newText": "keys_unsorted",
      "range": Object {
        "end": Object {
          "character": 27,
          "line": 16,
        },
        "start": Object {
          "character": 27,
          "line": 16,
        },
      },
    },
  },
  Object {
    "detail": "The builtin function has returns whether the input object has the given key, or the input array has an element at the given index.",
    "filterText": "has(key)",
    "insertText": "has(key)",
    "insertTextFormat": 2,
    "kind": 3,
    "label": "has(key)",
    "sortText": "100_has(key)",
    "textEdit": Object {
      "newText": "has(key)",
      "range": Object {
        "end": Object {
          "character": 27,
          "line": 16,
        },
        "start": Object {
          "character": 27,
          "line": 16,
        },
      },
    },
  },
]
`;

exports[`SWF LS YAML code completion Jq completions event data filter completions variables completion cursor with a value following the  dot(variable) 1`] = `2`;

exports[`SWF LS YAML code completion Jq completions event data filter completions variables completion cursor with a value following the  dot(variable) 2`] = `
Array [
  Object {
    "detail": "1",
    "filterText": "a",
    "insertText": "age",
    "insertTextFormat": 2,
    "kind": 12,
    "label": "age",
    "sortText": "100_age",
    "textEdit": Object {
      "newText": "age",
      "range": Object {
        "end": Object {
          "character": 27,
          "line": 16,
        },
        "start": Object {
          "character": 26,
          "line": 16,
        },
      },
    },
  },
  Object {
    "detail": "string",
    "filterText": "a",
    "insertText": "avgLoad",
    "insertTextFormat": 2,
    "kind": 12,
    "label": "avgLoad",
    "sortText": "100_avgLoad",
    "textEdit": Object {
      "newText": "avgLoad",
      "range": Object {
        "end": Object {
          "character": 27,
          "line": 16,
        },
        "start": Object {
          "character": 26,
          "line": 16,
        },
      },
    },
  },
]
`;

exports[`SWF LS YAML code completion Jq completions event data filter completions variables completion empty object 1`] = `0`;

exports[`SWF LS YAML code completion Jq completions event data filter completions variables completion empty object 2`] = `Array []`;

exports[`SWF LS YAML code completion Jq completions event data filter completions variables completion empty object 3`] = `0`;

exports[`SWF LS YAML code completion Jq completions event data filter completions variables completion empty object 4`] = `Array []`;

exports[`SWF LS YAML code completion Jq completions event data filter completions variables completion empty object 5`] = `0`;

exports[`SWF LS YAML code completion Jq completions event data filter completions variables completion empty object 6`] = `Array []`;

exports[`SWF LS YAML code completion Jq completions event data filter completions variables completion fn: after some value 1`] = `2`;

exports[`SWF LS YAML code completion Jq completions event data filter completions variables completion fn: after some value 2`] = `
Array [
  Object {
    "detail": "Reusable functions(expressions) defined in the functions array",
    "filterText": "expressionFunc1",
    "insertText": "expressionFunc1",
    "insertTextFormat": 2,
    "kind": 3,
    "label": "expressionFunc1",
    "sortText": "100_expressionFunc1",
    "textEdit": Object {
      "newText": "'expressionFunc1'",
      "range": Object {
        "end": Object {
          "character": 37,
          "line": 16,
        },
        "start": Object {
          "character": 37,
          "line": 16,
        },
      },
    },
  },
  Object {
    "detail": "Reusable functions(expressions) defined in the functions array",
    "filterText": "expressionFunc2",
    "insertText": "expressionFunc2",
    "insertTextFormat": 2,
    "kind": 3,
    "label": "expressionFunc2",
    "sortText": "100_expressionFunc2",
    "textEdit": Object {
      "newText": "'expressionFunc2'",
      "range": Object {
        "end": Object {
          "character": 37,
          "line": 16,
        },
        "start": Object {
          "character": 37,
          "line": 16,
        },
      },
    },
  },
]
`;

exports[`SWF LS YAML code completion Jq completions event data filter completions variables completion fn: starting with a 1`] = `0`;

exports[`SWF LS YAML code completion Jq completions event data filter completions variables completion fn: starting with a 2`] = `Array []`;

exports[`SWF LS YAML code completion Jq completions event data filter completions variables completion fn: starting with r 1`] = `0`;

exports[`SWF LS YAML code completion Jq completions event data filter completions variables completion fn: starting with r 2`] = `Array []`;

exports[`SWF LS YAML code completion Jq completions event data filter completions variables completion no value/double quotes 1`] = `140`;

exports[`SWF LS YAML code completion Jq completions event data filter completions variables completion no value/double quotes 2`] = `
Array [
  Object {
    "detail": "The builtin function length gets the length of various different types of value.",
    "filterText": "length",
    "insertText": "length",
    "insertTextFormat": 2,
    "kind": 3,
    "label": "length",
    "sortText": "100_length",
    "textEdit": Object {
      "newText": "length",
      "range": Object {
        "end": Object {
          "character": 25,
          "line": 16,
        },
        "start": Object {
          "character": 25,
          "line": 16,
        },
      },
    },
  },
  Object {
    "detail": "The builtin function utf8bytelength outputs the number of bytes used to encode a string in UTF-8.",
    "filterText": "utf8bytelength",
    "insertText": "utf8bytelength",
    "insertTextFormat": 2,
    "kind": 3,
    "label": "utf8bytelength",
    "sortText": "100_utf8bytelength",
    "textEdit": Object {
      "newText": "'utf8bytelength'",
      "range": Object {
        "end": Object {
          "character": 25,
          "line": 16,
        },
        "start": Object {
          "character": 25,
          "line": 16,
        },
      },
    },
  },
  Object {
    "detail": "The builtin function keys, when given an object, returns its keys in an array.",
    "filterText": "keys",
    "insertText": "keys",
    "insertTextFormat": 2,
    "kind": 3,
    "label": "keys",
    "sortText": "100_keys",
    "textEdit": Object {
      "newText": "keys",
      "range": Object {
        "end": Object {
          "character": 25,
          "line": 16,
        },
        "start": Object {
          "character": 25,
          "line": 16,
        },
      },
    },
  },
  Object {
    "detail": "The keys_unsorted function is just like keys, but if the input is an object then the keys will not be sorted, instead the keys will roughly be in insertion order.",
    "filterText": "keys_unsorted",
    "insertText": "keys_unsorted",
    "insertTextFormat": 2,
    "kind": 3,
    "label": "keys_unsorted",
    "sortText": "100_keys_unsorted",
    "textEdit": Object {
      "newText": "keys_unsorted",
      "range": Object {
        "end": Object {
          "character": 25,
          "line": 16,
        },
        "start": Object {
          "character": 25,
          "line": 16,
        },
      },
    },
  },
  Object {
    "detail": "The builtin function has returns whether the input object has the given key, or the input array has an element at the given index.",
    "filterText": "has(key)",
    "insertText": "has(key)",
    "insertTextFormat": 2,
    "kind": 3,
    "label": "has(key)",
    "sortText": "100_has(key)",
    "textEdit": Object {
      "newText": "has(key)",
      "range": Object {
        "end": Object {
          "character": 25,
          "line": 16,
        },
        "start": Object {
          "character": 25,
          "line": 16,
        },
      },
    },
  },
]
`;

exports[`SWF LS YAML code completion Jq completions event data filter completions variables completion no value/single quotes 1`] = `140`;

exports[`SWF LS YAML code completion Jq completions event data filter completions variables completion no value/single quotes 2`] = `
Array [
  Object {
    "detail": "The builtin function length gets the length of various different types of value.",
    "filterText": "length",
    "insertText": "length",
    "insertTextFormat": 2,
    "kind": 3,
    "label": "length",
    "sortText": "100_length",
    "textEdit": Object {
      "newText": "length",
      "range": Object {
        "end": Object {
          "character": 25,
          "line": 16,
        },
        "start": Object {
          "character": 25,
          "line": 16,
        },
      },
    },
  },
  Object {
    "detail": "The builtin function utf8bytelength outputs the number of bytes used to encode a string in UTF-8.",
    "filterText": "utf8bytelength",
    "insertText": "utf8bytelength",
    "insertTextFormat": 2,
    "kind": 3,
    "label": "utf8bytelength",
    "sortText": "100_utf8bytelength",
    "textEdit": Object {
      "newText": "'utf8bytelength'",
      "range": Object {
        "end": Object {
          "character": 25,
          "line": 16,
        },
        "start": Object {
          "character": 25,
          "line": 16,
        },
      },
    },
  },
  Object {
    "detail": "The builtin function keys, when given an object, returns its keys in an array.",
    "filterText": "keys",
    "insertText": "keys",
    "insertTextFormat": 2,
    "kind": 3,
    "label": "keys",
    "sortText": "100_keys",
    "textEdit": Object {
      "newText": "keys",
      "range": Object {
        "end": Object {
          "character": 25,
          "line": 16,
        },
        "start": Object {
          "character": 25,
          "line": 16,
        },
      },
    },
  },
  Object {
    "detail": "The keys_unsorted function is just like keys, but if the input is an object then the keys will not be sorted, instead the keys will roughly be in insertion order.",
    "filterText": "keys_unsorted",
    "insertText": "keys_unsorted",
    "insertTextFormat": 2,
    "kind": 3,
    "label": "keys_unsorted",
    "sortText": "100_keys_unsorted",
    "textEdit": Object {
      "newText": "keys_unsorted",
      "range": Object {
        "end": Object {
          "character": 25,
          "line": 16,
        },
        "start": Object {
          "character": 25,
          "line": 16,
        },
      },
    },
  },
  Object {
    "detail": "The builtin function has returns whether the input object has the given key, or the input array has an element at the given index.",
    "filterText": "has(key)",
    "insertText": "has(key)",
    "insertTextFormat": 2,
    "kind": 3,
    "label": "has(key)",
    "sortText": "100_has(key)",
    "textEdit": Object {
      "newText": "has(key)",
      "range": Object {
        "end": Object {
          "character": 25,
          "line": 16,
        },
        "start": Object {
          "character": 25,
          "line": 16,
        },
      },
    },
  },
]
`;

exports[`SWF LS YAML code completion Jq completions event data filter completions variables completion space before fn: 1`] = `2`;

exports[`SWF LS YAML code completion Jq completions event data filter completions variables completion space before fn: 2`] = `
Array [
  Object {
    "detail": "Reusable functions(expressions) defined in the functions array",
    "filterText": "expressionFunc1",
    "insertText": "expressionFunc1",
    "insertTextFormat": 2,
    "kind": 3,
    "label": "expressionFunc1",
    "sortText": "100_expressionFunc1",
    "textEdit": Object {
      "newText": "'expressionFunc1'",
      "range": Object {
        "end": Object {
          "character": 29,
          "line": 16,
        },
        "start": Object {
          "character": 29,
          "line": 16,
        },
      },
    },
  },
  Object {
    "detail": "Reusable functions(expressions) defined in the functions array",
    "filterText": "expressionFunc2",
    "insertText": "expressionFunc2",
    "insertTextFormat": 2,
    "kind": 3,
    "label": "expressionFunc2",
    "sortText": "100_expressionFunc2",
    "textEdit": Object {
      "newText": "'expressionFunc2'",
      "range": Object {
        "end": Object {
          "character": 29,
          "line": 16,
        },
        "start": Object {
          "character": 29,
          "line": 16,
        },
      },
    },
  },
]
`;

exports[`SWF LS YAML code completion Jq completions event data filter completions variables completion value fn:/double quotes 1`] = `2`;

exports[`SWF LS YAML code completion Jq completions event data filter completions variables completion value fn:/double quotes 2`] = `
Array [
  Object {
    "detail": "Reusable functions(expressions) defined in the functions array",
    "filterText": "expressionFunc1",
    "insertText": "expressionFunc1",
    "insertTextFormat": 2,
    "kind": 3,
    "label": "expressionFunc1",
    "sortText": "100_expressionFunc1",
    "textEdit": Object {
      "newText": "'expressionFunc1'",
      "range": Object {
        "end": Object {
          "character": 28,
          "line": 16,
        },
        "start": Object {
          "character": 28,
          "line": 16,
        },
      },
    },
  },
  Object {
    "detail": "Reusable functions(expressions) defined in the functions array",
    "filterText": "expressionFunc2",
    "insertText": "expressionFunc2",
    "insertTextFormat": 2,
    "kind": 3,
    "label": "expressionFunc2",
    "sortText": "100_expressionFunc2",
    "textEdit": Object {
      "newText": "'expressionFunc2'",
      "range": Object {
        "end": Object {
          "character": 28,
          "line": 16,
        },
        "start": Object {
          "character": 28,
          "line": 16,
        },
      },
    },
  },
]
`;

exports[`SWF LS YAML code completion Jq completions event data filter completions variables completion value fn:/single quotes 1`] = `2`;

exports[`SWF LS YAML code completion Jq completions event data filter completions variables completion value fn:/single quotes 2`] = `
Array [
  Object {
    "detail": "Reusable functions(expressions) defined in the functions array",
    "filterText": "expressionFunc1",
    "insertText": "expressionFunc1",
    "insertTextFormat": 2,
    "kind": 3,
    "label": "expressionFunc1",
    "sortText": "100_expressionFunc1",
    "textEdit": Object {
      "newText": "'expressionFunc1'",
      "range": Object {
        "end": Object {
          "character": 28,
          "line": 16,
        },
        "start": Object {
          "character": 28,
          "line": 16,
        },
      },
    },
  },
  Object {
    "detail": "Reusable functions(expressions) defined in the functions array",
    "filterText": "expressionFunc2",
    "insertText": "expressionFunc2",
    "insertTextFormat": 2,
    "kind": 3,
    "label": "expressionFunc2",
    "sortText": "100_expressionFunc2",
    "textEdit": Object {
      "newText": "'expressionFunc2'",
      "range": Object {
        "end": Object {
          "character": 28,
          "line": 16,
        },
        "start": Object {
          "character": 28,
          "line": 16,
        },
      },
    },
  },
]
`;

exports[`SWF LS YAML code completion Jq completions event data filter inside onEvents completion built-in functions completion cursor after a value - auto-complete the word map 1`] = `2`;

exports[`SWF LS YAML code completion Jq completions event data filter inside onEvents completion built-in functions completion cursor after a value - auto-complete the word map 2`] = `
Array [
  Object {
    "detail": "For any filter x, map(x) will run that filter for each element of the input array, and return the outputs in a new array. map(.+1) will increment each element of an array of numbers.",
    "filterText": "map",
    "insertText": "map(x)",
    "insertTextFormat": 2,
    "kind": 3,
    "label": "map(x)",
    "sortText": "100_map(x)",
    "textEdit": Object {
      "newText": "map(x)",
      "range": Object {
        "end": Object {
          "character": 32,
          "line": 17,
        },
        "start": Object {
          "character": 29,
          "line": 17,
        },
      },
    },
  },
  Object {
    "detail": "map_values(x) will run that filter for each element, but it will return an object when an object is passed.",
    "filterText": "map",
    "insertText": "map_values(x)",
    "insertTextFormat": 2,
    "kind": 3,
    "label": "map_values(x)",
    "sortText": "100_map_values(x)",
    "textEdit": Object {
      "newText": "map_values(x)",
      "range": Object {
        "end": Object {
          "character": 32,
          "line": 17,
        },
        "start": Object {
          "character": 29,
          "line": 17,
        },
      },
    },
  },
]
`;

exports[`SWF LS YAML code completion Jq completions event data filter inside onEvents completion built-in functions completion cursor after some random word 1`] = `140`;

exports[`SWF LS YAML code completion Jq completions event data filter inside onEvents completion built-in functions completion cursor after some random word 2`] = `
Array [
  Object {
    "detail": "The builtin function length gets the length of various different types of value.",
    "filterText": "length",
    "insertText": "length",
    "insertTextFormat": 2,
    "kind": 3,
    "label": "length",
    "sortText": "100_length",
    "textEdit": Object {
      "newText": "length",
      "range": Object {
        "end": Object {
          "character": 39,
          "line": 17,
        },
        "start": Object {
          "character": 39,
          "line": 17,
        },
      },
    },
  },
  Object {
    "detail": "The builtin function utf8bytelength outputs the number of bytes used to encode a string in UTF-8.",
    "filterText": "utf8bytelength",
    "insertText": "utf8bytelength",
    "insertTextFormat": 2,
    "kind": 3,
    "label": "utf8bytelength",
    "sortText": "100_utf8bytelength",
    "textEdit": Object {
      "newText": "'utf8bytelength'",
      "range": Object {
        "end": Object {
          "character": 39,
          "line": 17,
        },
        "start": Object {
          "character": 39,
          "line": 17,
        },
      },
    },
  },
  Object {
    "detail": "The builtin function keys, when given an object, returns its keys in an array.",
    "filterText": "keys",
    "insertText": "keys",
    "insertTextFormat": 2,
    "kind": 3,
    "label": "keys",
    "sortText": "100_keys",
    "textEdit": Object {
      "newText": "keys",
      "range": Object {
        "end": Object {
          "character": 39,
          "line": 17,
        },
        "start": Object {
          "character": 39,
          "line": 17,
        },
      },
    },
  },
  Object {
    "detail": "The keys_unsorted function is just like keys, but if the input is an object then the keys will not be sorted, instead the keys will roughly be in insertion order.",
    "filterText": "keys_unsorted",
    "insertText": "keys_unsorted",
    "insertTextFormat": 2,
    "kind": 3,
    "label": "keys_unsorted",
    "sortText": "100_keys_unsorted",
    "textEdit": Object {
      "newText": "keys_unsorted",
      "range": Object {
        "end": Object {
          "character": 39,
          "line": 17,
        },
        "start": Object {
          "character": 39,
          "line": 17,
        },
      },
    },
  },
  Object {
    "detail": "The builtin function has returns whether the input object has the given key, or the input array has an element at the given index.",
    "filterText": "has(key)",
    "insertText": "has(key)",
    "insertTextFormat": 2,
    "kind": 3,
    "label": "has(key)",
    "sortText": "100_has(key)",
    "textEdit": Object {
      "newText": "has(key)",
      "range": Object {
        "end": Object {
          "character": 39,
          "line": 17,
        },
        "start": Object {
          "character": 39,
          "line": 17,
        },
      },
    },
  },
]
`;

exports[`SWF LS YAML code completion Jq completions event data filter inside onEvents completion built-in functions completion cursor after the dot(variable):/double quotes 1`] = `4`;

exports[`SWF LS YAML code completion Jq completions event data filter inside onEvents completion built-in functions completion cursor after the dot(variable):/double quotes 2`] = `
Array [
  Object {
    "detail": "string",
    "filterText": "name",
    "insertText": "name",
    "insertTextFormat": 2,
    "kind": 12,
    "label": "name",
    "sortText": "100_name",
    "textEdit": Object {
      "newText": "name",
      "range": Object {
        "end": Object {
          "character": 30,
          "line": 17,
        },
        "start": Object {
          "character": 30,
          "line": 17,
        },
      },
    },
  },
  Object {
    "detail": "1",
    "filterText": "age",
    "insertText": "age",
    "insertTextFormat": 2,
    "kind": 12,
    "label": "age",
    "sortText": "100_age",
    "textEdit": Object {
      "newText": "age",
      "range": Object {
        "end": Object {
          "character": 30,
          "line": 17,
        },
        "start": Object {
          "character": 30,
          "line": 17,
        },
      },
    },
  },
  Object {
    "detail": "string",
    "filterText": "avgLoad",
    "insertText": "avgLoad",
    "insertTextFormat": 2,
    "kind": 12,
    "label": "avgLoad",
    "sortText": "100_avgLoad",
    "textEdit": Object {
      "newText": "avgLoad",
      "range": Object {
        "end": Object {
          "character": 30,
          "line": 17,
        },
        "start": Object {
          "character": 30,
          "line": 17,
        },
      },
    },
  },
  Object {
    "detail": "1",
    "filterText": "numberOfPods",
    "insertText": "numberOfPods",
    "insertTextFormat": 2,
    "kind": 12,
    "label": "numberOfPods",
    "sortText": "100_numberOfPods",
    "textEdit": Object {
      "newText": "numberOfPods",
      "range": Object {
        "end": Object {
          "character": 30,
          "line": 17,
        },
        "start": Object {
          "character": 30,
          "line": 17,
        },
      },
    },
  },
]
`;

exports[`SWF LS YAML code completion Jq completions event data filter inside onEvents completion built-in functions completion cursor after the dot(variable):/single quotes 1`] = `4`;

exports[`SWF LS YAML code completion Jq completions event data filter inside onEvents completion built-in functions completion cursor after the dot(variable):/single quotes 2`] = `
Array [
  Object {
    "detail": "string",
    "filterText": "name",
    "insertText": "name",
    "insertTextFormat": 2,
    "kind": 12,
    "label": "name",
    "sortText": "100_name",
    "textEdit": Object {
      "newText": "name",
      "range": Object {
        "end": Object {
          "character": 30,
          "line": 17,
        },
        "start": Object {
          "character": 30,
          "line": 17,
        },
      },
    },
  },
  Object {
    "detail": "1",
    "filterText": "age",
    "insertText": "age",
    "insertTextFormat": 2,
    "kind": 12,
    "label": "age",
    "sortText": "100_age",
    "textEdit": Object {
      "newText": "age",
      "range": Object {
        "end": Object {
          "character": 30,
          "line": 17,
        },
        "start": Object {
          "character": 30,
          "line": 17,
        },
      },
    },
  },
  Object {
    "detail": "string",
    "filterText": "avgLoad",
    "insertText": "avgLoad",
    "insertTextFormat": 2,
    "kind": 12,
    "label": "avgLoad",
    "sortText": "100_avgLoad",
    "textEdit": Object {
      "newText": "avgLoad",
      "range": Object {
        "end": Object {
          "character": 30,
          "line": 17,
        },
        "start": Object {
          "character": 30,
          "line": 17,
        },
      },
    },
  },
  Object {
    "detail": "1",
    "filterText": "numberOfPods",
    "insertText": "numberOfPods",
    "insertTextFormat": 2,
    "kind": 12,
    "label": "numberOfPods",
    "sortText": "100_numberOfPods",
    "textEdit": Object {
      "newText": "numberOfPods",
      "range": Object {
        "end": Object {
          "character": 30,
          "line": 17,
        },
        "start": Object {
          "character": 30,
          "line": 17,
        },
      },
    },
  },
]
`;

exports[`SWF LS YAML code completion Jq completions event data filter inside onEvents completion built-in functions completion cursor before empty space 1`] = `140`;

exports[`SWF LS YAML code completion Jq completions event data filter inside onEvents completion built-in functions completion cursor before empty space 2`] = `
Array [
  Object {
    "detail": "The builtin function length gets the length of various different types of value.",
    "filterText": "length",
    "insertText": "length",
    "insertTextFormat": 2,
    "kind": 3,
    "label": "length",
    "sortText": "100_length",
    "textEdit": Object {
      "newText": "length",
      "range": Object {
        "end": Object {
          "character": 29,
          "line": 17,
        },
        "start": Object {
          "character": 29,
          "line": 17,
        },
      },
    },
  },
  Object {
    "detail": "The builtin function utf8bytelength outputs the number of bytes used to encode a string in UTF-8.",
    "filterText": "utf8bytelength",
    "insertText": "utf8bytelength",
    "insertTextFormat": 2,
    "kind": 3,
    "label": "utf8bytelength",
    "sortText": "100_utf8bytelength",
    "textEdit": Object {
      "newText": "'utf8bytelength'",
      "range": Object {
        "end": Object {
          "character": 29,
          "line": 17,
        },
        "start": Object {
          "character": 29,
          "line": 17,
        },
      },
    },
  },
  Object {
    "detail": "The builtin function keys, when given an object, returns its keys in an array.",
    "filterText": "keys",
    "insertText": "keys",
    "insertTextFormat": 2,
    "kind": 3,
    "label": "keys",
    "sortText": "100_keys",
    "textEdit": Object {
      "newText": "keys",
      "range": Object {
        "end": Object {
          "character": 29,
          "line": 17,
        },
        "start": Object {
          "character": 29,
          "line": 17,
        },
      },
    },
  },
  Object {
    "detail": "The keys_unsorted function is just like keys, but if the input is an object then the keys will not be sorted, instead the keys will roughly be in insertion order.",
    "filterText": "keys_unsorted",
    "insertText": "keys_unsorted",
    "insertTextFormat": 2,
    "kind": 3,
    "label": "keys_unsorted",
    "sortText": "100_keys_unsorted",
    "textEdit": Object {
      "newText": "keys_unsorted",
      "range": Object {
        "end": Object {
          "character": 29,
          "line": 17,
        },
        "start": Object {
          "character": 29,
          "line": 17,
        },
      },
    },
  },
  Object {
    "detail": "The builtin function has returns whether the input object has the given key, or the input array has an element at the given index.",
    "filterText": "has(key)",
    "insertText": "has(key)",
    "insertTextFormat": 2,
    "kind": 3,
    "label": "has(key)",
    "sortText": "100_has(key)",
    "textEdit": Object {
      "newText": "has(key)",
      "range": Object {
        "end": Object {
          "character": 29,
          "line": 17,
        },
        "start": Object {
          "character": 29,
          "line": 17,
        },
      },
    },
  },
]
`;

exports[`SWF LS YAML code completion Jq completions event data filter inside onEvents completion built-in functions completion cursor before the dot(variable) 1`] = `140`;

exports[`SWF LS YAML code completion Jq completions event data filter inside onEvents completion built-in functions completion cursor before the dot(variable) 2`] = `
Array [
  Object {
    "detail": "The builtin function length gets the length of various different types of value.",
    "filterText": "length",
    "insertText": "length",
    "insertTextFormat": 2,
    "kind": 3,
    "label": "length",
    "sortText": "100_length",
    "textEdit": Object {
      "newText": "length",
      "range": Object {
        "end": Object {
          "character": 29,
          "line": 17,
        },
        "start": Object {
          "character": 29,
          "line": 17,
        },
      },
    },
  },
  Object {
    "detail": "The builtin function utf8bytelength outputs the number of bytes used to encode a string in UTF-8.",
    "filterText": "utf8bytelength",
    "insertText": "utf8bytelength",
    "insertTextFormat": 2,
    "kind": 3,
    "label": "utf8bytelength",
    "sortText": "100_utf8bytelength",
    "textEdit": Object {
      "newText": "'utf8bytelength'",
      "range": Object {
        "end": Object {
          "character": 29,
          "line": 17,
        },
        "start": Object {
          "character": 29,
          "line": 17,
        },
      },
    },
  },
  Object {
    "detail": "The builtin function keys, when given an object, returns its keys in an array.",
    "filterText": "keys",
    "insertText": "keys",
    "insertTextFormat": 2,
    "kind": 3,
    "label": "keys",
    "sortText": "100_keys",
    "textEdit": Object {
      "newText": "keys",
      "range": Object {
        "end": Object {
          "character": 29,
          "line": 17,
        },
        "start": Object {
          "character": 29,
          "line": 17,
        },
      },
    },
  },
  Object {
    "detail": "The keys_unsorted function is just like keys, but if the input is an object then the keys will not be sorted, instead the keys will roughly be in insertion order.",
    "filterText": "keys_unsorted",
    "insertText": "keys_unsorted",
    "insertTextFormat": 2,
    "kind": 3,
    "label": "keys_unsorted",
    "sortText": "100_keys_unsorted",
    "textEdit": Object {
      "newText": "keys_unsorted",
      "range": Object {
        "end": Object {
          "character": 29,
          "line": 17,
        },
        "start": Object {
          "character": 29,
          "line": 17,
        },
      },
    },
  },
  Object {
    "detail": "The builtin function has returns whether the input object has the given key, or the input array has an element at the given index.",
    "filterText": "has(key)",
    "insertText": "has(key)",
    "insertTextFormat": 2,
    "kind": 3,
    "label": "has(key)",
    "sortText": "100_has(key)",
    "textEdit": Object {
      "newText": "has(key)",
      "range": Object {
        "end": Object {
          "character": 29,
          "line": 17,
        },
        "start": Object {
          "character": 29,
          "line": 17,
        },
      },
    },
  },
]
`;

exports[`SWF LS YAML code completion Jq completions event data filter inside onEvents completion built-in functions completion cursor with a space after the  dot(variable) 1`] = `140`;

exports[`SWF LS YAML code completion Jq completions event data filter inside onEvents completion built-in functions completion cursor with a space after the  dot(variable) 2`] = `
Array [
  Object {
    "detail": "The builtin function length gets the length of various different types of value.",
    "filterText": "length",
    "insertText": "length",
    "insertTextFormat": 2,
    "kind": 3,
    "label": "length",
    "sortText": "100_length",
    "textEdit": Object {
      "newText": "length",
      "range": Object {
        "end": Object {
          "character": 31,
          "line": 17,
        },
        "start": Object {
          "character": 31,
          "line": 17,
        },
      },
    },
  },
  Object {
    "detail": "The builtin function utf8bytelength outputs the number of bytes used to encode a string in UTF-8.",
    "filterText": "utf8bytelength",
    "insertText": "utf8bytelength",
    "insertTextFormat": 2,
    "kind": 3,
    "label": "utf8bytelength",
    "sortText": "100_utf8bytelength",
    "textEdit": Object {
      "newText": "'utf8bytelength'",
      "range": Object {
        "end": Object {
          "character": 31,
          "line": 17,
        },
        "start": Object {
          "character": 31,
          "line": 17,
        },
      },
    },
  },
  Object {
    "detail": "The builtin function keys, when given an object, returns its keys in an array.",
    "filterText": "keys",
    "insertText": "keys",
    "insertTextFormat": 2,
    "kind": 3,
    "label": "keys",
    "sortText": "100_keys",
    "textEdit": Object {
      "newText": "keys",
      "range": Object {
        "end": Object {
          "character": 31,
          "line": 17,
        },
        "start": Object {
          "character": 31,
          "line": 17,
        },
      },
    },
  },
  Object {
    "detail": "The keys_unsorted function is just like keys, but if the input is an object then the keys will not be sorted, instead the keys will roughly be in insertion order.",
    "filterText": "keys_unsorted",
    "insertText": "keys_unsorted",
    "insertTextFormat": 2,
    "kind": 3,
    "label": "keys_unsorted",
    "sortText": "100_keys_unsorted",
    "textEdit": Object {
      "newText": "keys_unsorted",
      "range": Object {
        "end": Object {
          "character": 31,
          "line": 17,
        },
        "start": Object {
          "character": 31,
          "line": 17,
        },
      },
    },
  },
  Object {
    "detail": "The builtin function has returns whether the input object has the given key, or the input array has an element at the given index.",
    "filterText": "has(key)",
    "insertText": "has(key)",
    "insertTextFormat": 2,
    "kind": 3,
    "label": "has(key)",
    "sortText": "100_has(key)",
    "textEdit": Object {
      "newText": "has(key)",
      "range": Object {
        "end": Object {
          "character": 31,
          "line": 17,
        },
        "start": Object {
          "character": 31,
          "line": 17,
        },
      },
    },
  },
]
`;

exports[`SWF LS YAML code completion Jq completions event data filter inside onEvents completion built-in functions completion cursor with a value following the  dot(variable) 1`] = `2`;

exports[`SWF LS YAML code completion Jq completions event data filter inside onEvents completion built-in functions completion cursor with a value following the  dot(variable) 2`] = `
Array [
  Object {
    "detail": "1",
    "filterText": "a",
    "insertText": "age",
    "insertTextFormat": 2,
    "kind": 12,
    "label": "age",
    "sortText": "100_age",
    "textEdit": Object {
      "newText": "age",
      "range": Object {
        "end": Object {
          "character": 31,
          "line": 17,
        },
        "start": Object {
          "character": 30,
          "line": 17,
        },
      },
    },
  },
  Object {
    "detail": "string",
    "filterText": "a",
    "insertText": "avgLoad",
    "insertTextFormat": 2,
    "kind": 12,
    "label": "avgLoad",
    "sortText": "100_avgLoad",
    "textEdit": Object {
      "newText": "avgLoad",
      "range": Object {
        "end": Object {
          "character": 31,
          "line": 17,
        },
        "start": Object {
          "character": 30,
          "line": 17,
        },
      },
    },
  },
]
`;

exports[`SWF LS YAML code completion Jq completions event data filter inside onEvents completion built-in functions completion empty object 1`] = `0`;

exports[`SWF LS YAML code completion Jq completions event data filter inside onEvents completion built-in functions completion empty object 2`] = `Array []`;

exports[`SWF LS YAML code completion Jq completions event data filter inside onEvents completion built-in functions completion empty object 3`] = `0`;

exports[`SWF LS YAML code completion Jq completions event data filter inside onEvents completion built-in functions completion empty object 4`] = `Array []`;

exports[`SWF LS YAML code completion Jq completions event data filter inside onEvents completion built-in functions completion empty object 5`] = `0`;

exports[`SWF LS YAML code completion Jq completions event data filter inside onEvents completion built-in functions completion empty object 6`] = `Array []`;

exports[`SWF LS YAML code completion Jq completions event data filter inside onEvents completion built-in functions completion fn: after some value 1`] = `2`;

exports[`SWF LS YAML code completion Jq completions event data filter inside onEvents completion built-in functions completion fn: after some value 2`] = `
Array [
  Object {
    "detail": "Reusable functions(expressions) defined in the functions array",
    "filterText": "expressionFunc1",
    "insertText": "expressionFunc1",
    "insertTextFormat": 2,
    "kind": 3,
    "label": "expressionFunc1",
    "sortText": "100_expressionFunc1",
    "textEdit": Object {
      "newText": "'expressionFunc1'",
      "range": Object {
        "end": Object {
          "character": 41,
          "line": 17,
        },
        "start": Object {
          "character": 41,
          "line": 17,
        },
      },
    },
  },
  Object {
    "detail": "Reusable functions(expressions) defined in the functions array",
    "filterText": "expressionFunc2",
    "insertText": "expressionFunc2",
    "insertTextFormat": 2,
    "kind": 3,
    "label": "expressionFunc2",
    "sortText": "100_expressionFunc2",
    "textEdit": Object {
      "newText": "'expressionFunc2'",
      "range": Object {
        "end": Object {
          "character": 41,
          "line": 17,
        },
        "start": Object {
          "character": 41,
          "line": 17,
        },
      },
    },
  },
]
`;

exports[`SWF LS YAML code completion Jq completions event data filter inside onEvents completion built-in functions completion fn: starting with a 1`] = `0`;

exports[`SWF LS YAML code completion Jq completions event data filter inside onEvents completion built-in functions completion fn: starting with a 2`] = `Array []`;

exports[`SWF LS YAML code completion Jq completions event data filter inside onEvents completion built-in functions completion fn: starting with r 1`] = `0`;

exports[`SWF LS YAML code completion Jq completions event data filter inside onEvents completion built-in functions completion fn: starting with r 2`] = `Array []`;

exports[`SWF LS YAML code completion Jq completions event data filter inside onEvents completion built-in functions completion no value/double quotes 1`] = `140`;

exports[`SWF LS YAML code completion Jq completions event data filter inside onEvents completion built-in functions completion no value/double quotes 2`] = `
Array [
  Object {
    "detail": "The builtin function length gets the length of various different types of value.",
    "filterText": "length",
    "insertText": "length",
    "insertTextFormat": 2,
    "kind": 3,
    "label": "length",
    "sortText": "100_length",
    "textEdit": Object {
      "newText": "length",
      "range": Object {
        "end": Object {
          "character": 29,
          "line": 17,
        },
        "start": Object {
          "character": 29,
          "line": 17,
        },
      },
    },
  },
  Object {
    "detail": "The builtin function utf8bytelength outputs the number of bytes used to encode a string in UTF-8.",
    "filterText": "utf8bytelength",
    "insertText": "utf8bytelength",
    "insertTextFormat": 2,
    "kind": 3,
    "label": "utf8bytelength",
    "sortText": "100_utf8bytelength",
    "textEdit": Object {
      "newText": "'utf8bytelength'",
      "range": Object {
        "end": Object {
          "character": 29,
          "line": 17,
        },
        "start": Object {
          "character": 29,
          "line": 17,
        },
      },
    },
  },
  Object {
    "detail": "The builtin function keys, when given an object, returns its keys in an array.",
    "filterText": "keys",
    "insertText": "keys",
    "insertTextFormat": 2,
    "kind": 3,
    "label": "keys",
    "sortText": "100_keys",
    "textEdit": Object {
      "newText": "keys",
      "range": Object {
        "end": Object {
          "character": 29,
          "line": 17,
        },
        "start": Object {
          "character": 29,
          "line": 17,
        },
      },
    },
  },
  Object {
    "detail": "The keys_unsorted function is just like keys, but if the input is an object then the keys will not be sorted, instead the keys will roughly be in insertion order.",
    "filterText": "keys_unsorted",
    "insertText": "keys_unsorted",
    "insertTextFormat": 2,
    "kind": 3,
    "label": "keys_unsorted",
    "sortText": "100_keys_unsorted",
    "textEdit": Object {
      "newText": "keys_unsorted",
      "range": Object {
        "end": Object {
          "character": 29,
          "line": 17,
        },
        "start": Object {
          "character": 29,
          "line": 17,
        },
      },
    },
  },
  Object {
    "detail": "The builtin function has returns whether the input object has the given key, or the input array has an element at the given index.",
    "filterText": "has(key)",
    "insertText": "has(key)",
    "insertTextFormat": 2,
    "kind": 3,
    "label": "has(key)",
    "sortText": "100_has(key)",
    "textEdit": Object {
      "newText": "has(key)",
      "range": Object {
        "end": Object {
          "character": 29,
          "line": 17,
        },
        "start": Object {
          "character": 29,
          "line": 17,
        },
      },
    },
  },
]
`;

exports[`SWF LS YAML code completion Jq completions event data filter inside onEvents completion built-in functions completion no value/single quotes 1`] = `140`;

exports[`SWF LS YAML code completion Jq completions event data filter inside onEvents completion built-in functions completion no value/single quotes 2`] = `
Array [
  Object {
    "detail": "The builtin function length gets the length of various different types of value.",
    "filterText": "length",
    "insertText": "length",
    "insertTextFormat": 2,
    "kind": 3,
    "label": "length",
    "sortText": "100_length",
    "textEdit": Object {
      "newText": "length",
      "range": Object {
        "end": Object {
          "character": 29,
          "line": 17,
        },
        "start": Object {
          "character": 29,
          "line": 17,
        },
      },
    },
  },
  Object {
    "detail": "The builtin function utf8bytelength outputs the number of bytes used to encode a string in UTF-8.",
    "filterText": "utf8bytelength",
    "insertText": "utf8bytelength",
    "insertTextFormat": 2,
    "kind": 3,
    "label": "utf8bytelength",
    "sortText": "100_utf8bytelength",
    "textEdit": Object {
      "newText": "'utf8bytelength'",
      "range": Object {
        "end": Object {
          "character": 29,
          "line": 17,
        },
        "start": Object {
          "character": 29,
          "line": 17,
        },
      },
    },
  },
  Object {
    "detail": "The builtin function keys, when given an object, returns its keys in an array.",
    "filterText": "keys",
    "insertText": "keys",
    "insertTextFormat": 2,
    "kind": 3,
    "label": "keys",
    "sortText": "100_keys",
    "textEdit": Object {
      "newText": "keys",
      "range": Object {
        "end": Object {
          "character": 29,
          "line": 17,
        },
        "start": Object {
          "character": 29,
          "line": 17,
        },
      },
    },
  },
  Object {
    "detail": "The keys_unsorted function is just like keys, but if the input is an object then the keys will not be sorted, instead the keys will roughly be in insertion order.",
    "filterText": "keys_unsorted",
    "insertText": "keys_unsorted",
    "insertTextFormat": 2,
    "kind": 3,
    "label": "keys_unsorted",
    "sortText": "100_keys_unsorted",
    "textEdit": Object {
      "newText": "keys_unsorted",
      "range": Object {
        "end": Object {
          "character": 29,
          "line": 17,
        },
        "start": Object {
          "character": 29,
          "line": 17,
        },
      },
    },
  },
  Object {
    "detail": "The builtin function has returns whether the input object has the given key, or the input array has an element at the given index.",
    "filterText": "has(key)",
    "insertText": "has(key)",
    "insertTextFormat": 2,
    "kind": 3,
    "label": "has(key)",
    "sortText": "100_has(key)",
    "textEdit": Object {
      "newText": "has(key)",
      "range": Object {
        "end": Object {
          "character": 29,
          "line": 17,
        },
        "start": Object {
          "character": 29,
          "line": 17,
        },
      },
    },
  },
]
`;

exports[`SWF LS YAML code completion Jq completions event data filter inside onEvents completion built-in functions completion space before fn: 1`] = `2`;

exports[`SWF LS YAML code completion Jq completions event data filter inside onEvents completion built-in functions completion space before fn: 2`] = `
Array [
  Object {
    "detail": "Reusable functions(expressions) defined in the functions array",
    "filterText": "expressionFunc1",
    "insertText": "expressionFunc1",
    "insertTextFormat": 2,
    "kind": 3,
    "label": "expressionFunc1",
    "sortText": "100_expressionFunc1",
    "textEdit": Object {
      "newText": "'expressionFunc1'",
      "range": Object {
        "end": Object {
          "character": 33,
          "line": 17,
        },
        "start": Object {
          "character": 33,
          "line": 17,
        },
      },
    },
  },
  Object {
    "detail": "Reusable functions(expressions) defined in the functions array",
    "filterText": "expressionFunc2",
    "insertText": "expressionFunc2",
    "insertTextFormat": 2,
    "kind": 3,
    "label": "expressionFunc2",
    "sortText": "100_expressionFunc2",
    "textEdit": Object {
      "newText": "'expressionFunc2'",
      "range": Object {
        "end": Object {
          "character": 33,
          "line": 17,
        },
        "start": Object {
          "character": 33,
          "line": 17,
        },
      },
    },
  },
]
`;

exports[`SWF LS YAML code completion Jq completions event data filter inside onEvents completion built-in functions completion value fn:/double quotes 1`] = `2`;

exports[`SWF LS YAML code completion Jq completions event data filter inside onEvents completion built-in functions completion value fn:/double quotes 2`] = `
Array [
  Object {
    "detail": "Reusable functions(expressions) defined in the functions array",
    "filterText": "expressionFunc1",
    "insertText": "expressionFunc1",
    "insertTextFormat": 2,
    "kind": 3,
    "label": "expressionFunc1",
    "sortText": "100_expressionFunc1",
    "textEdit": Object {
      "newText": "'expressionFunc1'",
      "range": Object {
        "end": Object {
          "character": 32,
          "line": 17,
        },
        "start": Object {
          "character": 32,
          "line": 17,
        },
      },
    },
  },
  Object {
    "detail": "Reusable functions(expressions) defined in the functions array",
    "filterText": "expressionFunc2",
    "insertText": "expressionFunc2",
    "insertTextFormat": 2,
    "kind": 3,
    "label": "expressionFunc2",
    "sortText": "100_expressionFunc2",
    "textEdit": Object {
      "newText": "'expressionFunc2'",
      "range": Object {
        "end": Object {
          "character": 32,
          "line": 17,
        },
        "start": Object {
          "character": 32,
          "line": 17,
        },
      },
    },
  },
]
`;

exports[`SWF LS YAML code completion Jq completions event data filter inside onEvents completion built-in functions completion value fn:/single quotes 1`] = `2`;

exports[`SWF LS YAML code completion Jq completions event data filter inside onEvents completion built-in functions completion value fn:/single quotes 2`] = `
Array [
  Object {
    "detail": "Reusable functions(expressions) defined in the functions array",
    "filterText": "expressionFunc1",
    "insertText": "expressionFunc1",
    "insertTextFormat": 2,
    "kind": 3,
    "label": "expressionFunc1",
    "sortText": "100_expressionFunc1",
    "textEdit": Object {
      "newText": "'expressionFunc1'",
      "range": Object {
        "end": Object {
          "character": 32,
          "line": 17,
        },
        "start": Object {
          "character": 32,
          "line": 17,
        },
      },
    },
  },
  Object {
    "detail": "Reusable functions(expressions) defined in the functions array",
    "filterText": "expressionFunc2",
    "insertText": "expressionFunc2",
    "insertTextFormat": 2,
    "kind": 3,
    "label": "expressionFunc2",
    "sortText": "100_expressionFunc2",
    "textEdit": Object {
      "newText": "'expressionFunc2'",
      "range": Object {
        "end": Object {
          "character": 32,
          "line": 17,
        },
        "start": Object {
          "character": 32,
          "line": 17,
        },
      },
    },
  },
]
`;

exports[`SWF LS YAML code completion Jq completions event data filter inside onEvents completion variables completion cursor after a value - auto-complete the word map 1`] = `2`;

exports[`SWF LS YAML code completion Jq completions event data filter inside onEvents completion variables completion cursor after a value - auto-complete the word map 2`] = `
Array [
  Object {
    "detail": "For any filter x, map(x) will run that filter for each element of the input array, and return the outputs in a new array. map(.+1) will increment each element of an array of numbers.",
    "filterText": "map",
    "insertText": "map(x)",
    "insertTextFormat": 2,
    "kind": 3,
    "label": "map(x)",
    "sortText": "100_map(x)",
    "textEdit": Object {
      "newText": "map(x)",
      "range": Object {
        "end": Object {
          "character": 32,
          "line": 17,
        },
        "start": Object {
          "character": 29,
          "line": 17,
        },
      },
    },
  },
  Object {
    "detail": "map_values(x) will run that filter for each element, but it will return an object when an object is passed.",
    "filterText": "map",
    "insertText": "map_values(x)",
    "insertTextFormat": 2,
    "kind": 3,
    "label": "map_values(x)",
    "sortText": "100_map_values(x)",
    "textEdit": Object {
      "newText": "map_values(x)",
      "range": Object {
        "end": Object {
          "character": 32,
          "line": 17,
        },
        "start": Object {
          "character": 29,
          "line": 17,
        },
      },
    },
  },
]
`;

exports[`SWF LS YAML code completion Jq completions event data filter inside onEvents completion variables completion cursor after some random word 1`] = `140`;

exports[`SWF LS YAML code completion Jq completions event data filter inside onEvents completion variables completion cursor after some random word 2`] = `
Array [
  Object {
    "detail": "The builtin function length gets the length of various different types of value.",
    "filterText": "length",
    "insertText": "length",
    "insertTextFormat": 2,
    "kind": 3,
    "label": "length",
    "sortText": "100_length",
    "textEdit": Object {
      "newText": "length",
      "range": Object {
        "end": Object {
          "character": 39,
          "line": 17,
        },
        "start": Object {
          "character": 39,
          "line": 17,
        },
      },
    },
  },
  Object {
    "detail": "The builtin function utf8bytelength outputs the number of bytes used to encode a string in UTF-8.",
    "filterText": "utf8bytelength",
    "insertText": "utf8bytelength",
    "insertTextFormat": 2,
    "kind": 3,
    "label": "utf8bytelength",
    "sortText": "100_utf8bytelength",
    "textEdit": Object {
      "newText": "'utf8bytelength'",
      "range": Object {
        "end": Object {
          "character": 39,
          "line": 17,
        },
        "start": Object {
          "character": 39,
          "line": 17,
        },
      },
    },
  },
  Object {
    "detail": "The builtin function keys, when given an object, returns its keys in an array.",
    "filterText": "keys",
    "insertText": "keys",
    "insertTextFormat": 2,
    "kind": 3,
    "label": "keys",
    "sortText": "100_keys",
    "textEdit": Object {
      "newText": "keys",
      "range": Object {
        "end": Object {
          "character": 39,
          "line": 17,
        },
        "start": Object {
          "character": 39,
          "line": 17,
        },
      },
    },
  },
  Object {
    "detail": "The keys_unsorted function is just like keys, but if the input is an object then the keys will not be sorted, instead the keys will roughly be in insertion order.",
    "filterText": "keys_unsorted",
    "insertText": "keys_unsorted",
    "insertTextFormat": 2,
    "kind": 3,
    "label": "keys_unsorted",
    "sortText": "100_keys_unsorted",
    "textEdit": Object {
      "newText": "keys_unsorted",
      "range": Object {
        "end": Object {
          "character": 39,
          "line": 17,
        },
        "start": Object {
          "character": 39,
          "line": 17,
        },
      },
    },
  },
  Object {
    "detail": "The builtin function has returns whether the input object has the given key, or the input array has an element at the given index.",
    "filterText": "has(key)",
    "insertText": "has(key)",
    "insertTextFormat": 2,
    "kind": 3,
    "label": "has(key)",
    "sortText": "100_has(key)",
    "textEdit": Object {
      "newText": "has(key)",
      "range": Object {
        "end": Object {
          "character": 39,
          "line": 17,
        },
        "start": Object {
          "character": 39,
          "line": 17,
        },
      },
    },
  },
]
`;

exports[`SWF LS YAML code completion Jq completions event data filter inside onEvents completion variables completion cursor after the dot(variable):/double quotes 1`] = `4`;

exports[`SWF LS YAML code completion Jq completions event data filter inside onEvents completion variables completion cursor after the dot(variable):/double quotes 2`] = `
Array [
  Object {
    "detail": "string",
    "filterText": "name",
    "insertText": "name",
    "insertTextFormat": 2,
    "kind": 12,
    "label": "name",
    "sortText": "100_name",
    "textEdit": Object {
      "newText": "name",
      "range": Object {
        "end": Object {
          "character": 30,
          "line": 17,
        },
        "start": Object {
          "character": 30,
          "line": 17,
        },
      },
    },
  },
  Object {
    "detail": "1",
    "filterText": "age",
    "insertText": "age",
    "insertTextFormat": 2,
    "kind": 12,
    "label": "age",
    "sortText": "100_age",
    "textEdit": Object {
      "newText": "age",
      "range": Object {
        "end": Object {
          "character": 30,
          "line": 17,
        },
        "start": Object {
          "character": 30,
          "line": 17,
        },
      },
    },
  },
  Object {
    "detail": "string",
    "filterText": "avgLoad",
    "insertText": "avgLoad",
    "insertTextFormat": 2,
    "kind": 12,
    "label": "avgLoad",
    "sortText": "100_avgLoad",
    "textEdit": Object {
      "newText": "avgLoad",
      "range": Object {
        "end": Object {
          "character": 30,
          "line": 17,
        },
        "start": Object {
          "character": 30,
          "line": 17,
        },
      },
    },
  },
  Object {
    "detail": "1",
    "filterText": "numberOfPods",
    "insertText": "numberOfPods",
    "insertTextFormat": 2,
    "kind": 12,
    "label": "numberOfPods",
    "sortText": "100_numberOfPods",
    "textEdit": Object {
      "newText": "numberOfPods",
      "range": Object {
        "end": Object {
          "character": 30,
          "line": 17,
        },
        "start": Object {
          "character": 30,
          "line": 17,
        },
      },
    },
  },
]
`;

exports[`SWF LS YAML code completion Jq completions event data filter inside onEvents completion variables completion cursor after the dot(variable):/single quotes 1`] = `4`;

exports[`SWF LS YAML code completion Jq completions event data filter inside onEvents completion variables completion cursor after the dot(variable):/single quotes 2`] = `
Array [
  Object {
    "detail": "string",
    "filterText": "name",
    "insertText": "name",
    "insertTextFormat": 2,
    "kind": 12,
    "label": "name",
    "sortText": "100_name",
    "textEdit": Object {
      "newText": "name",
      "range": Object {
        "end": Object {
          "character": 30,
          "line": 17,
        },
        "start": Object {
          "character": 30,
          "line": 17,
        },
      },
    },
  },
  Object {
    "detail": "1",
    "filterText": "age",
    "insertText": "age",
    "insertTextFormat": 2,
    "kind": 12,
    "label": "age",
    "sortText": "100_age",
    "textEdit": Object {
      "newText": "age",
      "range": Object {
        "end": Object {
          "character": 30,
          "line": 17,
        },
        "start": Object {
          "character": 30,
          "line": 17,
        },
      },
    },
  },
  Object {
    "detail": "string",
    "filterText": "avgLoad",
    "insertText": "avgLoad",
    "insertTextFormat": 2,
    "kind": 12,
    "label": "avgLoad",
    "sortText": "100_avgLoad",
    "textEdit": Object {
      "newText": "avgLoad",
      "range": Object {
        "end": Object {
          "character": 30,
          "line": 17,
        },
        "start": Object {
          "character": 30,
          "line": 17,
        },
      },
    },
  },
  Object {
    "detail": "1",
    "filterText": "numberOfPods",
    "insertText": "numberOfPods",
    "insertTextFormat": 2,
    "kind": 12,
    "label": "numberOfPods",
    "sortText": "100_numberOfPods",
    "textEdit": Object {
      "newText": "numberOfPods",
      "range": Object {
        "end": Object {
          "character": 30,
          "line": 17,
        },
        "start": Object {
          "character": 30,
          "line": 17,
        },
      },
    },
  },
]
`;

exports[`SWF LS YAML code completion Jq completions event data filter inside onEvents completion variables completion cursor before empty space 1`] = `140`;

exports[`SWF LS YAML code completion Jq completions event data filter inside onEvents completion variables completion cursor before empty space 2`] = `
Array [
  Object {
    "detail": "The builtin function length gets the length of various different types of value.",
    "filterText": "length",
    "insertText": "length",
    "insertTextFormat": 2,
    "kind": 3,
    "label": "length",
    "sortText": "100_length",
    "textEdit": Object {
      "newText": "length",
      "range": Object {
        "end": Object {
          "character": 29,
          "line": 17,
        },
        "start": Object {
          "character": 29,
          "line": 17,
        },
      },
    },
  },
  Object {
    "detail": "The builtin function utf8bytelength outputs the number of bytes used to encode a string in UTF-8.",
    "filterText": "utf8bytelength",
    "insertText": "utf8bytelength",
    "insertTextFormat": 2,
    "kind": 3,
    "label": "utf8bytelength",
    "sortText": "100_utf8bytelength",
    "textEdit": Object {
      "newText": "'utf8bytelength'",
      "range": Object {
        "end": Object {
          "character": 29,
          "line": 17,
        },
        "start": Object {
          "character": 29,
          "line": 17,
        },
      },
    },
  },
  Object {
    "detail": "The builtin function keys, when given an object, returns its keys in an array.",
    "filterText": "keys",
    "insertText": "keys",
    "insertTextFormat": 2,
    "kind": 3,
    "label": "keys",
    "sortText": "100_keys",
    "textEdit": Object {
      "newText": "keys",
      "range": Object {
        "end": Object {
          "character": 29,
          "line": 17,
        },
        "start": Object {
          "character": 29,
          "line": 17,
        },
      },
    },
  },
  Object {
    "detail": "The keys_unsorted function is just like keys, but if the input is an object then the keys will not be sorted, instead the keys will roughly be in insertion order.",
    "filterText": "keys_unsorted",
    "insertText": "keys_unsorted",
    "insertTextFormat": 2,
    "kind": 3,
    "label": "keys_unsorted",
    "sortText": "100_keys_unsorted",
    "textEdit": Object {
      "newText": "keys_unsorted",
      "range": Object {
        "end": Object {
          "character": 29,
          "line": 17,
        },
        "start": Object {
          "character": 29,
          "line": 17,
        },
      },
    },
  },
  Object {
    "detail": "The builtin function has returns whether the input object has the given key, or the input array has an element at the given index.",
    "filterText": "has(key)",
    "insertText": "has(key)",
    "insertTextFormat": 2,
    "kind": 3,
    "label": "has(key)",
    "sortText": "100_has(key)",
    "textEdit": Object {
      "newText": "has(key)",
      "range": Object {
        "end": Object {
          "character": 29,
          "line": 17,
        },
        "start": Object {
          "character": 29,
          "line": 17,
        },
      },
    },
  },
]
`;

exports[`SWF LS YAML code completion Jq completions event data filter inside onEvents completion variables completion cursor before the dot(variable) 1`] = `140`;

exports[`SWF LS YAML code completion Jq completions event data filter inside onEvents completion variables completion cursor before the dot(variable) 2`] = `
Array [
  Object {
    "detail": "The builtin function length gets the length of various different types of value.",
    "filterText": "length",
    "insertText": "length",
    "insertTextFormat": 2,
    "kind": 3,
    "label": "length",
    "sortText": "100_length",
    "textEdit": Object {
      "newText": "length",
      "range": Object {
        "end": Object {
          "character": 29,
          "line": 17,
        },
        "start": Object {
          "character": 29,
          "line": 17,
        },
      },
    },
  },
  Object {
    "detail": "The builtin function utf8bytelength outputs the number of bytes used to encode a string in UTF-8.",
    "filterText": "utf8bytelength",
    "insertText": "utf8bytelength",
    "insertTextFormat": 2,
    "kind": 3,
    "label": "utf8bytelength",
    "sortText": "100_utf8bytelength",
    "textEdit": Object {
      "newText": "'utf8bytelength'",
      "range": Object {
        "end": Object {
          "character": 29,
          "line": 17,
        },
        "start": Object {
          "character": 29,
          "line": 17,
        },
      },
    },
  },
  Object {
    "detail": "The builtin function keys, when given an object, returns its keys in an array.",
    "filterText": "keys",
    "insertText": "keys",
    "insertTextFormat": 2,
    "kind": 3,
    "label": "keys",
    "sortText": "100_keys",
    "textEdit": Object {
      "newText": "keys",
      "range": Object {
        "end": Object {
          "character": 29,
          "line": 17,
        },
        "start": Object {
          "character": 29,
          "line": 17,
        },
      },
    },
  },
  Object {
    "detail": "The keys_unsorted function is just like keys, but if the input is an object then the keys will not be sorted, instead the keys will roughly be in insertion order.",
    "filterText": "keys_unsorted",
    "insertText": "keys_unsorted",
    "insertTextFormat": 2,
    "kind": 3,
    "label": "keys_unsorted",
    "sortText": "100_keys_unsorted",
    "textEdit": Object {
      "newText": "keys_unsorted",
      "range": Object {
        "end": Object {
          "character": 29,
          "line": 17,
        },
        "start": Object {
          "character": 29,
          "line": 17,
        },
      },
    },
  },
  Object {
    "detail": "The builtin function has returns whether the input object has the given key, or the input array has an element at the given index.",
    "filterText": "has(key)",
    "insertText": "has(key)",
    "insertTextFormat": 2,
    "kind": 3,
    "label": "has(key)",
    "sortText": "100_has(key)",
    "textEdit": Object {
      "newText": "has(key)",
      "range": Object {
        "end": Object {
          "character": 29,
          "line": 17,
        },
        "start": Object {
          "character": 29,
          "line": 17,
        },
      },
    },
  },
]
`;

exports[`SWF LS YAML code completion Jq completions event data filter inside onEvents completion variables completion cursor with a space after the  dot(variable) 1`] = `140`;

exports[`SWF LS YAML code completion Jq completions event data filter inside onEvents completion variables completion cursor with a space after the  dot(variable) 2`] = `
Array [
  Object {
    "detail": "The builtin function length gets the length of various different types of value.",
    "filterText": "length",
    "insertText": "length",
    "insertTextFormat": 2,
    "kind": 3,
    "label": "length",
    "sortText": "100_length",
    "textEdit": Object {
      "newText": "length",
      "range": Object {
        "end": Object {
          "character": 31,
          "line": 17,
        },
        "start": Object {
          "character": 31,
          "line": 17,
        },
      },
    },
  },
  Object {
    "detail": "The builtin function utf8bytelength outputs the number of bytes used to encode a string in UTF-8.",
    "filterText": "utf8bytelength",
    "insertText": "utf8bytelength",
    "insertTextFormat": 2,
    "kind": 3,
    "label": "utf8bytelength",
    "sortText": "100_utf8bytelength",
    "textEdit": Object {
      "newText": "'utf8bytelength'",
      "range": Object {
        "end": Object {
          "character": 31,
          "line": 17,
        },
        "start": Object {
          "character": 31,
          "line": 17,
        },
      },
    },
  },
  Object {
    "detail": "The builtin function keys, when given an object, returns its keys in an array.",
    "filterText": "keys",
    "insertText": "keys",
    "insertTextFormat": 2,
    "kind": 3,
    "label": "keys",
    "sortText": "100_keys",
    "textEdit": Object {
      "newText": "keys",
      "range": Object {
        "end": Object {
          "character": 31,
          "line": 17,
        },
        "start": Object {
          "character": 31,
          "line": 17,
        },
      },
    },
  },
  Object {
    "detail": "The keys_unsorted function is just like keys, but if the input is an object then the keys will not be sorted, instead the keys will roughly be in insertion order.",
    "filterText": "keys_unsorted",
    "insertText": "keys_unsorted",
    "insertTextFormat": 2,
    "kind": 3,
    "label": "keys_unsorted",
    "sortText": "100_keys_unsorted",
    "textEdit": Object {
      "newText": "keys_unsorted",
      "range": Object {
        "end": Object {
          "character": 31,
          "line": 17,
        },
        "start": Object {
          "character": 31,
          "line": 17,
        },
      },
    },
  },
  Object {
    "detail": "The builtin function has returns whether the input object has the given key, or the input array has an element at the given index.",
    "filterText": "has(key)",
    "insertText": "has(key)",
    "insertTextFormat": 2,
    "kind": 3,
    "label": "has(key)",
    "sortText": "100_has(key)",
    "textEdit": Object {
      "newText": "has(key)",
      "range": Object {
        "end": Object {
          "character": 31,
          "line": 17,
        },
        "start": Object {
          "character": 31,
          "line": 17,
        },
      },
    },
  },
]
`;

exports[`SWF LS YAML code completion Jq completions event data filter inside onEvents completion variables completion cursor with a value following the  dot(variable) 1`] = `2`;

exports[`SWF LS YAML code completion Jq completions event data filter inside onEvents completion variables completion cursor with a value following the  dot(variable) 2`] = `
Array [
  Object {
    "detail": "1",
    "filterText": "a",
    "insertText": "age",
    "insertTextFormat": 2,
    "kind": 12,
    "label": "age",
    "sortText": "100_age",
    "textEdit": Object {
      "newText": "age",
      "range": Object {
        "end": Object {
          "character": 31,
          "line": 17,
        },
        "start": Object {
          "character": 30,
          "line": 17,
        },
      },
    },
  },
  Object {
    "detail": "string",
    "filterText": "a",
    "insertText": "avgLoad",
    "insertTextFormat": 2,
    "kind": 12,
    "label": "avgLoad",
    "sortText": "100_avgLoad",
    "textEdit": Object {
      "newText": "avgLoad",
      "range": Object {
        "end": Object {
          "character": 31,
          "line": 17,
        },
        "start": Object {
          "character": 30,
          "line": 17,
        },
      },
    },
  },
]
`;

exports[`SWF LS YAML code completion Jq completions event data filter inside onEvents completion variables completion empty object 1`] = `0`;

exports[`SWF LS YAML code completion Jq completions event data filter inside onEvents completion variables completion empty object 2`] = `Array []`;

exports[`SWF LS YAML code completion Jq completions event data filter inside onEvents completion variables completion empty object 3`] = `0`;

exports[`SWF LS YAML code completion Jq completions event data filter inside onEvents completion variables completion empty object 4`] = `Array []`;

exports[`SWF LS YAML code completion Jq completions event data filter inside onEvents completion variables completion empty object 5`] = `0`;

exports[`SWF LS YAML code completion Jq completions event data filter inside onEvents completion variables completion empty object 6`] = `Array []`;

exports[`SWF LS YAML code completion Jq completions event data filter inside onEvents completion variables completion fn: after some value 1`] = `2`;

exports[`SWF LS YAML code completion Jq completions event data filter inside onEvents completion variables completion fn: after some value 2`] = `
Array [
  Object {
    "detail": "Reusable functions(expressions) defined in the functions array",
    "filterText": "expressionFunc1",
    "insertText": "expressionFunc1",
    "insertTextFormat": 2,
    "kind": 3,
    "label": "expressionFunc1",
    "sortText": "100_expressionFunc1",
    "textEdit": Object {
      "newText": "'expressionFunc1'",
      "range": Object {
        "end": Object {
          "character": 41,
          "line": 17,
        },
        "start": Object {
          "character": 41,
          "line": 17,
        },
      },
    },
  },
  Object {
    "detail": "Reusable functions(expressions) defined in the functions array",
    "filterText": "expressionFunc2",
    "insertText": "expressionFunc2",
    "insertTextFormat": 2,
    "kind": 3,
    "label": "expressionFunc2",
    "sortText": "100_expressionFunc2",
    "textEdit": Object {
      "newText": "'expressionFunc2'",
      "range": Object {
        "end": Object {
          "character": 41,
          "line": 17,
        },
        "start": Object {
          "character": 41,
          "line": 17,
        },
      },
    },
  },
]
`;

exports[`SWF LS YAML code completion Jq completions event data filter inside onEvents completion variables completion fn: starting with a 1`] = `0`;

exports[`SWF LS YAML code completion Jq completions event data filter inside onEvents completion variables completion fn: starting with a 2`] = `Array []`;

exports[`SWF LS YAML code completion Jq completions event data filter inside onEvents completion variables completion fn: starting with r 1`] = `0`;

exports[`SWF LS YAML code completion Jq completions event data filter inside onEvents completion variables completion fn: starting with r 2`] = `Array []`;

exports[`SWF LS YAML code completion Jq completions event data filter inside onEvents completion variables completion no value/double quotes 1`] = `140`;

exports[`SWF LS YAML code completion Jq completions event data filter inside onEvents completion variables completion no value/double quotes 2`] = `
Array [
  Object {
    "detail": "The builtin function length gets the length of various different types of value.",
    "filterText": "length",
    "insertText": "length",
    "insertTextFormat": 2,
    "kind": 3,
    "label": "length",
    "sortText": "100_length",
    "textEdit": Object {
      "newText": "length",
      "range": Object {
        "end": Object {
          "character": 29,
          "line": 17,
        },
        "start": Object {
          "character": 29,
          "line": 17,
        },
      },
    },
  },
  Object {
    "detail": "The builtin function utf8bytelength outputs the number of bytes used to encode a string in UTF-8.",
    "filterText": "utf8bytelength",
    "insertText": "utf8bytelength",
    "insertTextFormat": 2,
    "kind": 3,
    "label": "utf8bytelength",
    "sortText": "100_utf8bytelength",
    "textEdit": Object {
      "newText": "'utf8bytelength'",
      "range": Object {
        "end": Object {
          "character": 29,
          "line": 17,
        },
        "start": Object {
          "character": 29,
          "line": 17,
        },
      },
    },
  },
  Object {
    "detail": "The builtin function keys, when given an object, returns its keys in an array.",
    "filterText": "keys",
    "insertText": "keys",
    "insertTextFormat": 2,
    "kind": 3,
    "label": "keys",
    "sortText": "100_keys",
    "textEdit": Object {
      "newText": "keys",
      "range": Object {
        "end": Object {
          "character": 29,
          "line": 17,
        },
        "start": Object {
          "character": 29,
          "line": 17,
        },
      },
    },
  },
  Object {
    "detail": "The keys_unsorted function is just like keys, but if the input is an object then the keys will not be sorted, instead the keys will roughly be in insertion order.",
    "filterText": "keys_unsorted",
    "insertText": "keys_unsorted",
    "insertTextFormat": 2,
    "kind": 3,
    "label": "keys_unsorted",
    "sortText": "100_keys_unsorted",
    "textEdit": Object {
      "newText": "keys_unsorted",
      "range": Object {
        "end": Object {
          "character": 29,
          "line": 17,
        },
        "start": Object {
          "character": 29,
          "line": 17,
        },
      },
    },
  },
  Object {
    "detail": "The builtin function has returns whether the input object has the given key, or the input array has an element at the given index.",
    "filterText": "has(key)",
    "insertText": "has(key)",
    "insertTextFormat": 2,
    "kind": 3,
    "label": "has(key)",
    "sortText": "100_has(key)",
    "textEdit": Object {
      "newText": "has(key)",
      "range": Object {
        "end": Object {
          "character": 29,
          "line": 17,
        },
        "start": Object {
          "character": 29,
          "line": 17,
        },
      },
    },
  },
]
`;

exports[`SWF LS YAML code completion Jq completions event data filter inside onEvents completion variables completion no value/single quotes 1`] = `140`;

exports[`SWF LS YAML code completion Jq completions event data filter inside onEvents completion variables completion no value/single quotes 2`] = `
Array [
  Object {
    "detail": "The builtin function length gets the length of various different types of value.",
    "filterText": "length",
    "insertText": "length",
    "insertTextFormat": 2,
    "kind": 3,
    "label": "length",
    "sortText": "100_length",
    "textEdit": Object {
      "newText": "length",
      "range": Object {
        "end": Object {
          "character": 29,
          "line": 17,
        },
        "start": Object {
          "character": 29,
          "line": 17,
        },
      },
    },
  },
  Object {
    "detail": "The builtin function utf8bytelength outputs the number of bytes used to encode a string in UTF-8.",
    "filterText": "utf8bytelength",
    "insertText": "utf8bytelength",
    "insertTextFormat": 2,
    "kind": 3,
    "label": "utf8bytelength",
    "sortText": "100_utf8bytelength",
    "textEdit": Object {
      "newText": "'utf8bytelength'",
      "range": Object {
        "end": Object {
          "character": 29,
          "line": 17,
        },
        "start": Object {
          "character": 29,
          "line": 17,
        },
      },
    },
  },
  Object {
    "detail": "The builtin function keys, when given an object, returns its keys in an array.",
    "filterText": "keys",
    "insertText": "keys",
    "insertTextFormat": 2,
    "kind": 3,
    "label": "keys",
    "sortText": "100_keys",
    "textEdit": Object {
      "newText": "keys",
      "range": Object {
        "end": Object {
          "character": 29,
          "line": 17,
        },
        "start": Object {
          "character": 29,
          "line": 17,
        },
      },
    },
  },
  Object {
    "detail": "The keys_unsorted function is just like keys, but if the input is an object then the keys will not be sorted, instead the keys will roughly be in insertion order.",
    "filterText": "keys_unsorted",
    "insertText": "keys_unsorted",
    "insertTextFormat": 2,
    "kind": 3,
    "label": "keys_unsorted",
    "sortText": "100_keys_unsorted",
    "textEdit": Object {
      "newText": "keys_unsorted",
      "range": Object {
        "end": Object {
          "character": 29,
          "line": 17,
        },
        "start": Object {
          "character": 29,
          "line": 17,
        },
      },
    },
  },
  Object {
    "detail": "The builtin function has returns whether the input object has the given key, or the input array has an element at the given index.",
    "filterText": "has(key)",
    "insertText": "has(key)",
    "insertTextFormat": 2,
    "kind": 3,
    "label": "has(key)",
    "sortText": "100_has(key)",
    "textEdit": Object {
      "newText": "has(key)",
      "range": Object {
        "end": Object {
          "character": 29,
          "line": 17,
        },
        "start": Object {
          "character": 29,
          "line": 17,
        },
      },
    },
  },
]
`;

exports[`SWF LS YAML code completion Jq completions event data filter inside onEvents completion variables completion space before fn: 1`] = `2`;

exports[`SWF LS YAML code completion Jq completions event data filter inside onEvents completion variables completion space before fn: 2`] = `
Array [
  Object {
    "detail": "Reusable functions(expressions) defined in the functions array",
    "filterText": "expressionFunc1",
    "insertText": "expressionFunc1",
    "insertTextFormat": 2,
    "kind": 3,
    "label": "expressionFunc1",
    "sortText": "100_expressionFunc1",
    "textEdit": Object {
      "newText": "'expressionFunc1'",
      "range": Object {
        "end": Object {
          "character": 33,
          "line": 17,
        },
        "start": Object {
          "character": 33,
          "line": 17,
        },
      },
    },
  },
  Object {
    "detail": "Reusable functions(expressions) defined in the functions array",
    "filterText": "expressionFunc2",
    "insertText": "expressionFunc2",
    "insertTextFormat": 2,
    "kind": 3,
    "label": "expressionFunc2",
    "sortText": "100_expressionFunc2",
    "textEdit": Object {
      "newText": "'expressionFunc2'",
      "range": Object {
        "end": Object {
          "character": 33,
          "line": 17,
        },
        "start": Object {
          "character": 33,
          "line": 17,
        },
      },
    },
  },
]
`;

exports[`SWF LS YAML code completion Jq completions event data filter inside onEvents completion variables completion value fn:/double quotes 1`] = `2`;

exports[`SWF LS YAML code completion Jq completions event data filter inside onEvents completion variables completion value fn:/double quotes 2`] = `
Array [
  Object {
    "detail": "Reusable functions(expressions) defined in the functions array",
    "filterText": "expressionFunc1",
    "insertText": "expressionFunc1",
    "insertTextFormat": 2,
    "kind": 3,
    "label": "expressionFunc1",
    "sortText": "100_expressionFunc1",
    "textEdit": Object {
      "newText": "'expressionFunc1'",
      "range": Object {
        "end": Object {
          "character": 32,
          "line": 17,
        },
        "start": Object {
          "character": 32,
          "line": 17,
        },
      },
    },
  },
  Object {
    "detail": "Reusable functions(expressions) defined in the functions array",
    "filterText": "expressionFunc2",
    "insertText": "expressionFunc2",
    "insertTextFormat": 2,
    "kind": 3,
    "label": "expressionFunc2",
    "sortText": "100_expressionFunc2",
    "textEdit": Object {
      "newText": "'expressionFunc2'",
      "range": Object {
        "end": Object {
          "character": 32,
          "line": 17,
        },
        "start": Object {
          "character": 32,
          "line": 17,
        },
      },
    },
  },
]
`;

exports[`SWF LS YAML code completion Jq completions event data filter inside onEvents completion variables completion value fn:/single quotes 1`] = `2`;

exports[`SWF LS YAML code completion Jq completions event data filter inside onEvents completion variables completion value fn:/single quotes 2`] = `
Array [
  Object {
    "detail": "Reusable functions(expressions) defined in the functions array",
    "filterText": "expressionFunc1",
    "insertText": "expressionFunc1",
    "insertTextFormat": 2,
    "kind": 3,
    "label": "expressionFunc1",
    "sortText": "100_expressionFunc1",
    "textEdit": Object {
      "newText": "'expressionFunc1'",
      "range": Object {
        "end": Object {
          "character": 32,
          "line": 17,
        },
        "start": Object {
          "character": 32,
          "line": 17,
        },
      },
    },
  },
  Object {
    "detail": "Reusable functions(expressions) defined in the functions array",
    "filterText": "expressionFunc2",
    "insertText": "expressionFunc2",
    "insertTextFormat": 2,
    "kind": 3,
    "label": "expressionFunc2",
    "sortText": "100_expressionFunc2",
    "textEdit": Object {
      "newText": "'expressionFunc2'",
      "range": Object {
        "end": Object {
          "character": 32,
          "line": 17,
        },
        "start": Object {
          "character": 32,
          "line": 17,
        },
      },
    },
  },
]
`;

exports[`SWF LS YAML code completion Jq completions functionRef arguments completions built-in functions completion cursor after a value - auto-complete the word map 1`] = `2`;

exports[`SWF LS YAML code completion Jq completions functionRef arguments completions built-in functions completion cursor after a value - auto-complete the word map 2`] = `
Array [
  Object {
    "detail": "For any filter x, map(x) will run that filter for each element of the input array, and return the outputs in a new array. map(.+1) will increment each element of an array of numbers.",
    "filterText": "map",
    "insertText": "map(x)",
    "insertTextFormat": 2,
    "kind": 3,
    "label": "map(x)",
    "sortText": "100_map(x)",
    "textEdit": Object {
      "newText": "map(x)",
      "range": Object {
        "end": Object {
          "character": 41,
          "line": 19,
        },
        "start": Object {
          "character": 38,
          "line": 19,
        },
      },
    },
  },
  Object {
    "detail": "map_values(x) will run that filter for each element, but it will return an object when an object is passed.",
    "filterText": "map",
    "insertText": "map_values(x)",
    "insertTextFormat": 2,
    "kind": 3,
    "label": "map_values(x)",
    "sortText": "100_map_values(x)",
    "textEdit": Object {
      "newText": "map_values(x)",
      "range": Object {
        "end": Object {
          "character": 41,
          "line": 19,
        },
        "start": Object {
          "character": 38,
          "line": 19,
        },
      },
    },
  },
]
`;

exports[`SWF LS YAML code completion Jq completions functionRef arguments completions built-in functions completion cursor after some random word 1`] = `140`;

exports[`SWF LS YAML code completion Jq completions functionRef arguments completions built-in functions completion cursor after some random word 2`] = `
Array [
  Object {
    "detail": "The builtin function length gets the length of various different types of value.",
    "filterText": "length",
    "insertText": "length",
    "insertTextFormat": 2,
    "kind": 3,
    "label": "length",
    "sortText": "100_length",
    "textEdit": Object {
      "newText": "length",
      "range": Object {
        "end": Object {
          "character": 48,
          "line": 19,
        },
        "start": Object {
          "character": 48,
          "line": 19,
        },
      },
    },
  },
  Object {
    "detail": "The builtin function utf8bytelength outputs the number of bytes used to encode a string in UTF-8.",
    "filterText": "utf8bytelength",
    "insertText": "utf8bytelength",
    "insertTextFormat": 2,
    "kind": 3,
    "label": "utf8bytelength",
    "sortText": "100_utf8bytelength",
    "textEdit": Object {
      "newText": "'utf8bytelength'",
      "range": Object {
        "end": Object {
          "character": 48,
          "line": 19,
        },
        "start": Object {
          "character": 48,
          "line": 19,
        },
      },
    },
  },
  Object {
    "detail": "The builtin function keys, when given an object, returns its keys in an array.",
    "filterText": "keys",
    "insertText": "keys",
    "insertTextFormat": 2,
    "kind": 3,
    "label": "keys",
    "sortText": "100_keys",
    "textEdit": Object {
      "newText": "keys",
      "range": Object {
        "end": Object {
          "character": 48,
          "line": 19,
        },
        "start": Object {
          "character": 48,
          "line": 19,
        },
      },
    },
  },
  Object {
    "detail": "The keys_unsorted function is just like keys, but if the input is an object then the keys will not be sorted, instead the keys will roughly be in insertion order.",
    "filterText": "keys_unsorted",
    "insertText": "keys_unsorted",
    "insertTextFormat": 2,
    "kind": 3,
    "label": "keys_unsorted",
    "sortText": "100_keys_unsorted",
    "textEdit": Object {
      "newText": "keys_unsorted",
      "range": Object {
        "end": Object {
          "character": 48,
          "line": 19,
        },
        "start": Object {
          "character": 48,
          "line": 19,
        },
      },
    },
  },
  Object {
    "detail": "The builtin function has returns whether the input object has the given key, or the input array has an element at the given index.",
    "filterText": "has(key)",
    "insertText": "has(key)",
    "insertTextFormat": 2,
    "kind": 3,
    "label": "has(key)",
    "sortText": "100_has(key)",
    "textEdit": Object {
      "newText": "has(key)",
      "range": Object {
        "end": Object {
          "character": 48,
          "line": 19,
        },
        "start": Object {
          "character": 48,
          "line": 19,
        },
      },
    },
  },
]
`;

exports[`SWF LS YAML code completion Jq completions functionRef arguments completions built-in functions completion cursor after the dot(variable):/double quotes 1`] = `4`;

exports[`SWF LS YAML code completion Jq completions functionRef arguments completions built-in functions completion cursor after the dot(variable):/double quotes 2`] = `
Array [
  Object {
    "detail": "string",
    "filterText": "name",
    "insertText": "name",
    "insertTextFormat": 2,
    "kind": 12,
    "label": "name",
    "sortText": "100_name",
    "textEdit": Object {
      "newText": "name",
      "range": Object {
        "end": Object {
          "character": 39,
          "line": 19,
        },
        "start": Object {
          "character": 39,
          "line": 19,
        },
      },
    },
  },
  Object {
    "detail": "1",
    "filterText": "age",
    "insertText": "age",
    "insertTextFormat": 2,
    "kind": 12,
    "label": "age",
    "sortText": "100_age",
    "textEdit": Object {
      "newText": "age",
      "range": Object {
        "end": Object {
          "character": 39,
          "line": 19,
        },
        "start": Object {
          "character": 39,
          "line": 19,
        },
      },
    },
  },
  Object {
    "detail": "string",
    "filterText": "avgLoad",
    "insertText": "avgLoad",
    "insertTextFormat": 2,
    "kind": 12,
    "label": "avgLoad",
    "sortText": "100_avgLoad",
    "textEdit": Object {
      "newText": "avgLoad",
      "range": Object {
        "end": Object {
          "character": 39,
          "line": 19,
        },
        "start": Object {
          "character": 39,
          "line": 19,
        },
      },
    },
  },
  Object {
    "detail": "1",
    "filterText": "numberOfPods",
    "insertText": "numberOfPods",
    "insertTextFormat": 2,
    "kind": 12,
    "label": "numberOfPods",
    "sortText": "100_numberOfPods",
    "textEdit": Object {
      "newText": "numberOfPods",
      "range": Object {
        "end": Object {
          "character": 39,
          "line": 19,
        },
        "start": Object {
          "character": 39,
          "line": 19,
        },
      },
    },
  },
]
`;

exports[`SWF LS YAML code completion Jq completions functionRef arguments completions built-in functions completion cursor after the dot(variable):/single quotes 1`] = `4`;

exports[`SWF LS YAML code completion Jq completions functionRef arguments completions built-in functions completion cursor after the dot(variable):/single quotes 2`] = `
Array [
  Object {
    "detail": "string",
    "filterText": "name",
    "insertText": "name",
    "insertTextFormat": 2,
    "kind": 12,
    "label": "name",
    "sortText": "100_name",
    "textEdit": Object {
      "newText": "name",
      "range": Object {
        "end": Object {
          "character": 39,
          "line": 19,
        },
        "start": Object {
          "character": 39,
          "line": 19,
        },
      },
    },
  },
  Object {
    "detail": "1",
    "filterText": "age",
    "insertText": "age",
    "insertTextFormat": 2,
    "kind": 12,
    "label": "age",
    "sortText": "100_age",
    "textEdit": Object {
      "newText": "age",
      "range": Object {
        "end": Object {
          "character": 39,
          "line": 19,
        },
        "start": Object {
          "character": 39,
          "line": 19,
        },
      },
    },
  },
  Object {
    "detail": "string",
    "filterText": "avgLoad",
    "insertText": "avgLoad",
    "insertTextFormat": 2,
    "kind": 12,
    "label": "avgLoad",
    "sortText": "100_avgLoad",
    "textEdit": Object {
      "newText": "avgLoad",
      "range": Object {
        "end": Object {
          "character": 39,
          "line": 19,
        },
        "start": Object {
          "character": 39,
          "line": 19,
        },
      },
    },
  },
  Object {
    "detail": "1",
    "filterText": "numberOfPods",
    "insertText": "numberOfPods",
    "insertTextFormat": 2,
    "kind": 12,
    "label": "numberOfPods",
    "sortText": "100_numberOfPods",
    "textEdit": Object {
      "newText": "numberOfPods",
      "range": Object {
        "end": Object {
          "character": 39,
          "line": 19,
        },
        "start": Object {
          "character": 39,
          "line": 19,
        },
      },
    },
  },
]
`;

exports[`SWF LS YAML code completion Jq completions functionRef arguments completions built-in functions completion cursor before empty space 1`] = `140`;

exports[`SWF LS YAML code completion Jq completions functionRef arguments completions built-in functions completion cursor before empty space 2`] = `
Array [
  Object {
    "detail": "The builtin function length gets the length of various different types of value.",
    "filterText": "length",
    "insertText": "length",
    "insertTextFormat": 2,
    "kind": 3,
    "label": "length",
    "sortText": "100_length",
    "textEdit": Object {
      "newText": "length",
      "range": Object {
        "end": Object {
          "character": 38,
          "line": 19,
        },
        "start": Object {
          "character": 38,
          "line": 19,
        },
      },
    },
  },
  Object {
    "detail": "The builtin function utf8bytelength outputs the number of bytes used to encode a string in UTF-8.",
    "filterText": "utf8bytelength",
    "insertText": "utf8bytelength",
    "insertTextFormat": 2,
    "kind": 3,
    "label": "utf8bytelength",
    "sortText": "100_utf8bytelength",
    "textEdit": Object {
      "newText": "'utf8bytelength'",
      "range": Object {
        "end": Object {
          "character": 38,
          "line": 19,
        },
        "start": Object {
          "character": 38,
          "line": 19,
        },
      },
    },
  },
  Object {
    "detail": "The builtin function keys, when given an object, returns its keys in an array.",
    "filterText": "keys",
    "insertText": "keys",
    "insertTextFormat": 2,
    "kind": 3,
    "label": "keys",
    "sortText": "100_keys",
    "textEdit": Object {
      "newText": "keys",
      "range": Object {
        "end": Object {
          "character": 38,
          "line": 19,
        },
        "start": Object {
          "character": 38,
          "line": 19,
        },
      },
    },
  },
  Object {
    "detail": "The keys_unsorted function is just like keys, but if the input is an object then the keys will not be sorted, instead the keys will roughly be in insertion order.",
    "filterText": "keys_unsorted",
    "insertText": "keys_unsorted",
    "insertTextFormat": 2,
    "kind": 3,
    "label": "keys_unsorted",
    "sortText": "100_keys_unsorted",
    "textEdit": Object {
      "newText": "keys_unsorted",
      "range": Object {
        "end": Object {
          "character": 38,
          "line": 19,
        },
        "start": Object {
          "character": 38,
          "line": 19,
        },
      },
    },
  },
  Object {
    "detail": "The builtin function has returns whether the input object has the given key, or the input array has an element at the given index.",
    "filterText": "has(key)",
    "insertText": "has(key)",
    "insertTextFormat": 2,
    "kind": 3,
    "label": "has(key)",
    "sortText": "100_has(key)",
    "textEdit": Object {
      "newText": "has(key)",
      "range": Object {
        "end": Object {
          "character": 38,
          "line": 19,
        },
        "start": Object {
          "character": 38,
          "line": 19,
        },
      },
    },
  },
]
`;

exports[`SWF LS YAML code completion Jq completions functionRef arguments completions built-in functions completion cursor before the dot(variable) 1`] = `140`;

exports[`SWF LS YAML code completion Jq completions functionRef arguments completions built-in functions completion cursor before the dot(variable) 2`] = `
Array [
  Object {
    "detail": "The builtin function length gets the length of various different types of value.",
    "filterText": "length",
    "insertText": "length",
    "insertTextFormat": 2,
    "kind": 3,
    "label": "length",
    "sortText": "100_length",
    "textEdit": Object {
      "newText": "length",
      "range": Object {
        "end": Object {
          "character": 38,
          "line": 19,
        },
        "start": Object {
          "character": 38,
          "line": 19,
        },
      },
    },
  },
  Object {
    "detail": "The builtin function utf8bytelength outputs the number of bytes used to encode a string in UTF-8.",
    "filterText": "utf8bytelength",
    "insertText": "utf8bytelength",
    "insertTextFormat": 2,
    "kind": 3,
    "label": "utf8bytelength",
    "sortText": "100_utf8bytelength",
    "textEdit": Object {
      "newText": "'utf8bytelength'",
      "range": Object {
        "end": Object {
          "character": 38,
          "line": 19,
        },
        "start": Object {
          "character": 38,
          "line": 19,
        },
      },
    },
  },
  Object {
    "detail": "The builtin function keys, when given an object, returns its keys in an array.",
    "filterText": "keys",
    "insertText": "keys",
    "insertTextFormat": 2,
    "kind": 3,
    "label": "keys",
    "sortText": "100_keys",
    "textEdit": Object {
      "newText": "keys",
      "range": Object {
        "end": Object {
          "character": 38,
          "line": 19,
        },
        "start": Object {
          "character": 38,
          "line": 19,
        },
      },
    },
  },
  Object {
    "detail": "The keys_unsorted function is just like keys, but if the input is an object then the keys will not be sorted, instead the keys will roughly be in insertion order.",
    "filterText": "keys_unsorted",
    "insertText": "keys_unsorted",
    "insertTextFormat": 2,
    "kind": 3,
    "label": "keys_unsorted",
    "sortText": "100_keys_unsorted",
    "textEdit": Object {
      "newText": "keys_unsorted",
      "range": Object {
        "end": Object {
          "character": 38,
          "line": 19,
        },
        "start": Object {
          "character": 38,
          "line": 19,
        },
      },
    },
  },
  Object {
    "detail": "The builtin function has returns whether the input object has the given key, or the input array has an element at the given index.",
    "filterText": "has(key)",
    "insertText": "has(key)",
    "insertTextFormat": 2,
    "kind": 3,
    "label": "has(key)",
    "sortText": "100_has(key)",
    "textEdit": Object {
      "newText": "has(key)",
      "range": Object {
        "end": Object {
          "character": 38,
          "line": 19,
        },
        "start": Object {
          "character": 38,
          "line": 19,
        },
      },
    },
  },
]
`;

exports[`SWF LS YAML code completion Jq completions functionRef arguments completions built-in functions completion cursor with a space after the  dot(variable) 1`] = `140`;

exports[`SWF LS YAML code completion Jq completions functionRef arguments completions built-in functions completion cursor with a space after the  dot(variable) 2`] = `
Array [
  Object {
    "detail": "The builtin function length gets the length of various different types of value.",
    "filterText": "length",
    "insertText": "length",
    "insertTextFormat": 2,
    "kind": 3,
    "label": "length",
    "sortText": "100_length",
    "textEdit": Object {
      "newText": "length",
      "range": Object {
        "end": Object {
          "character": 40,
          "line": 19,
        },
        "start": Object {
          "character": 40,
          "line": 19,
        },
      },
    },
  },
  Object {
    "detail": "The builtin function utf8bytelength outputs the number of bytes used to encode a string in UTF-8.",
    "filterText": "utf8bytelength",
    "insertText": "utf8bytelength",
    "insertTextFormat": 2,
    "kind": 3,
    "label": "utf8bytelength",
    "sortText": "100_utf8bytelength",
    "textEdit": Object {
      "newText": "'utf8bytelength'",
      "range": Object {
        "end": Object {
          "character": 40,
          "line": 19,
        },
        "start": Object {
          "character": 40,
          "line": 19,
        },
      },
    },
  },
  Object {
    "detail": "The builtin function keys, when given an object, returns its keys in an array.",
    "filterText": "keys",
    "insertText": "keys",
    "insertTextFormat": 2,
    "kind": 3,
    "label": "keys",
    "sortText": "100_keys",
    "textEdit": Object {
      "newText": "keys",
      "range": Object {
        "end": Object {
          "character": 40,
          "line": 19,
        },
        "start": Object {
          "character": 40,
          "line": 19,
        },
      },
    },
  },
  Object {
    "detail": "The keys_unsorted function is just like keys, but if the input is an object then the keys will not be sorted, instead the keys will roughly be in insertion order.",
    "filterText": "keys_unsorted",
    "insertText": "keys_unsorted",
    "insertTextFormat": 2,
    "kind": 3,
    "label": "keys_unsorted",
    "sortText": "100_keys_unsorted",
    "textEdit": Object {
      "newText": "keys_unsorted",
      "range": Object {
        "end": Object {
          "character": 40,
          "line": 19,
        },
        "start": Object {
          "character": 40,
          "line": 19,
        },
      },
    },
  },
  Object {
    "detail": "The builtin function has returns whether the input object has the given key, or the input array has an element at the given index.",
    "filterText": "has(key)",
    "insertText": "has(key)",
    "insertTextFormat": 2,
    "kind": 3,
    "label": "has(key)",
    "sortText": "100_has(key)",
    "textEdit": Object {
      "newText": "has(key)",
      "range": Object {
        "end": Object {
          "character": 40,
          "line": 19,
        },
        "start": Object {
          "character": 40,
          "line": 19,
        },
      },
    },
  },
]
`;

exports[`SWF LS YAML code completion Jq completions functionRef arguments completions built-in functions completion cursor with a value following the  dot(variable) 1`] = `2`;

exports[`SWF LS YAML code completion Jq completions functionRef arguments completions built-in functions completion cursor with a value following the  dot(variable) 2`] = `
Array [
  Object {
    "detail": "1",
    "filterText": "a",
    "insertText": "age",
    "insertTextFormat": 2,
    "kind": 12,
    "label": "age",
    "sortText": "100_age",
    "textEdit": Object {
      "newText": "age",
      "range": Object {
        "end": Object {
          "character": 40,
          "line": 19,
        },
        "start": Object {
          "character": 39,
          "line": 19,
        },
      },
    },
  },
  Object {
    "detail": "string",
    "filterText": "a",
    "insertText": "avgLoad",
    "insertTextFormat": 2,
    "kind": 12,
    "label": "avgLoad",
    "sortText": "100_avgLoad",
    "textEdit": Object {
      "newText": "avgLoad",
      "range": Object {
        "end": Object {
          "character": 40,
          "line": 19,
        },
        "start": Object {
          "character": 39,
          "line": 19,
        },
      },
    },
  },
]
`;

exports[`SWF LS YAML code completion Jq completions functionRef arguments completions built-in functions completion empty object 1`] = `0`;

exports[`SWF LS YAML code completion Jq completions functionRef arguments completions built-in functions completion empty object 2`] = `Array []`;

exports[`SWF LS YAML code completion Jq completions functionRef arguments completions built-in functions completion empty object 3`] = `0`;

exports[`SWF LS YAML code completion Jq completions functionRef arguments completions built-in functions completion empty object 4`] = `Array []`;

exports[`SWF LS YAML code completion Jq completions functionRef arguments completions built-in functions completion empty object 5`] = `0`;

exports[`SWF LS YAML code completion Jq completions functionRef arguments completions built-in functions completion empty object 6`] = `Array []`;

exports[`SWF LS YAML code completion Jq completions functionRef arguments completions built-in functions completion fn: after some value 1`] = `2`;

exports[`SWF LS YAML code completion Jq completions functionRef arguments completions built-in functions completion fn: after some value 2`] = `
Array [
  Object {
    "detail": "Reusable functions(expressions) defined in the functions array",
    "filterText": "expressionFunc1",
    "insertText": "expressionFunc1",
    "insertTextFormat": 2,
    "kind": 3,
    "label": "expressionFunc1",
    "sortText": "100_expressionFunc1",
    "textEdit": Object {
      "newText": "'expressionFunc1'",
      "range": Object {
        "end": Object {
          "character": 50,
          "line": 19,
        },
        "start": Object {
          "character": 50,
          "line": 19,
        },
      },
    },
  },
  Object {
    "detail": "Reusable functions(expressions) defined in the functions array",
    "filterText": "expressionFunc2",
    "insertText": "expressionFunc2",
    "insertTextFormat": 2,
    "kind": 3,
    "label": "expressionFunc2",
    "sortText": "100_expressionFunc2",
    "textEdit": Object {
      "newText": "'expressionFunc2'",
      "range": Object {
        "end": Object {
          "character": 50,
          "line": 19,
        },
        "start": Object {
          "character": 50,
          "line": 19,
        },
      },
    },
  },
]
`;

exports[`SWF LS YAML code completion Jq completions functionRef arguments completions built-in functions completion fn: starting with a 1`] = `0`;

exports[`SWF LS YAML code completion Jq completions functionRef arguments completions built-in functions completion fn: starting with a 2`] = `Array []`;

exports[`SWF LS YAML code completion Jq completions functionRef arguments completions built-in functions completion fn: starting with r 1`] = `0`;

exports[`SWF LS YAML code completion Jq completions functionRef arguments completions built-in functions completion fn: starting with r 2`] = `Array []`;

exports[`SWF LS YAML code completion Jq completions functionRef arguments completions built-in functions completion no value/double quotes 1`] = `140`;

exports[`SWF LS YAML code completion Jq completions functionRef arguments completions built-in functions completion no value/double quotes 2`] = `
Array [
  Object {
    "detail": "The builtin function length gets the length of various different types of value.",
    "filterText": "length",
    "insertText": "length",
    "insertTextFormat": 2,
    "kind": 3,
    "label": "length",
    "sortText": "100_length",
    "textEdit": Object {
      "newText": "length",
      "range": Object {
        "end": Object {
          "character": 38,
          "line": 19,
        },
        "start": Object {
          "character": 38,
          "line": 19,
        },
      },
    },
  },
  Object {
    "detail": "The builtin function utf8bytelength outputs the number of bytes used to encode a string in UTF-8.",
    "filterText": "utf8bytelength",
    "insertText": "utf8bytelength",
    "insertTextFormat": 2,
    "kind": 3,
    "label": "utf8bytelength",
    "sortText": "100_utf8bytelength",
    "textEdit": Object {
      "newText": "'utf8bytelength'",
      "range": Object {
        "end": Object {
          "character": 38,
          "line": 19,
        },
        "start": Object {
          "character": 38,
          "line": 19,
        },
      },
    },
  },
  Object {
    "detail": "The builtin function keys, when given an object, returns its keys in an array.",
    "filterText": "keys",
    "insertText": "keys",
    "insertTextFormat": 2,
    "kind": 3,
    "label": "keys",
    "sortText": "100_keys",
    "textEdit": Object {
      "newText": "keys",
      "range": Object {
        "end": Object {
          "character": 38,
          "line": 19,
        },
        "start": Object {
          "character": 38,
          "line": 19,
        },
      },
    },
  },
  Object {
    "detail": "The keys_unsorted function is just like keys, but if the input is an object then the keys will not be sorted, instead the keys will roughly be in insertion order.",
    "filterText": "keys_unsorted",
    "insertText": "keys_unsorted",
    "insertTextFormat": 2,
    "kind": 3,
    "label": "keys_unsorted",
    "sortText": "100_keys_unsorted",
    "textEdit": Object {
      "newText": "keys_unsorted",
      "range": Object {
        "end": Object {
          "character": 38,
          "line": 19,
        },
        "start": Object {
          "character": 38,
          "line": 19,
        },
      },
    },
  },
  Object {
    "detail": "The builtin function has returns whether the input object has the given key, or the input array has an element at the given index.",
    "filterText": "has(key)",
    "insertText": "has(key)",
    "insertTextFormat": 2,
    "kind": 3,
    "label": "has(key)",
    "sortText": "100_has(key)",
    "textEdit": Object {
      "newText": "has(key)",
      "range": Object {
        "end": Object {
          "character": 38,
          "line": 19,
        },
        "start": Object {
          "character": 38,
          "line": 19,
        },
      },
    },
  },
]
`;

exports[`SWF LS YAML code completion Jq completions functionRef arguments completions built-in functions completion no value/single quotes 1`] = `140`;

exports[`SWF LS YAML code completion Jq completions functionRef arguments completions built-in functions completion no value/single quotes 2`] = `
Array [
  Object {
    "detail": "The builtin function length gets the length of various different types of value.",
    "filterText": "length",
    "insertText": "length",
    "insertTextFormat": 2,
    "kind": 3,
    "label": "length",
    "sortText": "100_length",
    "textEdit": Object {
      "newText": "length",
      "range": Object {
        "end": Object {
          "character": 38,
          "line": 19,
        },
        "start": Object {
          "character": 38,
          "line": 19,
        },
      },
    },
  },
  Object {
    "detail": "The builtin function utf8bytelength outputs the number of bytes used to encode a string in UTF-8.",
    "filterText": "utf8bytelength",
    "insertText": "utf8bytelength",
    "insertTextFormat": 2,
    "kind": 3,
    "label": "utf8bytelength",
    "sortText": "100_utf8bytelength",
    "textEdit": Object {
      "newText": "'utf8bytelength'",
      "range": Object {
        "end": Object {
          "character": 38,
          "line": 19,
        },
        "start": Object {
          "character": 38,
          "line": 19,
        },
      },
    },
  },
  Object {
    "detail": "The builtin function keys, when given an object, returns its keys in an array.",
    "filterText": "keys",
    "insertText": "keys",
    "insertTextFormat": 2,
    "kind": 3,
    "label": "keys",
    "sortText": "100_keys",
    "textEdit": Object {
      "newText": "keys",
      "range": Object {
        "end": Object {
          "character": 38,
          "line": 19,
        },
        "start": Object {
          "character": 38,
          "line": 19,
        },
      },
    },
  },
  Object {
    "detail": "The keys_unsorted function is just like keys, but if the input is an object then the keys will not be sorted, instead the keys will roughly be in insertion order.",
    "filterText": "keys_unsorted",
    "insertText": "keys_unsorted",
    "insertTextFormat": 2,
    "kind": 3,
    "label": "keys_unsorted",
    "sortText": "100_keys_unsorted",
    "textEdit": Object {
      "newText": "keys_unsorted",
      "range": Object {
        "end": Object {
          "character": 38,
          "line": 19,
        },
        "start": Object {
          "character": 38,
          "line": 19,
        },
      },
    },
  },
  Object {
    "detail": "The builtin function has returns whether the input object has the given key, or the input array has an element at the given index.",
    "filterText": "has(key)",
    "insertText": "has(key)",
    "insertTextFormat": 2,
    "kind": 3,
    "label": "has(key)",
    "sortText": "100_has(key)",
    "textEdit": Object {
      "newText": "has(key)",
      "range": Object {
        "end": Object {
          "character": 38,
          "line": 19,
        },
        "start": Object {
          "character": 38,
          "line": 19,
        },
      },
    },
  },
]
`;

exports[`SWF LS YAML code completion Jq completions functionRef arguments completions built-in functions completion space before fn: 1`] = `2`;

exports[`SWF LS YAML code completion Jq completions functionRef arguments completions built-in functions completion space before fn: 2`] = `
Array [
  Object {
    "detail": "Reusable functions(expressions) defined in the functions array",
    "filterText": "expressionFunc1",
    "insertText": "expressionFunc1",
    "insertTextFormat": 2,
    "kind": 3,
    "label": "expressionFunc1",
    "sortText": "100_expressionFunc1",
    "textEdit": Object {
      "newText": "'expressionFunc1'",
      "range": Object {
        "end": Object {
          "character": 42,
          "line": 19,
        },
        "start": Object {
          "character": 42,
          "line": 19,
        },
      },
    },
  },
  Object {
    "detail": "Reusable functions(expressions) defined in the functions array",
    "filterText": "expressionFunc2",
    "insertText": "expressionFunc2",
    "insertTextFormat": 2,
    "kind": 3,
    "label": "expressionFunc2",
    "sortText": "100_expressionFunc2",
    "textEdit": Object {
      "newText": "'expressionFunc2'",
      "range": Object {
        "end": Object {
          "character": 42,
          "line": 19,
        },
        "start": Object {
          "character": 42,
          "line": 19,
        },
      },
    },
  },
]
`;

exports[`SWF LS YAML code completion Jq completions functionRef arguments completions built-in functions completion value fn:/double quotes 1`] = `2`;

exports[`SWF LS YAML code completion Jq completions functionRef arguments completions built-in functions completion value fn:/double quotes 2`] = `
Array [
  Object {
    "detail": "Reusable functions(expressions) defined in the functions array",
    "filterText": "expressionFunc1",
    "insertText": "expressionFunc1",
    "insertTextFormat": 2,
    "kind": 3,
    "label": "expressionFunc1",
    "sortText": "100_expressionFunc1",
    "textEdit": Object {
      "newText": "'expressionFunc1'",
      "range": Object {
        "end": Object {
          "character": 41,
          "line": 19,
        },
        "start": Object {
          "character": 41,
          "line": 19,
        },
      },
    },
  },
  Object {
    "detail": "Reusable functions(expressions) defined in the functions array",
    "filterText": "expressionFunc2",
    "insertText": "expressionFunc2",
    "insertTextFormat": 2,
    "kind": 3,
    "label": "expressionFunc2",
    "sortText": "100_expressionFunc2",
    "textEdit": Object {
      "newText": "'expressionFunc2'",
      "range": Object {
        "end": Object {
          "character": 41,
          "line": 19,
        },
        "start": Object {
          "character": 41,
          "line": 19,
        },
      },
    },
  },
]
`;

exports[`SWF LS YAML code completion Jq completions functionRef arguments completions built-in functions completion value fn:/single quotes 1`] = `2`;

exports[`SWF LS YAML code completion Jq completions functionRef arguments completions built-in functions completion value fn:/single quotes 2`] = `
Array [
  Object {
    "detail": "Reusable functions(expressions) defined in the functions array",
    "filterText": "expressionFunc1",
    "insertText": "expressionFunc1",
    "insertTextFormat": 2,
    "kind": 3,
    "label": "expressionFunc1",
    "sortText": "100_expressionFunc1",
    "textEdit": Object {
      "newText": "'expressionFunc1'",
      "range": Object {
        "end": Object {
          "character": 41,
          "line": 19,
        },
        "start": Object {
          "character": 41,
          "line": 19,
        },
      },
    },
  },
  Object {
    "detail": "Reusable functions(expressions) defined in the functions array",
    "filterText": "expressionFunc2",
    "insertText": "expressionFunc2",
    "insertTextFormat": 2,
    "kind": 3,
    "label": "expressionFunc2",
    "sortText": "100_expressionFunc2",
    "textEdit": Object {
      "newText": "'expressionFunc2'",
      "range": Object {
        "end": Object {
          "character": 41,
          "line": 19,
        },
        "start": Object {
          "character": 41,
          "line": 19,
        },
      },
    },
  },
]
`;

exports[`SWF LS YAML code completion Jq completions functionRef arguments completions variables completion cursor after a value - auto-complete the word map 1`] = `2`;

exports[`SWF LS YAML code completion Jq completions functionRef arguments completions variables completion cursor after a value - auto-complete the word map 2`] = `
Array [
  Object {
    "detail": "For any filter x, map(x) will run that filter for each element of the input array, and return the outputs in a new array. map(.+1) will increment each element of an array of numbers.",
    "filterText": "map",
    "insertText": "map(x)",
    "insertTextFormat": 2,
    "kind": 3,
    "label": "map(x)",
    "sortText": "100_map(x)",
    "textEdit": Object {
      "newText": "map(x)",
      "range": Object {
        "end": Object {
          "character": 41,
          "line": 19,
        },
        "start": Object {
          "character": 38,
          "line": 19,
        },
      },
    },
  },
  Object {
    "detail": "map_values(x) will run that filter for each element, but it will return an object when an object is passed.",
    "filterText": "map",
    "insertText": "map_values(x)",
    "insertTextFormat": 2,
    "kind": 3,
    "label": "map_values(x)",
    "sortText": "100_map_values(x)",
    "textEdit": Object {
      "newText": "map_values(x)",
      "range": Object {
        "end": Object {
          "character": 41,
          "line": 19,
        },
        "start": Object {
          "character": 38,
          "line": 19,
        },
      },
    },
  },
]
`;

exports[`SWF LS YAML code completion Jq completions functionRef arguments completions variables completion cursor after some random word 1`] = `140`;

exports[`SWF LS YAML code completion Jq completions functionRef arguments completions variables completion cursor after some random word 2`] = `
Array [
  Object {
    "detail": "The builtin function length gets the length of various different types of value.",
    "filterText": "length",
    "insertText": "length",
    "insertTextFormat": 2,
    "kind": 3,
    "label": "length",
    "sortText": "100_length",
    "textEdit": Object {
      "newText": "length",
      "range": Object {
        "end": Object {
          "character": 48,
          "line": 19,
        },
        "start": Object {
          "character": 48,
          "line": 19,
        },
      },
    },
  },
  Object {
    "detail": "The builtin function utf8bytelength outputs the number of bytes used to encode a string in UTF-8.",
    "filterText": "utf8bytelength",
    "insertText": "utf8bytelength",
    "insertTextFormat": 2,
    "kind": 3,
    "label": "utf8bytelength",
    "sortText": "100_utf8bytelength",
    "textEdit": Object {
      "newText": "'utf8bytelength'",
      "range": Object {
        "end": Object {
          "character": 48,
          "line": 19,
        },
        "start": Object {
          "character": 48,
          "line": 19,
        },
      },
    },
  },
  Object {
    "detail": "The builtin function keys, when given an object, returns its keys in an array.",
    "filterText": "keys",
    "insertText": "keys",
    "insertTextFormat": 2,
    "kind": 3,
    "label": "keys",
    "sortText": "100_keys",
    "textEdit": Object {
      "newText": "keys",
      "range": Object {
        "end": Object {
          "character": 48,
          "line": 19,
        },
        "start": Object {
          "character": 48,
          "line": 19,
        },
      },
    },
  },
  Object {
    "detail": "The keys_unsorted function is just like keys, but if the input is an object then the keys will not be sorted, instead the keys will roughly be in insertion order.",
    "filterText": "keys_unsorted",
    "insertText": "keys_unsorted",
    "insertTextFormat": 2,
    "kind": 3,
    "label": "keys_unsorted",
    "sortText": "100_keys_unsorted",
    "textEdit": Object {
      "newText": "keys_unsorted",
      "range": Object {
        "end": Object {
          "character": 48,
          "line": 19,
        },
        "start": Object {
          "character": 48,
          "line": 19,
        },
      },
    },
  },
  Object {
    "detail": "The builtin function has returns whether the input object has the given key, or the input array has an element at the given index.",
    "filterText": "has(key)",
    "insertText": "has(key)",
    "insertTextFormat": 2,
    "kind": 3,
    "label": "has(key)",
    "sortText": "100_has(key)",
    "textEdit": Object {
      "newText": "has(key)",
      "range": Object {
        "end": Object {
          "character": 48,
          "line": 19,
        },
        "start": Object {
          "character": 48,
          "line": 19,
        },
      },
    },
  },
]
`;

exports[`SWF LS YAML code completion Jq completions functionRef arguments completions variables completion cursor after the dot(variable):/double quotes 1`] = `4`;

exports[`SWF LS YAML code completion Jq completions functionRef arguments completions variables completion cursor after the dot(variable):/double quotes 2`] = `
Array [
  Object {
    "detail": "string",
    "filterText": "name",
    "insertText": "name",
    "insertTextFormat": 2,
    "kind": 12,
    "label": "name",
    "sortText": "100_name",
    "textEdit": Object {
      "newText": "name",
      "range": Object {
        "end": Object {
          "character": 39,
          "line": 19,
        },
        "start": Object {
          "character": 39,
          "line": 19,
        },
      },
    },
  },
  Object {
    "detail": "1",
    "filterText": "age",
    "insertText": "age",
    "insertTextFormat": 2,
    "kind": 12,
    "label": "age",
    "sortText": "100_age",
    "textEdit": Object {
      "newText": "age",
      "range": Object {
        "end": Object {
          "character": 39,
          "line": 19,
        },
        "start": Object {
          "character": 39,
          "line": 19,
        },
      },
    },
  },
  Object {
    "detail": "string",
    "filterText": "avgLoad",
    "insertText": "avgLoad",
    "insertTextFormat": 2,
    "kind": 12,
    "label": "avgLoad",
    "sortText": "100_avgLoad",
    "textEdit": Object {
      "newText": "avgLoad",
      "range": Object {
        "end": Object {
          "character": 39,
          "line": 19,
        },
        "start": Object {
          "character": 39,
          "line": 19,
        },
      },
    },
  },
  Object {
    "detail": "1",
    "filterText": "numberOfPods",
    "insertText": "numberOfPods",
    "insertTextFormat": 2,
    "kind": 12,
    "label": "numberOfPods",
    "sortText": "100_numberOfPods",
    "textEdit": Object {
      "newText": "numberOfPods",
      "range": Object {
        "end": Object {
          "character": 39,
          "line": 19,
        },
        "start": Object {
          "character": 39,
          "line": 19,
        },
      },
    },
  },
]
`;

exports[`SWF LS YAML code completion Jq completions functionRef arguments completions variables completion cursor after the dot(variable):/single quotes 1`] = `4`;

exports[`SWF LS YAML code completion Jq completions functionRef arguments completions variables completion cursor after the dot(variable):/single quotes 2`] = `
Array [
  Object {
    "detail": "string",
    "filterText": "name",
    "insertText": "name",
    "insertTextFormat": 2,
    "kind": 12,
    "label": "name",
    "sortText": "100_name",
    "textEdit": Object {
      "newText": "name",
      "range": Object {
        "end": Object {
          "character": 39,
          "line": 19,
        },
        "start": Object {
          "character": 39,
          "line": 19,
        },
      },
    },
  },
  Object {
    "detail": "1",
    "filterText": "age",
    "insertText": "age",
    "insertTextFormat": 2,
    "kind": 12,
    "label": "age",
    "sortText": "100_age",
    "textEdit": Object {
      "newText": "age",
      "range": Object {
        "end": Object {
          "character": 39,
          "line": 19,
        },
        "start": Object {
          "character": 39,
          "line": 19,
        },
      },
    },
  },
  Object {
    "detail": "string",
    "filterText": "avgLoad",
    "insertText": "avgLoad",
    "insertTextFormat": 2,
    "kind": 12,
    "label": "avgLoad",
    "sortText": "100_avgLoad",
    "textEdit": Object {
      "newText": "avgLoad",
      "range": Object {
        "end": Object {
          "character": 39,
          "line": 19,
        },
        "start": Object {
          "character": 39,
          "line": 19,
        },
      },
    },
  },
  Object {
    "detail": "1",
    "filterText": "numberOfPods",
    "insertText": "numberOfPods",
    "insertTextFormat": 2,
    "kind": 12,
    "label": "numberOfPods",
    "sortText": "100_numberOfPods",
    "textEdit": Object {
      "newText": "numberOfPods",
      "range": Object {
        "end": Object {
          "character": 39,
          "line": 19,
        },
        "start": Object {
          "character": 39,
          "line": 19,
        },
      },
    },
  },
]
`;

exports[`SWF LS YAML code completion Jq completions functionRef arguments completions variables completion cursor before empty space 1`] = `140`;

exports[`SWF LS YAML code completion Jq completions functionRef arguments completions variables completion cursor before empty space 2`] = `
Array [
  Object {
    "detail": "The builtin function length gets the length of various different types of value.",
    "filterText": "length",
    "insertText": "length",
    "insertTextFormat": 2,
    "kind": 3,
    "label": "length",
    "sortText": "100_length",
    "textEdit": Object {
      "newText": "length",
      "range": Object {
        "end": Object {
          "character": 38,
          "line": 19,
        },
        "start": Object {
          "character": 38,
          "line": 19,
        },
      },
    },
  },
  Object {
    "detail": "The builtin function utf8bytelength outputs the number of bytes used to encode a string in UTF-8.",
    "filterText": "utf8bytelength",
    "insertText": "utf8bytelength",
    "insertTextFormat": 2,
    "kind": 3,
    "label": "utf8bytelength",
    "sortText": "100_utf8bytelength",
    "textEdit": Object {
      "newText": "'utf8bytelength'",
      "range": Object {
        "end": Object {
          "character": 38,
          "line": 19,
        },
        "start": Object {
          "character": 38,
          "line": 19,
        },
      },
    },
  },
  Object {
    "detail": "The builtin function keys, when given an object, returns its keys in an array.",
    "filterText": "keys",
    "insertText": "keys",
    "insertTextFormat": 2,
    "kind": 3,
    "label": "keys",
    "sortText": "100_keys",
    "textEdit": Object {
      "newText": "keys",
      "range": Object {
        "end": Object {
          "character": 38,
          "line": 19,
        },
        "start": Object {
          "character": 38,
          "line": 19,
        },
      },
    },
  },
  Object {
    "detail": "The keys_unsorted function is just like keys, but if the input is an object then the keys will not be sorted, instead the keys will roughly be in insertion order.",
    "filterText": "keys_unsorted",
    "insertText": "keys_unsorted",
    "insertTextFormat": 2,
    "kind": 3,
    "label": "keys_unsorted",
    "sortText": "100_keys_unsorted",
    "textEdit": Object {
      "newText": "keys_unsorted",
      "range": Object {
        "end": Object {
          "character": 38,
          "line": 19,
        },
        "start": Object {
          "character": 38,
          "line": 19,
        },
      },
    },
  },
  Object {
    "detail": "The builtin function has returns whether the input object has the given key, or the input array has an element at the given index.",
    "filterText": "has(key)",
    "insertText": "has(key)",
    "insertTextFormat": 2,
    "kind": 3,
    "label": "has(key)",
    "sortText": "100_has(key)",
    "textEdit": Object {
      "newText": "has(key)",
      "range": Object {
        "end": Object {
          "character": 38,
          "line": 19,
        },
        "start": Object {
          "character": 38,
          "line": 19,
        },
      },
    },
  },
]
`;

exports[`SWF LS YAML code completion Jq completions functionRef arguments completions variables completion cursor before the dot(variable) 1`] = `140`;

exports[`SWF LS YAML code completion Jq completions functionRef arguments completions variables completion cursor before the dot(variable) 2`] = `
Array [
  Object {
    "detail": "The builtin function length gets the length of various different types of value.",
    "filterText": "length",
    "insertText": "length",
    "insertTextFormat": 2,
    "kind": 3,
    "label": "length",
    "sortText": "100_length",
    "textEdit": Object {
      "newText": "length",
      "range": Object {
        "end": Object {
          "character": 38,
          "line": 19,
        },
        "start": Object {
          "character": 38,
          "line": 19,
        },
      },
    },
  },
  Object {
    "detail": "The builtin function utf8bytelength outputs the number of bytes used to encode a string in UTF-8.",
    "filterText": "utf8bytelength",
    "insertText": "utf8bytelength",
    "insertTextFormat": 2,
    "kind": 3,
    "label": "utf8bytelength",
    "sortText": "100_utf8bytelength",
    "textEdit": Object {
      "newText": "'utf8bytelength'",
      "range": Object {
        "end": Object {
          "character": 38,
          "line": 19,
        },
        "start": Object {
          "character": 38,
          "line": 19,
        },
      },
    },
  },
  Object {
    "detail": "The builtin function keys, when given an object, returns its keys in an array.",
    "filterText": "keys",
    "insertText": "keys",
    "insertTextFormat": 2,
    "kind": 3,
    "label": "keys",
    "sortText": "100_keys",
    "textEdit": Object {
      "newText": "keys",
      "range": Object {
        "end": Object {
          "character": 38,
          "line": 19,
        },
        "start": Object {
          "character": 38,
          "line": 19,
        },
      },
    },
  },
  Object {
    "detail": "The keys_unsorted function is just like keys, but if the input is an object then the keys will not be sorted, instead the keys will roughly be in insertion order.",
    "filterText": "keys_unsorted",
    "insertText": "keys_unsorted",
    "insertTextFormat": 2,
    "kind": 3,
    "label": "keys_unsorted",
    "sortText": "100_keys_unsorted",
    "textEdit": Object {
      "newText": "keys_unsorted",
      "range": Object {
        "end": Object {
          "character": 38,
          "line": 19,
        },
        "start": Object {
          "character": 38,
          "line": 19,
        },
      },
    },
  },
  Object {
    "detail": "The builtin function has returns whether the input object has the given key, or the input array has an element at the given index.",
    "filterText": "has(key)",
    "insertText": "has(key)",
    "insertTextFormat": 2,
    "kind": 3,
    "label": "has(key)",
    "sortText": "100_has(key)",
    "textEdit": Object {
      "newText": "has(key)",
      "range": Object {
        "end": Object {
          "character": 38,
          "line": 19,
        },
        "start": Object {
          "character": 38,
          "line": 19,
        },
      },
    },
  },
]
`;

exports[`SWF LS YAML code completion Jq completions functionRef arguments completions variables completion cursor with a space after the  dot(variable) 1`] = `140`;

exports[`SWF LS YAML code completion Jq completions functionRef arguments completions variables completion cursor with a space after the  dot(variable) 2`] = `
Array [
  Object {
    "detail": "The builtin function length gets the length of various different types of value.",
    "filterText": "length",
    "insertText": "length",
    "insertTextFormat": 2,
    "kind": 3,
    "label": "length",
    "sortText": "100_length",
    "textEdit": Object {
      "newText": "length",
      "range": Object {
        "end": Object {
          "character": 40,
          "line": 19,
        },
        "start": Object {
          "character": 40,
          "line": 19,
        },
      },
    },
  },
  Object {
    "detail": "The builtin function utf8bytelength outputs the number of bytes used to encode a string in UTF-8.",
    "filterText": "utf8bytelength",
    "insertText": "utf8bytelength",
    "insertTextFormat": 2,
    "kind": 3,
    "label": "utf8bytelength",
    "sortText": "100_utf8bytelength",
    "textEdit": Object {
      "newText": "'utf8bytelength'",
      "range": Object {
        "end": Object {
          "character": 40,
          "line": 19,
        },
        "start": Object {
          "character": 40,
          "line": 19,
        },
      },
    },
  },
  Object {
    "detail": "The builtin function keys, when given an object, returns its keys in an array.",
    "filterText": "keys",
    "insertText": "keys",
    "insertTextFormat": 2,
    "kind": 3,
    "label": "keys",
    "sortText": "100_keys",
    "textEdit": Object {
      "newText": "keys",
      "range": Object {
        "end": Object {
          "character": 40,
          "line": 19,
        },
        "start": Object {
          "character": 40,
          "line": 19,
        },
      },
    },
  },
  Object {
    "detail": "The keys_unsorted function is just like keys, but if the input is an object then the keys will not be sorted, instead the keys will roughly be in insertion order.",
    "filterText": "keys_unsorted",
    "insertText": "keys_unsorted",
    "insertTextFormat": 2,
    "kind": 3,
    "label": "keys_unsorted",
    "sortText": "100_keys_unsorted",
    "textEdit": Object {
      "newText": "keys_unsorted",
      "range": Object {
        "end": Object {
          "character": 40,
          "line": 19,
        },
        "start": Object {
          "character": 40,
          "line": 19,
        },
      },
    },
  },
  Object {
    "detail": "The builtin function has returns whether the input object has the given key, or the input array has an element at the given index.",
    "filterText": "has(key)",
    "insertText": "has(key)",
    "insertTextFormat": 2,
    "kind": 3,
    "label": "has(key)",
    "sortText": "100_has(key)",
    "textEdit": Object {
      "newText": "has(key)",
      "range": Object {
        "end": Object {
          "character": 40,
          "line": 19,
        },
        "start": Object {
          "character": 40,
          "line": 19,
        },
      },
    },
  },
]
`;

exports[`SWF LS YAML code completion Jq completions functionRef arguments completions variables completion cursor with a value following the  dot(variable) 1`] = `2`;

exports[`SWF LS YAML code completion Jq completions functionRef arguments completions variables completion cursor with a value following the  dot(variable) 2`] = `
Array [
  Object {
    "detail": "1",
    "filterText": "a",
    "insertText": "age",
    "insertTextFormat": 2,
    "kind": 12,
    "label": "age",
    "sortText": "100_age",
    "textEdit": Object {
      "newText": "age",
      "range": Object {
        "end": Object {
          "character": 40,
          "line": 19,
        },
        "start": Object {
          "character": 39,
          "line": 19,
        },
      },
    },
  },
  Object {
    "detail": "string",
    "filterText": "a",
    "insertText": "avgLoad",
    "insertTextFormat": 2,
    "kind": 12,
    "label": "avgLoad",
    "sortText": "100_avgLoad",
    "textEdit": Object {
      "newText": "avgLoad",
      "range": Object {
        "end": Object {
          "character": 40,
          "line": 19,
        },
        "start": Object {
          "character": 39,
          "line": 19,
        },
      },
    },
  },
]
`;

exports[`SWF LS YAML code completion Jq completions functionRef arguments completions variables completion empty object 1`] = `0`;

exports[`SWF LS YAML code completion Jq completions functionRef arguments completions variables completion empty object 2`] = `Array []`;

exports[`SWF LS YAML code completion Jq completions functionRef arguments completions variables completion empty object 3`] = `0`;

exports[`SWF LS YAML code completion Jq completions functionRef arguments completions variables completion empty object 4`] = `Array []`;

exports[`SWF LS YAML code completion Jq completions functionRef arguments completions variables completion empty object 5`] = `0`;

exports[`SWF LS YAML code completion Jq completions functionRef arguments completions variables completion empty object 6`] = `Array []`;

exports[`SWF LS YAML code completion Jq completions functionRef arguments completions variables completion fn: after some value 1`] = `2`;

exports[`SWF LS YAML code completion Jq completions functionRef arguments completions variables completion fn: after some value 2`] = `
Array [
  Object {
    "detail": "Reusable functions(expressions) defined in the functions array",
    "filterText": "expressionFunc1",
    "insertText": "expressionFunc1",
    "insertTextFormat": 2,
    "kind": 3,
    "label": "expressionFunc1",
    "sortText": "100_expressionFunc1",
    "textEdit": Object {
      "newText": "'expressionFunc1'",
      "range": Object {
        "end": Object {
          "character": 50,
          "line": 19,
        },
        "start": Object {
          "character": 50,
          "line": 19,
        },
      },
    },
  },
  Object {
    "detail": "Reusable functions(expressions) defined in the functions array",
    "filterText": "expressionFunc2",
    "insertText": "expressionFunc2",
    "insertTextFormat": 2,
    "kind": 3,
    "label": "expressionFunc2",
    "sortText": "100_expressionFunc2",
    "textEdit": Object {
      "newText": "'expressionFunc2'",
      "range": Object {
        "end": Object {
          "character": 50,
          "line": 19,
        },
        "start": Object {
          "character": 50,
          "line": 19,
        },
      },
    },
  },
]
`;

exports[`SWF LS YAML code completion Jq completions functionRef arguments completions variables completion fn: starting with a 1`] = `0`;

exports[`SWF LS YAML code completion Jq completions functionRef arguments completions variables completion fn: starting with a 2`] = `Array []`;

exports[`SWF LS YAML code completion Jq completions functionRef arguments completions variables completion fn: starting with r 1`] = `0`;

exports[`SWF LS YAML code completion Jq completions functionRef arguments completions variables completion fn: starting with r 2`] = `Array []`;

exports[`SWF LS YAML code completion Jq completions functionRef arguments completions variables completion no value/double quotes 1`] = `140`;

exports[`SWF LS YAML code completion Jq completions functionRef arguments completions variables completion no value/double quotes 2`] = `
Array [
  Object {
    "detail": "The builtin function length gets the length of various different types of value.",
    "filterText": "length",
    "insertText": "length",
    "insertTextFormat": 2,
    "kind": 3,
    "label": "length",
    "sortText": "100_length",
    "textEdit": Object {
      "newText": "length",
      "range": Object {
        "end": Object {
          "character": 38,
          "line": 19,
        },
        "start": Object {
          "character": 38,
          "line": 19,
        },
      },
    },
  },
  Object {
    "detail": "The builtin function utf8bytelength outputs the number of bytes used to encode a string in UTF-8.",
    "filterText": "utf8bytelength",
    "insertText": "utf8bytelength",
    "insertTextFormat": 2,
    "kind": 3,
    "label": "utf8bytelength",
    "sortText": "100_utf8bytelength",
    "textEdit": Object {
      "newText": "'utf8bytelength'",
      "range": Object {
        "end": Object {
          "character": 38,
          "line": 19,
        },
        "start": Object {
          "character": 38,
          "line": 19,
        },
      },
    },
  },
  Object {
    "detail": "The builtin function keys, when given an object, returns its keys in an array.",
    "filterText": "keys",
    "insertText": "keys",
    "insertTextFormat": 2,
    "kind": 3,
    "label": "keys",
    "sortText": "100_keys",
    "textEdit": Object {
      "newText": "keys",
      "range": Object {
        "end": Object {
          "character": 38,
          "line": 19,
        },
        "start": Object {
          "character": 38,
          "line": 19,
        },
      },
    },
  },
  Object {
    "detail": "The keys_unsorted function is just like keys, but if the input is an object then the keys will not be sorted, instead the keys will roughly be in insertion order.",
    "filterText": "keys_unsorted",
    "insertText": "keys_unsorted",
    "insertTextFormat": 2,
    "kind": 3,
    "label": "keys_unsorted",
    "sortText": "100_keys_unsorted",
    "textEdit": Object {
      "newText": "keys_unsorted",
      "range": Object {
        "end": Object {
          "character": 38,
          "line": 19,
        },
        "start": Object {
          "character": 38,
          "line": 19,
        },
      },
    },
  },
  Object {
    "detail": "The builtin function has returns whether the input object has the given key, or the input array has an element at the given index.",
    "filterText": "has(key)",
    "insertText": "has(key)",
    "insertTextFormat": 2,
    "kind": 3,
    "label": "has(key)",
    "sortText": "100_has(key)",
    "textEdit": Object {
      "newText": "has(key)",
      "range": Object {
        "end": Object {
          "character": 38,
          "line": 19,
        },
        "start": Object {
          "character": 38,
          "line": 19,
        },
      },
    },
  },
]
`;

exports[`SWF LS YAML code completion Jq completions functionRef arguments completions variables completion no value/single quotes 1`] = `140`;

exports[`SWF LS YAML code completion Jq completions functionRef arguments completions variables completion no value/single quotes 2`] = `
Array [
  Object {
    "detail": "The builtin function length gets the length of various different types of value.",
    "filterText": "length",
    "insertText": "length",
    "insertTextFormat": 2,
    "kind": 3,
    "label": "length",
    "sortText": "100_length",
    "textEdit": Object {
      "newText": "length",
      "range": Object {
        "end": Object {
          "character": 38,
          "line": 19,
        },
        "start": Object {
          "character": 38,
          "line": 19,
        },
      },
    },
  },
  Object {
    "detail": "The builtin function utf8bytelength outputs the number of bytes used to encode a string in UTF-8.",
    "filterText": "utf8bytelength",
    "insertText": "utf8bytelength",
    "insertTextFormat": 2,
    "kind": 3,
    "label": "utf8bytelength",
    "sortText": "100_utf8bytelength",
    "textEdit": Object {
      "newText": "'utf8bytelength'",
      "range": Object {
        "end": Object {
          "character": 38,
          "line": 19,
        },
        "start": Object {
          "character": 38,
          "line": 19,
        },
      },
    },
  },
  Object {
    "detail": "The builtin function keys, when given an object, returns its keys in an array.",
    "filterText": "keys",
    "insertText": "keys",
    "insertTextFormat": 2,
    "kind": 3,
    "label": "keys",
    "sortText": "100_keys",
    "textEdit": Object {
      "newText": "keys",
      "range": Object {
        "end": Object {
          "character": 38,
          "line": 19,
        },
        "start": Object {
          "character": 38,
          "line": 19,
        },
      },
    },
  },
  Object {
    "detail": "The keys_unsorted function is just like keys, but if the input is an object then the keys will not be sorted, instead the keys will roughly be in insertion order.",
    "filterText": "keys_unsorted",
    "insertText": "keys_unsorted",
    "insertTextFormat": 2,
    "kind": 3,
    "label": "keys_unsorted",
    "sortText": "100_keys_unsorted",
    "textEdit": Object {
      "newText": "keys_unsorted",
      "range": Object {
        "end": Object {
          "character": 38,
          "line": 19,
        },
        "start": Object {
          "character": 38,
          "line": 19,
        },
      },
    },
  },
  Object {
    "detail": "The builtin function has returns whether the input object has the given key, or the input array has an element at the given index.",
    "filterText": "has(key)",
    "insertText": "has(key)",
    "insertTextFormat": 2,
    "kind": 3,
    "label": "has(key)",
    "sortText": "100_has(key)",
    "textEdit": Object {
      "newText": "has(key)",
      "range": Object {
        "end": Object {
          "character": 38,
          "line": 19,
        },
        "start": Object {
          "character": 38,
          "line": 19,
        },
      },
    },
  },
]
`;

exports[`SWF LS YAML code completion Jq completions functionRef arguments completions variables completion space before fn: 1`] = `2`;

exports[`SWF LS YAML code completion Jq completions functionRef arguments completions variables completion space before fn: 2`] = `
Array [
  Object {
    "detail": "Reusable functions(expressions) defined in the functions array",
    "filterText": "expressionFunc1",
    "insertText": "expressionFunc1",
    "insertTextFormat": 2,
    "kind": 3,
    "label": "expressionFunc1",
    "sortText": "100_expressionFunc1",
    "textEdit": Object {
      "newText": "'expressionFunc1'",
      "range": Object {
        "end": Object {
          "character": 42,
          "line": 19,
        },
        "start": Object {
          "character": 42,
          "line": 19,
        },
      },
    },
  },
  Object {
    "detail": "Reusable functions(expressions) defined in the functions array",
    "filterText": "expressionFunc2",
    "insertText": "expressionFunc2",
    "insertTextFormat": 2,
    "kind": 3,
    "label": "expressionFunc2",
    "sortText": "100_expressionFunc2",
    "textEdit": Object {
      "newText": "'expressionFunc2'",
      "range": Object {
        "end": Object {
          "character": 42,
          "line": 19,
        },
        "start": Object {
          "character": 42,
          "line": 19,
        },
      },
    },
  },
]
`;

exports[`SWF LS YAML code completion Jq completions functionRef arguments completions variables completion value fn:/double quotes 1`] = `2`;

exports[`SWF LS YAML code completion Jq completions functionRef arguments completions variables completion value fn:/double quotes 2`] = `
Array [
  Object {
    "detail": "Reusable functions(expressions) defined in the functions array",
    "filterText": "expressionFunc1",
    "insertText": "expressionFunc1",
    "insertTextFormat": 2,
    "kind": 3,
    "label": "expressionFunc1",
    "sortText": "100_expressionFunc1",
    "textEdit": Object {
      "newText": "'expressionFunc1'",
      "range": Object {
        "end": Object {
          "character": 41,
          "line": 19,
        },
        "start": Object {
          "character": 41,
          "line": 19,
        },
      },
    },
  },
  Object {
    "detail": "Reusable functions(expressions) defined in the functions array",
    "filterText": "expressionFunc2",
    "insertText": "expressionFunc2",
    "insertTextFormat": 2,
    "kind": 3,
    "label": "expressionFunc2",
    "sortText": "100_expressionFunc2",
    "textEdit": Object {
      "newText": "'expressionFunc2'",
      "range": Object {
        "end": Object {
          "character": 41,
          "line": 19,
        },
        "start": Object {
          "character": 41,
          "line": 19,
        },
      },
    },
  },
]
`;

exports[`SWF LS YAML code completion Jq completions functionRef arguments completions variables completion value fn:/single quotes 1`] = `2`;

exports[`SWF LS YAML code completion Jq completions functionRef arguments completions variables completion value fn:/single quotes 2`] = `
Array [
  Object {
    "detail": "Reusable functions(expressions) defined in the functions array",
    "filterText": "expressionFunc1",
    "insertText": "expressionFunc1",
    "insertTextFormat": 2,
    "kind": 3,
    "label": "expressionFunc1",
    "sortText": "100_expressionFunc1",
    "textEdit": Object {
      "newText": "'expressionFunc1'",
      "range": Object {
        "end": Object {
          "character": 41,
          "line": 19,
        },
        "start": Object {
          "character": 41,
          "line": 19,
        },
      },
    },
  },
  Object {
    "detail": "Reusable functions(expressions) defined in the functions array",
    "filterText": "expressionFunc2",
    "insertText": "expressionFunc2",
    "insertTextFormat": 2,
    "kind": 3,
    "label": "expressionFunc2",
    "sortText": "100_expressionFunc2",
    "textEdit": Object {
      "newText": "'expressionFunc2'",
      "range": Object {
        "end": Object {
          "character": 41,
          "line": 19,
        },
        "start": Object {
          "character": 41,
          "line": 19,
        },
      },
    },
  },
]
`;

exports[`SWF LS YAML code completion Jq completions operation completions built-in functions completion cursor after a value - auto-complete the word map 1`] = `2`;

exports[`SWF LS YAML code completion Jq completions operation completions built-in functions completion cursor after a value - auto-complete the word map 2`] = `
Array [
  Object {
    "detail": "For any filter x, map(x) will run that filter for each element of the input array, and return the outputs in a new array. map(.+1) will increment each element of an array of numbers.",
    "filterText": "map",
    "insertText": "map(x)",
    "insertTextFormat": 2,
    "kind": 3,
    "label": "map(x)",
    "sortText": "100_map(x)",
    "textEdit": Object {
      "newText": "map(x)",
      "range": Object {
        "end": Object {
          "character": 33,
          "line": 17,
        },
        "start": Object {
          "character": 30,
          "line": 17,
        },
      },
    },
  },
  Object {
    "detail": "map_values(x) will run that filter for each element, but it will return an object when an object is passed.",
    "filterText": "map",
    "insertText": "map_values(x)",
    "insertTextFormat": 2,
    "kind": 3,
    "label": "map_values(x)",
    "sortText": "100_map_values(x)",
    "textEdit": Object {
      "newText": "map_values(x)",
      "range": Object {
        "end": Object {
          "character": 33,
          "line": 17,
        },
        "start": Object {
          "character": 30,
          "line": 17,
        },
      },
    },
  },
]
`;

exports[`SWF LS YAML code completion Jq completions operation completions built-in functions completion cursor after some random word 1`] = `140`;

exports[`SWF LS YAML code completion Jq completions operation completions built-in functions completion cursor after some random word 2`] = `
Array [
  Object {
    "detail": "The builtin function length gets the length of various different types of value.",
    "filterText": "length",
    "insertText": "length",
    "insertTextFormat": 2,
    "kind": 3,
    "label": "length",
    "sortText": "100_length",
    "textEdit": Object {
      "newText": "length",
      "range": Object {
        "end": Object {
          "character": 40,
          "line": 17,
        },
        "start": Object {
          "character": 40,
          "line": 17,
        },
      },
    },
  },
  Object {
    "detail": "The builtin function utf8bytelength outputs the number of bytes used to encode a string in UTF-8.",
    "filterText": "utf8bytelength",
    "insertText": "utf8bytelength",
    "insertTextFormat": 2,
    "kind": 3,
    "label": "utf8bytelength",
    "sortText": "100_utf8bytelength",
    "textEdit": Object {
      "newText": "'utf8bytelength'",
      "range": Object {
        "end": Object {
          "character": 40,
          "line": 17,
        },
        "start": Object {
          "character": 40,
          "line": 17,
        },
      },
    },
  },
  Object {
    "detail": "The builtin function keys, when given an object, returns its keys in an array.",
    "filterText": "keys",
    "insertText": "keys",
    "insertTextFormat": 2,
    "kind": 3,
    "label": "keys",
    "sortText": "100_keys",
    "textEdit": Object {
      "newText": "keys",
      "range": Object {
        "end": Object {
          "character": 40,
          "line": 17,
        },
        "start": Object {
          "character": 40,
          "line": 17,
        },
      },
    },
  },
  Object {
    "detail": "The keys_unsorted function is just like keys, but if the input is an object then the keys will not be sorted, instead the keys will roughly be in insertion order.",
    "filterText": "keys_unsorted",
    "insertText": "keys_unsorted",
    "insertTextFormat": 2,
    "kind": 3,
    "label": "keys_unsorted",
    "sortText": "100_keys_unsorted",
    "textEdit": Object {
      "newText": "keys_unsorted",
      "range": Object {
        "end": Object {
          "character": 40,
          "line": 17,
        },
        "start": Object {
          "character": 40,
          "line": 17,
        },
      },
    },
  },
  Object {
    "detail": "The builtin function has returns whether the input object has the given key, or the input array has an element at the given index.",
    "filterText": "has(key)",
    "insertText": "has(key)",
    "insertTextFormat": 2,
    "kind": 3,
    "label": "has(key)",
    "sortText": "100_has(key)",
    "textEdit": Object {
      "newText": "has(key)",
      "range": Object {
        "end": Object {
          "character": 40,
          "line": 17,
        },
        "start": Object {
          "character": 40,
          "line": 17,
        },
      },
    },
  },
]
`;

exports[`SWF LS YAML code completion Jq completions operation completions built-in functions completion cursor after the dot(variable):/double quotes 1`] = `4`;

exports[`SWF LS YAML code completion Jq completions operation completions built-in functions completion cursor after the dot(variable):/double quotes 2`] = `
Array [
  Object {
    "detail": "string",
    "filterText": "name",
    "insertText": "name",
    "insertTextFormat": 2,
    "kind": 12,
    "label": "name",
    "sortText": "100_name",
    "textEdit": Object {
      "newText": "name",
      "range": Object {
        "end": Object {
          "character": 31,
          "line": 17,
        },
        "start": Object {
          "character": 31,
          "line": 17,
        },
      },
    },
  },
  Object {
    "detail": "1",
    "filterText": "age",
    "insertText": "age",
    "insertTextFormat": 2,
    "kind": 12,
    "label": "age",
    "sortText": "100_age",
    "textEdit": Object {
      "newText": "age",
      "range": Object {
        "end": Object {
          "character": 31,
          "line": 17,
        },
        "start": Object {
          "character": 31,
          "line": 17,
        },
      },
    },
  },
  Object {
    "detail": "string",
    "filterText": "avgLoad",
    "insertText": "avgLoad",
    "insertTextFormat": 2,
    "kind": 12,
    "label": "avgLoad",
    "sortText": "100_avgLoad",
    "textEdit": Object {
      "newText": "avgLoad",
      "range": Object {
        "end": Object {
          "character": 31,
          "line": 17,
        },
        "start": Object {
          "character": 31,
          "line": 17,
        },
      },
    },
  },
  Object {
    "detail": "1",
    "filterText": "numberOfPods",
    "insertText": "numberOfPods",
    "insertTextFormat": 2,
    "kind": 12,
    "label": "numberOfPods",
    "sortText": "100_numberOfPods",
    "textEdit": Object {
      "newText": "numberOfPods",
      "range": Object {
        "end": Object {
          "character": 31,
          "line": 17,
        },
        "start": Object {
          "character": 31,
          "line": 17,
        },
      },
    },
  },
]
`;

exports[`SWF LS YAML code completion Jq completions operation completions built-in functions completion cursor after the dot(variable):/single quotes 1`] = `4`;

exports[`SWF LS YAML code completion Jq completions operation completions built-in functions completion cursor after the dot(variable):/single quotes 2`] = `
Array [
  Object {
    "detail": "string",
    "filterText": "name",
    "insertText": "name",
    "insertTextFormat": 2,
    "kind": 12,
    "label": "name",
    "sortText": "100_name",
    "textEdit": Object {
      "newText": "name",
      "range": Object {
        "end": Object {
          "character": 31,
          "line": 17,
        },
        "start": Object {
          "character": 31,
          "line": 17,
        },
      },
    },
  },
  Object {
    "detail": "1",
    "filterText": "age",
    "insertText": "age",
    "insertTextFormat": 2,
    "kind": 12,
    "label": "age",
    "sortText": "100_age",
    "textEdit": Object {
      "newText": "age",
      "range": Object {
        "end": Object {
          "character": 31,
          "line": 17,
        },
        "start": Object {
          "character": 31,
          "line": 17,
        },
      },
    },
  },
  Object {
    "detail": "string",
    "filterText": "avgLoad",
    "insertText": "avgLoad",
    "insertTextFormat": 2,
    "kind": 12,
    "label": "avgLoad",
    "sortText": "100_avgLoad",
    "textEdit": Object {
      "newText": "avgLoad",
      "range": Object {
        "end": Object {
          "character": 31,
          "line": 17,
        },
        "start": Object {
          "character": 31,
          "line": 17,
        },
      },
    },
  },
  Object {
    "detail": "1",
    "filterText": "numberOfPods",
    "insertText": "numberOfPods",
    "insertTextFormat": 2,
    "kind": 12,
    "label": "numberOfPods",
    "sortText": "100_numberOfPods",
    "textEdit": Object {
      "newText": "numberOfPods",
      "range": Object {
        "end": Object {
          "character": 31,
          "line": 17,
        },
        "start": Object {
          "character": 31,
          "line": 17,
        },
      },
    },
  },
]
`;

exports[`SWF LS YAML code completion Jq completions operation completions built-in functions completion cursor before empty space 1`] = `140`;

exports[`SWF LS YAML code completion Jq completions operation completions built-in functions completion cursor before empty space 2`] = `
Array [
  Object {
    "detail": "The builtin function length gets the length of various different types of value.",
    "filterText": "length",
    "insertText": "length",
    "insertTextFormat": 2,
    "kind": 3,
    "label": "length",
    "sortText": "100_length",
    "textEdit": Object {
      "newText": "length",
      "range": Object {
        "end": Object {
          "character": 30,
          "line": 17,
        },
        "start": Object {
          "character": 30,
          "line": 17,
        },
      },
    },
  },
  Object {
    "detail": "The builtin function utf8bytelength outputs the number of bytes used to encode a string in UTF-8.",
    "filterText": "utf8bytelength",
    "insertText": "utf8bytelength",
    "insertTextFormat": 2,
    "kind": 3,
    "label": "utf8bytelength",
    "sortText": "100_utf8bytelength",
    "textEdit": Object {
      "newText": "'utf8bytelength'",
      "range": Object {
        "end": Object {
          "character": 30,
          "line": 17,
        },
        "start": Object {
          "character": 30,
          "line": 17,
        },
      },
    },
  },
  Object {
    "detail": "The builtin function keys, when given an object, returns its keys in an array.",
    "filterText": "keys",
    "insertText": "keys",
    "insertTextFormat": 2,
    "kind": 3,
    "label": "keys",
    "sortText": "100_keys",
    "textEdit": Object {
      "newText": "keys",
      "range": Object {
        "end": Object {
          "character": 30,
          "line": 17,
        },
        "start": Object {
          "character": 30,
          "line": 17,
        },
      },
    },
  },
  Object {
    "detail": "The keys_unsorted function is just like keys, but if the input is an object then the keys will not be sorted, instead the keys will roughly be in insertion order.",
    "filterText": "keys_unsorted",
    "insertText": "keys_unsorted",
    "insertTextFormat": 2,
    "kind": 3,
    "label": "keys_unsorted",
    "sortText": "100_keys_unsorted",
    "textEdit": Object {
      "newText": "keys_unsorted",
      "range": Object {
        "end": Object {
          "character": 30,
          "line": 17,
        },
        "start": Object {
          "character": 30,
          "line": 17,
        },
      },
    },
  },
  Object {
    "detail": "The builtin function has returns whether the input object has the given key, or the input array has an element at the given index.",
    "filterText": "has(key)",
    "insertText": "has(key)",
    "insertTextFormat": 2,
    "kind": 3,
    "label": "has(key)",
    "sortText": "100_has(key)",
    "textEdit": Object {
      "newText": "has(key)",
      "range": Object {
        "end": Object {
          "character": 30,
          "line": 17,
        },
        "start": Object {
          "character": 30,
          "line": 17,
        },
      },
    },
  },
]
`;

exports[`SWF LS YAML code completion Jq completions operation completions built-in functions completion cursor before the dot(variable) 1`] = `140`;

exports[`SWF LS YAML code completion Jq completions operation completions built-in functions completion cursor before the dot(variable) 2`] = `
Array [
  Object {
    "detail": "The builtin function length gets the length of various different types of value.",
    "filterText": "length",
    "insertText": "length",
    "insertTextFormat": 2,
    "kind": 3,
    "label": "length",
    "sortText": "100_length",
    "textEdit": Object {
      "newText": "length",
      "range": Object {
        "end": Object {
          "character": 30,
          "line": 17,
        },
        "start": Object {
          "character": 30,
          "line": 17,
        },
      },
    },
  },
  Object {
    "detail": "The builtin function utf8bytelength outputs the number of bytes used to encode a string in UTF-8.",
    "filterText": "utf8bytelength",
    "insertText": "utf8bytelength",
    "insertTextFormat": 2,
    "kind": 3,
    "label": "utf8bytelength",
    "sortText": "100_utf8bytelength",
    "textEdit": Object {
      "newText": "'utf8bytelength'",
      "range": Object {
        "end": Object {
          "character": 30,
          "line": 17,
        },
        "start": Object {
          "character": 30,
          "line": 17,
        },
      },
    },
  },
  Object {
    "detail": "The builtin function keys, when given an object, returns its keys in an array.",
    "filterText": "keys",
    "insertText": "keys",
    "insertTextFormat": 2,
    "kind": 3,
    "label": "keys",
    "sortText": "100_keys",
    "textEdit": Object {
      "newText": "keys",
      "range": Object {
        "end": Object {
          "character": 30,
          "line": 17,
        },
        "start": Object {
          "character": 30,
          "line": 17,
        },
      },
    },
  },
  Object {
    "detail": "The keys_unsorted function is just like keys, but if the input is an object then the keys will not be sorted, instead the keys will roughly be in insertion order.",
    "filterText": "keys_unsorted",
    "insertText": "keys_unsorted",
    "insertTextFormat": 2,
    "kind": 3,
    "label": "keys_unsorted",
    "sortText": "100_keys_unsorted",
    "textEdit": Object {
      "newText": "keys_unsorted",
      "range": Object {
        "end": Object {
          "character": 30,
          "line": 17,
        },
        "start": Object {
          "character": 30,
          "line": 17,
        },
      },
    },
  },
  Object {
    "detail": "The builtin function has returns whether the input object has the given key, or the input array has an element at the given index.",
    "filterText": "has(key)",
    "insertText": "has(key)",
    "insertTextFormat": 2,
    "kind": 3,
    "label": "has(key)",
    "sortText": "100_has(key)",
    "textEdit": Object {
      "newText": "has(key)",
      "range": Object {
        "end": Object {
          "character": 30,
          "line": 17,
        },
        "start": Object {
          "character": 30,
          "line": 17,
        },
      },
    },
  },
]
`;

exports[`SWF LS YAML code completion Jq completions operation completions built-in functions completion cursor with a space after the  dot(variable) 1`] = `140`;

exports[`SWF LS YAML code completion Jq completions operation completions built-in functions completion cursor with a space after the  dot(variable) 2`] = `
Array [
  Object {
    "detail": "The builtin function length gets the length of various different types of value.",
    "filterText": "length",
    "insertText": "length",
    "insertTextFormat": 2,
    "kind": 3,
    "label": "length",
    "sortText": "100_length",
    "textEdit": Object {
      "newText": "length",
      "range": Object {
        "end": Object {
          "character": 32,
          "line": 17,
        },
        "start": Object {
          "character": 32,
          "line": 17,
        },
      },
    },
  },
  Object {
    "detail": "The builtin function utf8bytelength outputs the number of bytes used to encode a string in UTF-8.",
    "filterText": "utf8bytelength",
    "insertText": "utf8bytelength",
    "insertTextFormat": 2,
    "kind": 3,
    "label": "utf8bytelength",
    "sortText": "100_utf8bytelength",
    "textEdit": Object {
      "newText": "'utf8bytelength'",
      "range": Object {
        "end": Object {
          "character": 32,
          "line": 17,
        },
        "start": Object {
          "character": 32,
          "line": 17,
        },
      },
    },
  },
  Object {
    "detail": "The builtin function keys, when given an object, returns its keys in an array.",
    "filterText": "keys",
    "insertText": "keys",
    "insertTextFormat": 2,
    "kind": 3,
    "label": "keys",
    "sortText": "100_keys",
    "textEdit": Object {
      "newText": "keys",
      "range": Object {
        "end": Object {
          "character": 32,
          "line": 17,
        },
        "start": Object {
          "character": 32,
          "line": 17,
        },
      },
    },
  },
  Object {
    "detail": "The keys_unsorted function is just like keys, but if the input is an object then the keys will not be sorted, instead the keys will roughly be in insertion order.",
    "filterText": "keys_unsorted",
    "insertText": "keys_unsorted",
    "insertTextFormat": 2,
    "kind": 3,
    "label": "keys_unsorted",
    "sortText": "100_keys_unsorted",
    "textEdit": Object {
      "newText": "keys_unsorted",
      "range": Object {
        "end": Object {
          "character": 32,
          "line": 17,
        },
        "start": Object {
          "character": 32,
          "line": 17,
        },
      },
    },
  },
  Object {
    "detail": "The builtin function has returns whether the input object has the given key, or the input array has an element at the given index.",
    "filterText": "has(key)",
    "insertText": "has(key)",
    "insertTextFormat": 2,
    "kind": 3,
    "label": "has(key)",
    "sortText": "100_has(key)",
    "textEdit": Object {
      "newText": "has(key)",
      "range": Object {
        "end": Object {
          "character": 32,
          "line": 17,
        },
        "start": Object {
          "character": 32,
          "line": 17,
        },
      },
    },
  },
]
`;

exports[`SWF LS YAML code completion Jq completions operation completions built-in functions completion cursor with a value following the  dot(variable) 1`] = `2`;

exports[`SWF LS YAML code completion Jq completions operation completions built-in functions completion cursor with a value following the  dot(variable) 2`] = `
Array [
  Object {
    "detail": "1",
    "filterText": "a",
    "insertText": "age",
    "insertTextFormat": 2,
    "kind": 12,
    "label": "age",
    "sortText": "100_age",
    "textEdit": Object {
      "newText": "age",
      "range": Object {
        "end": Object {
          "character": 32,
          "line": 17,
        },
        "start": Object {
          "character": 31,
          "line": 17,
        },
      },
    },
  },
  Object {
    "detail": "string",
    "filterText": "a",
    "insertText": "avgLoad",
    "insertTextFormat": 2,
    "kind": 12,
    "label": "avgLoad",
    "sortText": "100_avgLoad",
    "textEdit": Object {
      "newText": "avgLoad",
      "range": Object {
        "end": Object {
          "character": 32,
          "line": 17,
        },
        "start": Object {
          "character": 31,
          "line": 17,
        },
      },
    },
  },
]
`;

exports[`SWF LS YAML code completion Jq completions operation completions built-in functions completion empty object 1`] = `0`;

exports[`SWF LS YAML code completion Jq completions operation completions built-in functions completion empty object 2`] = `Array []`;

exports[`SWF LS YAML code completion Jq completions operation completions built-in functions completion empty object 3`] = `0`;

exports[`SWF LS YAML code completion Jq completions operation completions built-in functions completion empty object 4`] = `Array []`;

exports[`SWF LS YAML code completion Jq completions operation completions built-in functions completion empty object 5`] = `0`;

exports[`SWF LS YAML code completion Jq completions operation completions built-in functions completion empty object 6`] = `Array []`;

exports[`SWF LS YAML code completion Jq completions operation completions built-in functions completion fn: after some value 1`] = `3`;

exports[`SWF LS YAML code completion Jq completions operation completions built-in functions completion fn: after some value 2`] = `
Array [
  Object {
    "detail": "Reusable functions(expressions) defined in the functions array",
    "filterText": "expressionFunc1",
    "insertText": "expressionFunc1",
    "insertTextFormat": 2,
    "kind": 3,
    "label": "expressionFunc1",
    "sortText": "100_expressionFunc1",
    "textEdit": Object {
      "newText": "'expressionFunc1'",
      "range": Object {
        "end": Object {
          "character": 42,
          "line": 17,
        },
        "start": Object {
          "character": 42,
          "line": 17,
        },
      },
    },
  },
  Object {
    "detail": "Reusable functions(expressions) defined in the functions array",
    "filterText": "expressionFunc2",
    "insertText": "expressionFunc2",
    "insertTextFormat": 2,
    "kind": 3,
    "label": "expressionFunc2",
    "sortText": "100_expressionFunc2",
    "textEdit": Object {
      "newText": "'expressionFunc2'",
      "range": Object {
        "end": Object {
          "character": 42,
          "line": 17,
        },
        "start": Object {
          "character": 42,
          "line": 17,
        },
      },
    },
  },
  Object {
    "detail": "Reusable functions(expressions) defined in the functions array",
    "filterText": "expressionFunc3",
    "insertText": "expressionFunc3",
    "insertTextFormat": 2,
    "kind": 3,
    "label": "expressionFunc3",
    "sortText": "100_expressionFunc3",
    "textEdit": Object {
      "newText": "'expressionFunc3'",
      "range": Object {
        "end": Object {
          "character": 42,
          "line": 17,
        },
        "start": Object {
          "character": 42,
          "line": 17,
        },
      },
    },
  },
]
`;

exports[`SWF LS YAML code completion Jq completions operation completions built-in functions completion fn: starting with a 1`] = `0`;

exports[`SWF LS YAML code completion Jq completions operation completions built-in functions completion fn: starting with a 2`] = `Array []`;

exports[`SWF LS YAML code completion Jq completions operation completions built-in functions completion fn: starting with r 1`] = `0`;

exports[`SWF LS YAML code completion Jq completions operation completions built-in functions completion fn: starting with r 2`] = `Array []`;

exports[`SWF LS YAML code completion Jq completions operation completions built-in functions completion no value/double quotes 1`] = `140`;

exports[`SWF LS YAML code completion Jq completions operation completions built-in functions completion no value/double quotes 2`] = `
Array [
  Object {
    "detail": "The builtin function length gets the length of various different types of value.",
    "filterText": "length",
    "insertText": "length",
    "insertTextFormat": 2,
    "kind": 3,
    "label": "length",
    "sortText": "100_length",
    "textEdit": Object {
      "newText": "length",
      "range": Object {
        "end": Object {
          "character": 30,
          "line": 17,
        },
        "start": Object {
          "character": 30,
          "line": 17,
        },
      },
    },
  },
  Object {
    "detail": "The builtin function utf8bytelength outputs the number of bytes used to encode a string in UTF-8.",
    "filterText": "utf8bytelength",
    "insertText": "utf8bytelength",
    "insertTextFormat": 2,
    "kind": 3,
    "label": "utf8bytelength",
    "sortText": "100_utf8bytelength",
    "textEdit": Object {
      "newText": "'utf8bytelength'",
      "range": Object {
        "end": Object {
          "character": 30,
          "line": 17,
        },
        "start": Object {
          "character": 30,
          "line": 17,
        },
      },
    },
  },
  Object {
    "detail": "The builtin function keys, when given an object, returns its keys in an array.",
    "filterText": "keys",
    "insertText": "keys",
    "insertTextFormat": 2,
    "kind": 3,
    "label": "keys",
    "sortText": "100_keys",
    "textEdit": Object {
      "newText": "keys",
      "range": Object {
        "end": Object {
          "character": 30,
          "line": 17,
        },
        "start": Object {
          "character": 30,
          "line": 17,
        },
      },
    },
  },
  Object {
    "detail": "The keys_unsorted function is just like keys, but if the input is an object then the keys will not be sorted, instead the keys will roughly be in insertion order.",
    "filterText": "keys_unsorted",
    "insertText": "keys_unsorted",
    "insertTextFormat": 2,
    "kind": 3,
    "label": "keys_unsorted",
    "sortText": "100_keys_unsorted",
    "textEdit": Object {
      "newText": "keys_unsorted",
      "range": Object {
        "end": Object {
          "character": 30,
          "line": 17,
        },
        "start": Object {
          "character": 30,
          "line": 17,
        },
      },
    },
  },
  Object {
    "detail": "The builtin function has returns whether the input object has the given key, or the input array has an element at the given index.",
    "filterText": "has(key)",
    "insertText": "has(key)",
    "insertTextFormat": 2,
    "kind": 3,
    "label": "has(key)",
    "sortText": "100_has(key)",
    "textEdit": Object {
      "newText": "has(key)",
      "range": Object {
        "end": Object {
          "character": 30,
          "line": 17,
        },
        "start": Object {
          "character": 30,
          "line": 17,
        },
      },
    },
  },
]
`;

exports[`SWF LS YAML code completion Jq completions operation completions built-in functions completion no value/single quotes 1`] = `140`;

exports[`SWF LS YAML code completion Jq completions operation completions built-in functions completion no value/single quotes 2`] = `
Array [
  Object {
    "detail": "The builtin function length gets the length of various different types of value.",
    "filterText": "length",
    "insertText": "length",
    "insertTextFormat": 2,
    "kind": 3,
    "label": "length",
    "sortText": "100_length",
    "textEdit": Object {
      "newText": "length",
      "range": Object {
        "end": Object {
          "character": 30,
          "line": 17,
        },
        "start": Object {
          "character": 30,
          "line": 17,
        },
      },
    },
  },
  Object {
    "detail": "The builtin function utf8bytelength outputs the number of bytes used to encode a string in UTF-8.",
    "filterText": "utf8bytelength",
    "insertText": "utf8bytelength",
    "insertTextFormat": 2,
    "kind": 3,
    "label": "utf8bytelength",
    "sortText": "100_utf8bytelength",
    "textEdit": Object {
      "newText": "'utf8bytelength'",
      "range": Object {
        "end": Object {
          "character": 30,
          "line": 17,
        },
        "start": Object {
          "character": 30,
          "line": 17,
        },
      },
    },
  },
  Object {
    "detail": "The builtin function keys, when given an object, returns its keys in an array.",
    "filterText": "keys",
    "insertText": "keys",
    "insertTextFormat": 2,
    "kind": 3,
    "label": "keys",
    "sortText": "100_keys",
    "textEdit": Object {
      "newText": "keys",
      "range": Object {
        "end": Object {
          "character": 30,
          "line": 17,
        },
        "start": Object {
          "character": 30,
          "line": 17,
        },
      },
    },
  },
  Object {
    "detail": "The keys_unsorted function is just like keys, but if the input is an object then the keys will not be sorted, instead the keys will roughly be in insertion order.",
    "filterText": "keys_unsorted",
    "insertText": "keys_unsorted",
    "insertTextFormat": 2,
    "kind": 3,
    "label": "keys_unsorted",
    "sortText": "100_keys_unsorted",
    "textEdit": Object {
      "newText": "keys_unsorted",
      "range": Object {
        "end": Object {
          "character": 30,
          "line": 17,
        },
        "start": Object {
          "character": 30,
          "line": 17,
        },
      },
    },
  },
  Object {
    "detail": "The builtin function has returns whether the input object has the given key, or the input array has an element at the given index.",
    "filterText": "has(key)",
    "insertText": "has(key)",
    "insertTextFormat": 2,
    "kind": 3,
    "label": "has(key)",
    "sortText": "100_has(key)",
    "textEdit": Object {
      "newText": "has(key)",
      "range": Object {
        "end": Object {
          "character": 30,
          "line": 17,
        },
        "start": Object {
          "character": 30,
          "line": 17,
        },
      },
    },
  },
]
`;

exports[`SWF LS YAML code completion Jq completions operation completions built-in functions completion space before fn: 1`] = `3`;

exports[`SWF LS YAML code completion Jq completions operation completions built-in functions completion space before fn: 2`] = `
Array [
  Object {
    "detail": "Reusable functions(expressions) defined in the functions array",
    "filterText": "expressionFunc1",
    "insertText": "expressionFunc1",
    "insertTextFormat": 2,
    "kind": 3,
    "label": "expressionFunc1",
    "sortText": "100_expressionFunc1",
    "textEdit": Object {
      "newText": "'expressionFunc1'",
      "range": Object {
        "end": Object {
          "character": 34,
          "line": 17,
        },
        "start": Object {
          "character": 34,
          "line": 17,
        },
      },
    },
  },
  Object {
    "detail": "Reusable functions(expressions) defined in the functions array",
    "filterText": "expressionFunc2",
    "insertText": "expressionFunc2",
    "insertTextFormat": 2,
    "kind": 3,
    "label": "expressionFunc2",
    "sortText": "100_expressionFunc2",
    "textEdit": Object {
      "newText": "'expressionFunc2'",
      "range": Object {
        "end": Object {
          "character": 34,
          "line": 17,
        },
        "start": Object {
          "character": 34,
          "line": 17,
        },
      },
    },
  },
  Object {
    "detail": "Reusable functions(expressions) defined in the functions array",
    "filterText": "expressionFunc3",
    "insertText": "expressionFunc3",
    "insertTextFormat": 2,
    "kind": 3,
    "label": "expressionFunc3",
    "sortText": "100_expressionFunc3",
    "textEdit": Object {
      "newText": "'expressionFunc3'",
      "range": Object {
        "end": Object {
          "character": 34,
          "line": 17,
        },
        "start": Object {
          "character": 34,
          "line": 17,
        },
      },
    },
  },
]
`;

exports[`SWF LS YAML code completion Jq completions operation completions built-in functions completion value fn:/double quotes 1`] = `3`;

exports[`SWF LS YAML code completion Jq completions operation completions built-in functions completion value fn:/double quotes 2`] = `
Array [
  Object {
    "detail": "Reusable functions(expressions) defined in the functions array",
    "filterText": "expressionFunc1",
    "insertText": "expressionFunc1",
    "insertTextFormat": 2,
    "kind": 3,
    "label": "expressionFunc1",
    "sortText": "100_expressionFunc1",
    "textEdit": Object {
      "newText": "'expressionFunc1'",
      "range": Object {
        "end": Object {
          "character": 33,
          "line": 17,
        },
        "start": Object {
          "character": 33,
          "line": 17,
        },
      },
    },
  },
  Object {
    "detail": "Reusable functions(expressions) defined in the functions array",
    "filterText": "expressionFunc2",
    "insertText": "expressionFunc2",
    "insertTextFormat": 2,
    "kind": 3,
    "label": "expressionFunc2",
    "sortText": "100_expressionFunc2",
    "textEdit": Object {
      "newText": "'expressionFunc2'",
      "range": Object {
        "end": Object {
          "character": 33,
          "line": 17,
        },
        "start": Object {
          "character": 33,
          "line": 17,
        },
      },
    },
  },
  Object {
    "detail": "Reusable functions(expressions) defined in the functions array",
    "filterText": "expressionFunc3",
    "insertText": "expressionFunc3",
    "insertTextFormat": 2,
    "kind": 3,
    "label": "expressionFunc3",
    "sortText": "100_expressionFunc3",
    "textEdit": Object {
      "newText": "'expressionFunc3'",
      "range": Object {
        "end": Object {
          "character": 33,
          "line": 17,
        },
        "start": Object {
          "character": 33,
          "line": 17,
        },
      },
    },
  },
]
`;

exports[`SWF LS YAML code completion Jq completions operation completions built-in functions completion value fn:/single quotes 1`] = `3`;

exports[`SWF LS YAML code completion Jq completions operation completions built-in functions completion value fn:/single quotes 2`] = `
Array [
  Object {
    "detail": "Reusable functions(expressions) defined in the functions array",
    "filterText": "expressionFunc1",
    "insertText": "expressionFunc1",
    "insertTextFormat": 2,
    "kind": 3,
    "label": "expressionFunc1",
    "sortText": "100_expressionFunc1",
    "textEdit": Object {
      "newText": "'expressionFunc1'",
      "range": Object {
        "end": Object {
          "character": 33,
          "line": 17,
        },
        "start": Object {
          "character": 33,
          "line": 17,
        },
      },
    },
  },
  Object {
    "detail": "Reusable functions(expressions) defined in the functions array",
    "filterText": "expressionFunc2",
    "insertText": "expressionFunc2",
    "insertTextFormat": 2,
    "kind": 3,
    "label": "expressionFunc2",
    "sortText": "100_expressionFunc2",
    "textEdit": Object {
      "newText": "'expressionFunc2'",
      "range": Object {
        "end": Object {
          "character": 33,
          "line": 17,
        },
        "start": Object {
          "character": 33,
          "line": 17,
        },
      },
    },
  },
  Object {
    "detail": "Reusable functions(expressions) defined in the functions array",
    "filterText": "expressionFunc3",
    "insertText": "expressionFunc3",
    "insertTextFormat": 2,
    "kind": 3,
    "label": "expressionFunc3",
    "sortText": "100_expressionFunc3",
    "textEdit": Object {
      "newText": "'expressionFunc3'",
      "range": Object {
        "end": Object {
          "character": 33,
          "line": 17,
        },
        "start": Object {
          "character": 33,
          "line": 17,
        },
      },
    },
  },
]
`;

exports[`SWF LS YAML code completion Jq completions operation completions variables completion cursor after a value - auto-complete the word map 1`] = `2`;

exports[`SWF LS YAML code completion Jq completions operation completions variables completion cursor after a value - auto-complete the word map 2`] = `
Array [
  Object {
    "detail": "For any filter x, map(x) will run that filter for each element of the input array, and return the outputs in a new array. map(.+1) will increment each element of an array of numbers.",
    "filterText": "map",
    "insertText": "map(x)",
    "insertTextFormat": 2,
    "kind": 3,
    "label": "map(x)",
    "sortText": "100_map(x)",
    "textEdit": Object {
      "newText": "map(x)",
      "range": Object {
        "end": Object {
          "character": 33,
          "line": 17,
        },
        "start": Object {
          "character": 30,
          "line": 17,
        },
      },
    },
  },
  Object {
    "detail": "map_values(x) will run that filter for each element, but it will return an object when an object is passed.",
    "filterText": "map",
    "insertText": "map_values(x)",
    "insertTextFormat": 2,
    "kind": 3,
    "label": "map_values(x)",
    "sortText": "100_map_values(x)",
    "textEdit": Object {
      "newText": "map_values(x)",
      "range": Object {
        "end": Object {
          "character": 33,
          "line": 17,
        },
        "start": Object {
          "character": 30,
          "line": 17,
        },
      },
    },
  },
]
`;

exports[`SWF LS YAML code completion Jq completions operation completions variables completion cursor after some random word 1`] = `140`;

exports[`SWF LS YAML code completion Jq completions operation completions variables completion cursor after some random word 2`] = `
Array [
  Object {
    "detail": "The builtin function length gets the length of various different types of value.",
    "filterText": "length",
    "insertText": "length",
    "insertTextFormat": 2,
    "kind": 3,
    "label": "length",
    "sortText": "100_length",
    "textEdit": Object {
      "newText": "length",
      "range": Object {
        "end": Object {
          "character": 40,
          "line": 17,
        },
        "start": Object {
          "character": 40,
          "line": 17,
        },
      },
    },
  },
  Object {
    "detail": "The builtin function utf8bytelength outputs the number of bytes used to encode a string in UTF-8.",
    "filterText": "utf8bytelength",
    "insertText": "utf8bytelength",
    "insertTextFormat": 2,
    "kind": 3,
    "label": "utf8bytelength",
    "sortText": "100_utf8bytelength",
    "textEdit": Object {
      "newText": "'utf8bytelength'",
      "range": Object {
        "end": Object {
          "character": 40,
          "line": 17,
        },
        "start": Object {
          "character": 40,
          "line": 17,
        },
      },
    },
  },
  Object {
    "detail": "The builtin function keys, when given an object, returns its keys in an array.",
    "filterText": "keys",
    "insertText": "keys",
    "insertTextFormat": 2,
    "kind": 3,
    "label": "keys",
    "sortText": "100_keys",
    "textEdit": Object {
      "newText": "keys",
      "range": Object {
        "end": Object {
          "character": 40,
          "line": 17,
        },
        "start": Object {
          "character": 40,
          "line": 17,
        },
      },
    },
  },
  Object {
    "detail": "The keys_unsorted function is just like keys, but if the input is an object then the keys will not be sorted, instead the keys will roughly be in insertion order.",
    "filterText": "keys_unsorted",
    "insertText": "keys_unsorted",
    "insertTextFormat": 2,
    "kind": 3,
    "label": "keys_unsorted",
    "sortText": "100_keys_unsorted",
    "textEdit": Object {
      "newText": "keys_unsorted",
      "range": Object {
        "end": Object {
          "character": 40,
          "line": 17,
        },
        "start": Object {
          "character": 40,
          "line": 17,
        },
      },
    },
  },
  Object {
    "detail": "The builtin function has returns whether the input object has the given key, or the input array has an element at the given index.",
    "filterText": "has(key)",
    "insertText": "has(key)",
    "insertTextFormat": 2,
    "kind": 3,
    "label": "has(key)",
    "sortText": "100_has(key)",
    "textEdit": Object {
      "newText": "has(key)",
      "range": Object {
        "end": Object {
          "character": 40,
          "line": 17,
        },
        "start": Object {
          "character": 40,
          "line": 17,
        },
      },
    },
  },
]
`;

exports[`SWF LS YAML code completion Jq completions operation completions variables completion cursor after the dot(variable):/double quotes 1`] = `4`;

exports[`SWF LS YAML code completion Jq completions operation completions variables completion cursor after the dot(variable):/double quotes 2`] = `
Array [
  Object {
    "detail": "string",
    "filterText": "name",
    "insertText": "name",
    "insertTextFormat": 2,
    "kind": 12,
    "label": "name",
    "sortText": "100_name",
    "textEdit": Object {
      "newText": "name",
      "range": Object {
        "end": Object {
          "character": 31,
          "line": 17,
        },
        "start": Object {
          "character": 31,
          "line": 17,
        },
      },
    },
  },
  Object {
    "detail": "1",
    "filterText": "age",
    "insertText": "age",
    "insertTextFormat": 2,
    "kind": 12,
    "label": "age",
    "sortText": "100_age",
    "textEdit": Object {
      "newText": "age",
      "range": Object {
        "end": Object {
          "character": 31,
          "line": 17,
        },
        "start": Object {
          "character": 31,
          "line": 17,
        },
      },
    },
  },
  Object {
    "detail": "string",
    "filterText": "avgLoad",
    "insertText": "avgLoad",
    "insertTextFormat": 2,
    "kind": 12,
    "label": "avgLoad",
    "sortText": "100_avgLoad",
    "textEdit": Object {
      "newText": "avgLoad",
      "range": Object {
        "end": Object {
          "character": 31,
          "line": 17,
        },
        "start": Object {
          "character": 31,
          "line": 17,
        },
      },
    },
  },
  Object {
    "detail": "1",
    "filterText": "numberOfPods",
    "insertText": "numberOfPods",
    "insertTextFormat": 2,
    "kind": 12,
    "label": "numberOfPods",
    "sortText": "100_numberOfPods",
    "textEdit": Object {
      "newText": "numberOfPods",
      "range": Object {
        "end": Object {
          "character": 31,
          "line": 17,
        },
        "start": Object {
          "character": 31,
          "line": 17,
        },
      },
    },
  },
]
`;

exports[`SWF LS YAML code completion Jq completions operation completions variables completion cursor after the dot(variable):/single quotes 1`] = `4`;

exports[`SWF LS YAML code completion Jq completions operation completions variables completion cursor after the dot(variable):/single quotes 2`] = `
Array [
  Object {
    "detail": "string",
    "filterText": "name",
    "insertText": "name",
    "insertTextFormat": 2,
    "kind": 12,
    "label": "name",
    "sortText": "100_name",
    "textEdit": Object {
      "newText": "name",
      "range": Object {
        "end": Object {
          "character": 31,
          "line": 17,
        },
        "start": Object {
          "character": 31,
          "line": 17,
        },
      },
    },
  },
  Object {
    "detail": "1",
    "filterText": "age",
    "insertText": "age",
    "insertTextFormat": 2,
    "kind": 12,
    "label": "age",
    "sortText": "100_age",
    "textEdit": Object {
      "newText": "age",
      "range": Object {
        "end": Object {
          "character": 31,
          "line": 17,
        },
        "start": Object {
          "character": 31,
          "line": 17,
        },
      },
    },
  },
  Object {
    "detail": "string",
    "filterText": "avgLoad",
    "insertText": "avgLoad",
    "insertTextFormat": 2,
    "kind": 12,
    "label": "avgLoad",
    "sortText": "100_avgLoad",
    "textEdit": Object {
      "newText": "avgLoad",
      "range": Object {
        "end": Object {
          "character": 31,
          "line": 17,
        },
        "start": Object {
          "character": 31,
          "line": 17,
        },
      },
    },
  },
  Object {
    "detail": "1",
    "filterText": "numberOfPods",
    "insertText": "numberOfPods",
    "insertTextFormat": 2,
    "kind": 12,
    "label": "numberOfPods",
    "sortText": "100_numberOfPods",
    "textEdit": Object {
      "newText": "numberOfPods",
      "range": Object {
        "end": Object {
          "character": 31,
          "line": 17,
        },
        "start": Object {
          "character": 31,
          "line": 17,
        },
      },
    },
  },
]
`;

exports[`SWF LS YAML code completion Jq completions operation completions variables completion cursor before empty space 1`] = `140`;

exports[`SWF LS YAML code completion Jq completions operation completions variables completion cursor before empty space 2`] = `
Array [
  Object {
    "detail": "The builtin function length gets the length of various different types of value.",
    "filterText": "length",
    "insertText": "length",
    "insertTextFormat": 2,
    "kind": 3,
    "label": "length",
    "sortText": "100_length",
    "textEdit": Object {
      "newText": "length",
      "range": Object {
        "end": Object {
          "character": 30,
          "line": 17,
        },
        "start": Object {
          "character": 30,
          "line": 17,
        },
      },
    },
  },
  Object {
    "detail": "The builtin function utf8bytelength outputs the number of bytes used to encode a string in UTF-8.",
    "filterText": "utf8bytelength",
    "insertText": "utf8bytelength",
    "insertTextFormat": 2,
    "kind": 3,
    "label": "utf8bytelength",
    "sortText": "100_utf8bytelength",
    "textEdit": Object {
      "newText": "'utf8bytelength'",
      "range": Object {
        "end": Object {
          "character": 30,
          "line": 17,
        },
        "start": Object {
          "character": 30,
          "line": 17,
        },
      },
    },
  },
  Object {
    "detail": "The builtin function keys, when given an object, returns its keys in an array.",
    "filterText": "keys",
    "insertText": "keys",
    "insertTextFormat": 2,
    "kind": 3,
    "label": "keys",
    "sortText": "100_keys",
    "textEdit": Object {
      "newText": "keys",
      "range": Object {
        "end": Object {
          "character": 30,
          "line": 17,
        },
        "start": Object {
          "character": 30,
          "line": 17,
        },
      },
    },
  },
  Object {
    "detail": "The keys_unsorted function is just like keys, but if the input is an object then the keys will not be sorted, instead the keys will roughly be in insertion order.",
    "filterText": "keys_unsorted",
    "insertText": "keys_unsorted",
    "insertTextFormat": 2,
    "kind": 3,
    "label": "keys_unsorted",
    "sortText": "100_keys_unsorted",
    "textEdit": Object {
      "newText": "keys_unsorted",
      "range": Object {
        "end": Object {
          "character": 30,
          "line": 17,
        },
        "start": Object {
          "character": 30,
          "line": 17,
        },
      },
    },
  },
  Object {
    "detail": "The builtin function has returns whether the input object has the given key, or the input array has an element at the given index.",
    "filterText": "has(key)",
    "insertText": "has(key)",
    "insertTextFormat": 2,
    "kind": 3,
    "label": "has(key)",
    "sortText": "100_has(key)",
    "textEdit": Object {
      "newText": "has(key)",
      "range": Object {
        "end": Object {
          "character": 30,
          "line": 17,
        },
        "start": Object {
          "character": 30,
          "line": 17,
        },
      },
    },
  },
]
`;

exports[`SWF LS YAML code completion Jq completions operation completions variables completion cursor before the dot(variable) 1`] = `140`;

exports[`SWF LS YAML code completion Jq completions operation completions variables completion cursor before the dot(variable) 2`] = `
Array [
  Object {
    "detail": "The builtin function length gets the length of various different types of value.",
    "filterText": "length",
    "insertText": "length",
    "insertTextFormat": 2,
    "kind": 3,
    "label": "length",
    "sortText": "100_length",
    "textEdit": Object {
      "newText": "length",
      "range": Object {
        "end": Object {
          "character": 30,
          "line": 17,
        },
        "start": Object {
          "character": 30,
          "line": 17,
        },
      },
    },
  },
  Object {
    "detail": "The builtin function utf8bytelength outputs the number of bytes used to encode a string in UTF-8.",
    "filterText": "utf8bytelength",
    "insertText": "utf8bytelength",
    "insertTextFormat": 2,
    "kind": 3,
    "label": "utf8bytelength",
    "sortText": "100_utf8bytelength",
    "textEdit": Object {
      "newText": "'utf8bytelength'",
      "range": Object {
        "end": Object {
          "character": 30,
          "line": 17,
        },
        "start": Object {
          "character": 30,
          "line": 17,
        },
      },
    },
  },
  Object {
    "detail": "The builtin function keys, when given an object, returns its keys in an array.",
    "filterText": "keys",
    "insertText": "keys",
    "insertTextFormat": 2,
    "kind": 3,
    "label": "keys",
    "sortText": "100_keys",
    "textEdit": Object {
      "newText": "keys",
      "range": Object {
        "end": Object {
          "character": 30,
          "line": 17,
        },
        "start": Object {
          "character": 30,
          "line": 17,
        },
      },
    },
  },
  Object {
    "detail": "The keys_unsorted function is just like keys, but if the input is an object then the keys will not be sorted, instead the keys will roughly be in insertion order.",
    "filterText": "keys_unsorted",
    "insertText": "keys_unsorted",
    "insertTextFormat": 2,
    "kind": 3,
    "label": "keys_unsorted",
    "sortText": "100_keys_unsorted",
    "textEdit": Object {
      "newText": "keys_unsorted",
      "range": Object {
        "end": Object {
          "character": 30,
          "line": 17,
        },
        "start": Object {
          "character": 30,
          "line": 17,
        },
      },
    },
  },
  Object {
    "detail": "The builtin function has returns whether the input object has the given key, or the input array has an element at the given index.",
    "filterText": "has(key)",
    "insertText": "has(key)",
    "insertTextFormat": 2,
    "kind": 3,
    "label": "has(key)",
    "sortText": "100_has(key)",
    "textEdit": Object {
      "newText": "has(key)",
      "range": Object {
        "end": Object {
          "character": 30,
          "line": 17,
        },
        "start": Object {
          "character": 30,
          "line": 17,
        },
      },
    },
  },
]
`;

exports[`SWF LS YAML code completion Jq completions operation completions variables completion cursor with a space after the  dot(variable) 1`] = `140`;

exports[`SWF LS YAML code completion Jq completions operation completions variables completion cursor with a space after the  dot(variable) 2`] = `
Array [
  Object {
    "detail": "The builtin function length gets the length of various different types of value.",
    "filterText": "length",
    "insertText": "length",
    "insertTextFormat": 2,
    "kind": 3,
    "label": "length",
    "sortText": "100_length",
    "textEdit": Object {
      "newText": "length",
      "range": Object {
        "end": Object {
          "character": 32,
          "line": 17,
        },
        "start": Object {
          "character": 32,
          "line": 17,
        },
      },
    },
  },
  Object {
    "detail": "The builtin function utf8bytelength outputs the number of bytes used to encode a string in UTF-8.",
    "filterText": "utf8bytelength",
    "insertText": "utf8bytelength",
    "insertTextFormat": 2,
    "kind": 3,
    "label": "utf8bytelength",
    "sortText": "100_utf8bytelength",
    "textEdit": Object {
      "newText": "'utf8bytelength'",
      "range": Object {
        "end": Object {
          "character": 32,
          "line": 17,
        },
        "start": Object {
          "character": 32,
          "line": 17,
        },
      },
    },
  },
  Object {
    "detail": "The builtin function keys, when given an object, returns its keys in an array.",
    "filterText": "keys",
    "insertText": "keys",
    "insertTextFormat": 2,
    "kind": 3,
    "label": "keys",
    "sortText": "100_keys",
    "textEdit": Object {
      "newText": "keys",
      "range": Object {
        "end": Object {
          "character": 32,
          "line": 17,
        },
        "start": Object {
          "character": 32,
          "line": 17,
        },
      },
    },
  },
  Object {
    "detail": "The keys_unsorted function is just like keys, but if the input is an object then the keys will not be sorted, instead the keys will roughly be in insertion order.",
    "filterText": "keys_unsorted",
    "insertText": "keys_unsorted",
    "insertTextFormat": 2,
    "kind": 3,
    "label": "keys_unsorted",
    "sortText": "100_keys_unsorted",
    "textEdit": Object {
      "newText": "keys_unsorted",
      "range": Object {
        "end": Object {
          "character": 32,
          "line": 17,
        },
        "start": Object {
          "character": 32,
          "line": 17,
        },
      },
    },
  },
  Object {
    "detail": "The builtin function has returns whether the input object has the given key, or the input array has an element at the given index.",
    "filterText": "has(key)",
    "insertText": "has(key)",
    "insertTextFormat": 2,
    "kind": 3,
    "label": "has(key)",
    "sortText": "100_has(key)",
    "textEdit": Object {
      "newText": "has(key)",
      "range": Object {
        "end": Object {
          "character": 32,
          "line": 17,
        },
        "start": Object {
          "character": 32,
          "line": 17,
        },
      },
    },
  },
]
`;

exports[`SWF LS YAML code completion Jq completions operation completions variables completion cursor with a value following the  dot(variable) 1`] = `2`;

exports[`SWF LS YAML code completion Jq completions operation completions variables completion cursor with a value following the  dot(variable) 2`] = `
Array [
  Object {
    "detail": "1",
    "filterText": "a",
    "insertText": "age",
    "insertTextFormat": 2,
    "kind": 12,
    "label": "age",
    "sortText": "100_age",
    "textEdit": Object {
      "newText": "age",
      "range": Object {
        "end": Object {
          "character": 32,
          "line": 17,
        },
        "start": Object {
          "character": 31,
          "line": 17,
        },
      },
    },
  },
  Object {
    "detail": "string",
    "filterText": "a",
    "insertText": "avgLoad",
    "insertTextFormat": 2,
    "kind": 12,
    "label": "avgLoad",
    "sortText": "100_avgLoad",
    "textEdit": Object {
      "newText": "avgLoad",
      "range": Object {
        "end": Object {
          "character": 32,
          "line": 17,
        },
        "start": Object {
          "character": 31,
          "line": 17,
        },
      },
    },
  },
]
`;

exports[`SWF LS YAML code completion Jq completions operation completions variables completion empty object 1`] = `0`;

exports[`SWF LS YAML code completion Jq completions operation completions variables completion empty object 2`] = `Array []`;

exports[`SWF LS YAML code completion Jq completions operation completions variables completion empty object 3`] = `0`;

exports[`SWF LS YAML code completion Jq completions operation completions variables completion empty object 4`] = `Array []`;

exports[`SWF LS YAML code completion Jq completions operation completions variables completion empty object 5`] = `0`;

exports[`SWF LS YAML code completion Jq completions operation completions variables completion empty object 6`] = `Array []`;

exports[`SWF LS YAML code completion Jq completions operation completions variables completion fn: after some value 1`] = `3`;

exports[`SWF LS YAML code completion Jq completions operation completions variables completion fn: after some value 2`] = `
Array [
  Object {
    "detail": "Reusable functions(expressions) defined in the functions array",
    "filterText": "expressionFunc1",
    "insertText": "expressionFunc1",
    "insertTextFormat": 2,
    "kind": 3,
    "label": "expressionFunc1",
    "sortText": "100_expressionFunc1",
    "textEdit": Object {
      "newText": "'expressionFunc1'",
      "range": Object {
        "end": Object {
          "character": 42,
          "line": 17,
        },
        "start": Object {
          "character": 42,
          "line": 17,
        },
      },
    },
  },
  Object {
    "detail": "Reusable functions(expressions) defined in the functions array",
    "filterText": "expressionFunc2",
    "insertText": "expressionFunc2",
    "insertTextFormat": 2,
    "kind": 3,
    "label": "expressionFunc2",
    "sortText": "100_expressionFunc2",
    "textEdit": Object {
      "newText": "'expressionFunc2'",
      "range": Object {
        "end": Object {
          "character": 42,
          "line": 17,
        },
        "start": Object {
          "character": 42,
          "line": 17,
        },
      },
    },
  },
  Object {
    "detail": "Reusable functions(expressions) defined in the functions array",
    "filterText": "expressionFunc3",
    "insertText": "expressionFunc3",
    "insertTextFormat": 2,
    "kind": 3,
    "label": "expressionFunc3",
    "sortText": "100_expressionFunc3",
    "textEdit": Object {
      "newText": "'expressionFunc3'",
      "range": Object {
        "end": Object {
          "character": 42,
          "line": 17,
        },
        "start": Object {
          "character": 42,
          "line": 17,
        },
      },
    },
  },
]
`;

exports[`SWF LS YAML code completion Jq completions operation completions variables completion fn: starting with a 1`] = `0`;

exports[`SWF LS YAML code completion Jq completions operation completions variables completion fn: starting with a 2`] = `Array []`;

exports[`SWF LS YAML code completion Jq completions operation completions variables completion fn: starting with r 1`] = `0`;

exports[`SWF LS YAML code completion Jq completions operation completions variables completion fn: starting with r 2`] = `Array []`;

exports[`SWF LS YAML code completion Jq completions operation completions variables completion no value/double quotes 1`] = `140`;

exports[`SWF LS YAML code completion Jq completions operation completions variables completion no value/double quotes 2`] = `
Array [
  Object {
    "detail": "The builtin function length gets the length of various different types of value.",
    "filterText": "length",
    "insertText": "length",
    "insertTextFormat": 2,
    "kind": 3,
    "label": "length",
    "sortText": "100_length",
    "textEdit": Object {
      "newText": "length",
      "range": Object {
        "end": Object {
          "character": 30,
          "line": 17,
        },
        "start": Object {
          "character": 30,
          "line": 17,
        },
      },
    },
  },
  Object {
    "detail": "The builtin function utf8bytelength outputs the number of bytes used to encode a string in UTF-8.",
    "filterText": "utf8bytelength",
    "insertText": "utf8bytelength",
    "insertTextFormat": 2,
    "kind": 3,
    "label": "utf8bytelength",
    "sortText": "100_utf8bytelength",
    "textEdit": Object {
      "newText": "'utf8bytelength'",
      "range": Object {
        "end": Object {
          "character": 30,
          "line": 17,
        },
        "start": Object {
          "character": 30,
          "line": 17,
        },
      },
    },
  },
  Object {
    "detail": "The builtin function keys, when given an object, returns its keys in an array.",
    "filterText": "keys",
    "insertText": "keys",
    "insertTextFormat": 2,
    "kind": 3,
    "label": "keys",
    "sortText": "100_keys",
    "textEdit": Object {
      "newText": "keys",
      "range": Object {
        "end": Object {
          "character": 30,
          "line": 17,
        },
        "start": Object {
          "character": 30,
          "line": 17,
        },
      },
    },
  },
  Object {
    "detail": "The keys_unsorted function is just like keys, but if the input is an object then the keys will not be sorted, instead the keys will roughly be in insertion order.",
    "filterText": "keys_unsorted",
    "insertText": "keys_unsorted",
    "insertTextFormat": 2,
    "kind": 3,
    "label": "keys_unsorted",
    "sortText": "100_keys_unsorted",
    "textEdit": Object {
      "newText": "keys_unsorted",
      "range": Object {
        "end": Object {
          "character": 30,
          "line": 17,
        },
        "start": Object {
          "character": 30,
          "line": 17,
        },
      },
    },
  },
  Object {
    "detail": "The builtin function has returns whether the input object has the given key, or the input array has an element at the given index.",
    "filterText": "has(key)",
    "insertText": "has(key)",
    "insertTextFormat": 2,
    "kind": 3,
    "label": "has(key)",
    "sortText": "100_has(key)",
    "textEdit": Object {
      "newText": "has(key)",
      "range": Object {
        "end": Object {
          "character": 30,
          "line": 17,
        },
        "start": Object {
          "character": 30,
          "line": 17,
        },
      },
    },
  },
]
`;

exports[`SWF LS YAML code completion Jq completions operation completions variables completion no value/single quotes 1`] = `140`;

exports[`SWF LS YAML code completion Jq completions operation completions variables completion no value/single quotes 2`] = `
Array [
  Object {
    "detail": "The builtin function length gets the length of various different types of value.",
    "filterText": "length",
    "insertText": "length",
    "insertTextFormat": 2,
    "kind": 3,
    "label": "length",
    "sortText": "100_length",
    "textEdit": Object {
      "newText": "length",
      "range": Object {
        "end": Object {
          "character": 30,
          "line": 17,
        },
        "start": Object {
          "character": 30,
          "line": 17,
        },
      },
    },
  },
  Object {
    "detail": "The builtin function utf8bytelength outputs the number of bytes used to encode a string in UTF-8.",
    "filterText": "utf8bytelength",
    "insertText": "utf8bytelength",
    "insertTextFormat": 2,
    "kind": 3,
    "label": "utf8bytelength",
    "sortText": "100_utf8bytelength",
    "textEdit": Object {
      "newText": "'utf8bytelength'",
      "range": Object {
        "end": Object {
          "character": 30,
          "line": 17,
        },
        "start": Object {
          "character": 30,
          "line": 17,
        },
      },
    },
  },
  Object {
    "detail": "The builtin function keys, when given an object, returns its keys in an array.",
    "filterText": "keys",
    "insertText": "keys",
    "insertTextFormat": 2,
    "kind": 3,
    "label": "keys",
    "sortText": "100_keys",
    "textEdit": Object {
      "newText": "keys",
      "range": Object {
        "end": Object {
          "character": 30,
          "line": 17,
        },
        "start": Object {
          "character": 30,
          "line": 17,
        },
      },
    },
  },
  Object {
    "detail": "The keys_unsorted function is just like keys, but if the input is an object then the keys will not be sorted, instead the keys will roughly be in insertion order.",
    "filterText": "keys_unsorted",
    "insertText": "keys_unsorted",
    "insertTextFormat": 2,
    "kind": 3,
    "label": "keys_unsorted",
    "sortText": "100_keys_unsorted",
    "textEdit": Object {
      "newText": "keys_unsorted",
      "range": Object {
        "end": Object {
          "character": 30,
          "line": 17,
        },
        "start": Object {
          "character": 30,
          "line": 17,
        },
      },
    },
  },
  Object {
    "detail": "The builtin function has returns whether the input object has the given key, or the input array has an element at the given index.",
    "filterText": "has(key)",
    "insertText": "has(key)",
    "insertTextFormat": 2,
    "kind": 3,
    "label": "has(key)",
    "sortText": "100_has(key)",
    "textEdit": Object {
      "newText": "has(key)",
      "range": Object {
        "end": Object {
          "character": 30,
          "line": 17,
        },
        "start": Object {
          "character": 30,
          "line": 17,
        },
      },
    },
  },
]
`;

exports[`SWF LS YAML code completion Jq completions operation completions variables completion space before fn: 1`] = `3`;

exports[`SWF LS YAML code completion Jq completions operation completions variables completion space before fn: 2`] = `
Array [
  Object {
    "detail": "Reusable functions(expressions) defined in the functions array",
    "filterText": "expressionFunc1",
    "insertText": "expressionFunc1",
    "insertTextFormat": 2,
    "kind": 3,
    "label": "expressionFunc1",
    "sortText": "100_expressionFunc1",
    "textEdit": Object {
      "newText": "'expressionFunc1'",
      "range": Object {
        "end": Object {
          "character": 34,
          "line": 17,
        },
        "start": Object {
          "character": 34,
          "line": 17,
        },
      },
    },
  },
  Object {
    "detail": "Reusable functions(expressions) defined in the functions array",
    "filterText": "expressionFunc2",
    "insertText": "expressionFunc2",
    "insertTextFormat": 2,
    "kind": 3,
    "label": "expressionFunc2",
    "sortText": "100_expressionFunc2",
    "textEdit": Object {
      "newText": "'expressionFunc2'",
      "range": Object {
        "end": Object {
          "character": 34,
          "line": 17,
        },
        "start": Object {
          "character": 34,
          "line": 17,
        },
      },
    },
  },
  Object {
    "detail": "Reusable functions(expressions) defined in the functions array",
    "filterText": "expressionFunc3",
    "insertText": "expressionFunc3",
    "insertTextFormat": 2,
    "kind": 3,
    "label": "expressionFunc3",
    "sortText": "100_expressionFunc3",
    "textEdit": Object {
      "newText": "'expressionFunc3'",
      "range": Object {
        "end": Object {
          "character": 34,
          "line": 17,
        },
        "start": Object {
          "character": 34,
          "line": 17,
        },
      },
    },
  },
]
`;

exports[`SWF LS YAML code completion Jq completions operation completions variables completion value fn:/double quotes 1`] = `3`;

exports[`SWF LS YAML code completion Jq completions operation completions variables completion value fn:/double quotes 2`] = `
Array [
  Object {
    "detail": "Reusable functions(expressions) defined in the functions array",
    "filterText": "expressionFunc1",
    "insertText": "expressionFunc1",
    "insertTextFormat": 2,
    "kind": 3,
    "label": "expressionFunc1",
    "sortText": "100_expressionFunc1",
    "textEdit": Object {
      "newText": "'expressionFunc1'",
      "range": Object {
        "end": Object {
          "character": 33,
          "line": 17,
        },
        "start": Object {
          "character": 33,
          "line": 17,
        },
      },
    },
  },
  Object {
    "detail": "Reusable functions(expressions) defined in the functions array",
    "filterText": "expressionFunc2",
    "insertText": "expressionFunc2",
    "insertTextFormat": 2,
    "kind": 3,
    "label": "expressionFunc2",
    "sortText": "100_expressionFunc2",
    "textEdit": Object {
      "newText": "'expressionFunc2'",
      "range": Object {
        "end": Object {
          "character": 33,
          "line": 17,
        },
        "start": Object {
          "character": 33,
          "line": 17,
        },
      },
    },
  },
  Object {
    "detail": "Reusable functions(expressions) defined in the functions array",
    "filterText": "expressionFunc3",
    "insertText": "expressionFunc3",
    "insertTextFormat": 2,
    "kind": 3,
    "label": "expressionFunc3",
    "sortText": "100_expressionFunc3",
    "textEdit": Object {
      "newText": "'expressionFunc3'",
      "range": Object {
        "end": Object {
          "character": 33,
          "line": 17,
        },
        "start": Object {
          "character": 33,
          "line": 17,
        },
      },
    },
  },
]
`;

exports[`SWF LS YAML code completion Jq completions operation completions variables completion value fn:/single quotes 1`] = `3`;

exports[`SWF LS YAML code completion Jq completions operation completions variables completion value fn:/single quotes 2`] = `
Array [
  Object {
    "detail": "Reusable functions(expressions) defined in the functions array",
    "filterText": "expressionFunc1",
    "insertText": "expressionFunc1",
    "insertTextFormat": 2,
    "kind": 3,
    "label": "expressionFunc1",
    "sortText": "100_expressionFunc1",
    "textEdit": Object {
      "newText": "'expressionFunc1'",
      "range": Object {
        "end": Object {
          "character": 33,
          "line": 17,
        },
        "start": Object {
          "character": 33,
          "line": 17,
        },
      },
    },
  },
  Object {
    "detail": "Reusable functions(expressions) defined in the functions array",
    "filterText": "expressionFunc2",
    "insertText": "expressionFunc2",
    "insertTextFormat": 2,
    "kind": 3,
    "label": "expressionFunc2",
    "sortText": "100_expressionFunc2",
    "textEdit": Object {
      "newText": "'expressionFunc2'",
      "range": Object {
        "end": Object {
          "character": 33,
          "line": 17,
        },
        "start": Object {
          "character": 33,
          "line": 17,
        },
      },
    },
  },
  Object {
    "detail": "Reusable functions(expressions) defined in the functions array",
    "filterText": "expressionFunc3",
    "insertText": "expressionFunc3",
    "insertTextFormat": 2,
    "kind": 3,
    "label": "expressionFunc3",
    "sortText": "100_expressionFunc3",
    "textEdit": Object {
      "newText": "'expressionFunc3'",
      "range": Object {
        "end": Object {
          "character": 33,
          "line": 17,
        },
        "start": Object {
          "character": 33,
          "line": 17,
        },
      },
    },
  },
]
`;

exports[`SWF LS YAML code completion Jq completions state data filter completions built-in functions completion cursor after a value - auto-complete the word map 1`] = `2`;

exports[`SWF LS YAML code completion Jq completions state data filter completions built-in functions completion cursor after a value - auto-complete the word map 2`] = `
Array [
  Object {
    "detail": "For any filter x, map(x) will run that filter for each element of the input array, and return the outputs in a new array. map(.+1) will increment each element of an array of numbers.",
    "filterText": "map",
    "insertText": "map(x)",
    "insertTextFormat": 2,
    "kind": 3,
    "label": "map(x)",
    "sortText": "100_map(x)",
    "textEdit": Object {
      "newText": "map(x)",
      "range": Object {
        "end": Object {
          "character": 30,
          "line": 16,
        },
        "start": Object {
          "character": 27,
          "line": 16,
        },
      },
    },
  },
  Object {
    "detail": "map_values(x) will run that filter for each element, but it will return an object when an object is passed.",
    "filterText": "map",
    "insertText": "map_values(x)",
    "insertTextFormat": 2,
    "kind": 3,
    "label": "map_values(x)",
    "sortText": "100_map_values(x)",
    "textEdit": Object {
      "newText": "map_values(x)",
      "range": Object {
        "end": Object {
          "character": 30,
          "line": 16,
        },
        "start": Object {
          "character": 27,
          "line": 16,
        },
      },
    },
  },
]
`;

exports[`SWF LS YAML code completion Jq completions state data filter completions built-in functions completion cursor after some random word 1`] = `140`;

exports[`SWF LS YAML code completion Jq completions state data filter completions built-in functions completion cursor after some random word 2`] = `
Array [
  Object {
    "detail": "The builtin function length gets the length of various different types of value.",
    "filterText": "length",
    "insertText": "length",
    "insertTextFormat": 2,
    "kind": 3,
    "label": "length",
    "sortText": "100_length",
    "textEdit": Object {
      "newText": "length",
      "range": Object {
        "end": Object {
          "character": 37,
          "line": 16,
        },
        "start": Object {
          "character": 37,
          "line": 16,
        },
      },
    },
  },
  Object {
    "detail": "The builtin function utf8bytelength outputs the number of bytes used to encode a string in UTF-8.",
    "filterText": "utf8bytelength",
    "insertText": "utf8bytelength",
    "insertTextFormat": 2,
    "kind": 3,
    "label": "utf8bytelength",
    "sortText": "100_utf8bytelength",
    "textEdit": Object {
      "newText": "'utf8bytelength'",
      "range": Object {
        "end": Object {
          "character": 37,
          "line": 16,
        },
        "start": Object {
          "character": 37,
          "line": 16,
        },
      },
    },
  },
  Object {
    "detail": "The builtin function keys, when given an object, returns its keys in an array.",
    "filterText": "keys",
    "insertText": "keys",
    "insertTextFormat": 2,
    "kind": 3,
    "label": "keys",
    "sortText": "100_keys",
    "textEdit": Object {
      "newText": "keys",
      "range": Object {
        "end": Object {
          "character": 37,
          "line": 16,
        },
        "start": Object {
          "character": 37,
          "line": 16,
        },
      },
    },
  },
  Object {
    "detail": "The keys_unsorted function is just like keys, but if the input is an object then the keys will not be sorted, instead the keys will roughly be in insertion order.",
    "filterText": "keys_unsorted",
    "insertText": "keys_unsorted",
    "insertTextFormat": 2,
    "kind": 3,
    "label": "keys_unsorted",
    "sortText": "100_keys_unsorted",
    "textEdit": Object {
      "newText": "keys_unsorted",
      "range": Object {
        "end": Object {
          "character": 37,
          "line": 16,
        },
        "start": Object {
          "character": 37,
          "line": 16,
        },
      },
    },
  },
  Object {
    "detail": "The builtin function has returns whether the input object has the given key, or the input array has an element at the given index.",
    "filterText": "has(key)",
    "insertText": "has(key)",
    "insertTextFormat": 2,
    "kind": 3,
    "label": "has(key)",
    "sortText": "100_has(key)",
    "textEdit": Object {
      "newText": "has(key)",
      "range": Object {
        "end": Object {
          "character": 37,
          "line": 16,
        },
        "start": Object {
          "character": 37,
          "line": 16,
        },
      },
    },
  },
]
`;

exports[`SWF LS YAML code completion Jq completions state data filter completions built-in functions completion cursor after the dot(variable):/double quotes 1`] = `4`;

exports[`SWF LS YAML code completion Jq completions state data filter completions built-in functions completion cursor after the dot(variable):/double quotes 2`] = `
Array [
  Object {
    "detail": "string",
    "filterText": "name",
    "insertText": "name",
    "insertTextFormat": 2,
    "kind": 12,
    "label": "name",
    "sortText": "100_name",
    "textEdit": Object {
      "newText": "name",
      "range": Object {
        "end": Object {
          "character": 28,
          "line": 16,
        },
        "start": Object {
          "character": 28,
          "line": 16,
        },
      },
    },
  },
  Object {
    "detail": "1",
    "filterText": "age",
    "insertText": "age",
    "insertTextFormat": 2,
    "kind": 12,
    "label": "age",
    "sortText": "100_age",
    "textEdit": Object {
      "newText": "age",
      "range": Object {
        "end": Object {
          "character": 28,
          "line": 16,
        },
        "start": Object {
          "character": 28,
          "line": 16,
        },
      },
    },
  },
  Object {
    "detail": "string",
    "filterText": "avgLoad",
    "insertText": "avgLoad",
    "insertTextFormat": 2,
    "kind": 12,
    "label": "avgLoad",
    "sortText": "100_avgLoad",
    "textEdit": Object {
      "newText": "avgLoad",
      "range": Object {
        "end": Object {
          "character": 28,
          "line": 16,
        },
        "start": Object {
          "character": 28,
          "line": 16,
        },
      },
    },
  },
  Object {
    "detail": "1",
    "filterText": "numberOfPods",
    "insertText": "numberOfPods",
    "insertTextFormat": 2,
    "kind": 12,
    "label": "numberOfPods",
    "sortText": "100_numberOfPods",
    "textEdit": Object {
      "newText": "numberOfPods",
      "range": Object {
        "end": Object {
          "character": 28,
          "line": 16,
        },
        "start": Object {
          "character": 28,
          "line": 16,
        },
      },
    },
  },
]
`;

exports[`SWF LS YAML code completion Jq completions state data filter completions built-in functions completion cursor after the dot(variable):/single quotes 1`] = `4`;

exports[`SWF LS YAML code completion Jq completions state data filter completions built-in functions completion cursor after the dot(variable):/single quotes 2`] = `
Array [
  Object {
    "detail": "string",
    "filterText": "name",
    "insertText": "name",
    "insertTextFormat": 2,
    "kind": 12,
    "label": "name",
    "sortText": "100_name",
    "textEdit": Object {
      "newText": "name",
      "range": Object {
        "end": Object {
          "character": 28,
          "line": 16,
        },
        "start": Object {
          "character": 28,
          "line": 16,
        },
      },
    },
  },
  Object {
    "detail": "1",
    "filterText": "age",
    "insertText": "age",
    "insertTextFormat": 2,
    "kind": 12,
    "label": "age",
    "sortText": "100_age",
    "textEdit": Object {
      "newText": "age",
      "range": Object {
        "end": Object {
          "character": 28,
          "line": 16,
        },
        "start": Object {
          "character": 28,
          "line": 16,
        },
      },
    },
  },
  Object {
    "detail": "string",
    "filterText": "avgLoad",
    "insertText": "avgLoad",
    "insertTextFormat": 2,
    "kind": 12,
    "label": "avgLoad",
    "sortText": "100_avgLoad",
    "textEdit": Object {
      "newText": "avgLoad",
      "range": Object {
        "end": Object {
          "character": 28,
          "line": 16,
        },
        "start": Object {
          "character": 28,
          "line": 16,
        },
      },
    },
  },
  Object {
    "detail": "1",
    "filterText": "numberOfPods",
    "insertText": "numberOfPods",
    "insertTextFormat": 2,
    "kind": 12,
    "label": "numberOfPods",
    "sortText": "100_numberOfPods",
    "textEdit": Object {
      "newText": "numberOfPods",
      "range": Object {
        "end": Object {
          "character": 28,
          "line": 16,
        },
        "start": Object {
          "character": 28,
          "line": 16,
        },
      },
    },
  },
]
`;

exports[`SWF LS YAML code completion Jq completions state data filter completions built-in functions completion cursor before empty space 1`] = `140`;

exports[`SWF LS YAML code completion Jq completions state data filter completions built-in functions completion cursor before empty space 2`] = `
Array [
  Object {
    "detail": "The builtin function length gets the length of various different types of value.",
    "filterText": "length",
    "insertText": "length",
    "insertTextFormat": 2,
    "kind": 3,
    "label": "length",
    "sortText": "100_length",
    "textEdit": Object {
      "newText": "length",
      "range": Object {
        "end": Object {
          "character": 27,
          "line": 16,
        },
        "start": Object {
          "character": 27,
          "line": 16,
        },
      },
    },
  },
  Object {
    "detail": "The builtin function utf8bytelength outputs the number of bytes used to encode a string in UTF-8.",
    "filterText": "utf8bytelength",
    "insertText": "utf8bytelength",
    "insertTextFormat": 2,
    "kind": 3,
    "label": "utf8bytelength",
    "sortText": "100_utf8bytelength",
    "textEdit": Object {
      "newText": "'utf8bytelength'",
      "range": Object {
        "end": Object {
          "character": 27,
          "line": 16,
        },
        "start": Object {
          "character": 27,
          "line": 16,
        },
      },
    },
  },
  Object {
    "detail": "The builtin function keys, when given an object, returns its keys in an array.",
    "filterText": "keys",
    "insertText": "keys",
    "insertTextFormat": 2,
    "kind": 3,
    "label": "keys",
    "sortText": "100_keys",
    "textEdit": Object {
      "newText": "keys",
      "range": Object {
        "end": Object {
          "character": 27,
          "line": 16,
        },
        "start": Object {
          "character": 27,
          "line": 16,
        },
      },
    },
  },
  Object {
    "detail": "The keys_unsorted function is just like keys, but if the input is an object then the keys will not be sorted, instead the keys will roughly be in insertion order.",
    "filterText": "keys_unsorted",
    "insertText": "keys_unsorted",
    "insertTextFormat": 2,
    "kind": 3,
    "label": "keys_unsorted",
    "sortText": "100_keys_unsorted",
    "textEdit": Object {
      "newText": "keys_unsorted",
      "range": Object {
        "end": Object {
          "character": 27,
          "line": 16,
        },
        "start": Object {
          "character": 27,
          "line": 16,
        },
      },
    },
  },
  Object {
    "detail": "The builtin function has returns whether the input object has the given key, or the input array has an element at the given index.",
    "filterText": "has(key)",
    "insertText": "has(key)",
    "insertTextFormat": 2,
    "kind": 3,
    "label": "has(key)",
    "sortText": "100_has(key)",
    "textEdit": Object {
      "newText": "has(key)",
      "range": Object {
        "end": Object {
          "character": 27,
          "line": 16,
        },
        "start": Object {
          "character": 27,
          "line": 16,
        },
      },
    },
  },
]
`;

exports[`SWF LS YAML code completion Jq completions state data filter completions built-in functions completion cursor before the dot(variable) 1`] = `140`;

exports[`SWF LS YAML code completion Jq completions state data filter completions built-in functions completion cursor before the dot(variable) 2`] = `
Array [
  Object {
    "detail": "The builtin function length gets the length of various different types of value.",
    "filterText": "length",
    "insertText": "length",
    "insertTextFormat": 2,
    "kind": 3,
    "label": "length",
    "sortText": "100_length",
    "textEdit": Object {
      "newText": "length",
      "range": Object {
        "end": Object {
          "character": 27,
          "line": 16,
        },
        "start": Object {
          "character": 27,
          "line": 16,
        },
      },
    },
  },
  Object {
    "detail": "The builtin function utf8bytelength outputs the number of bytes used to encode a string in UTF-8.",
    "filterText": "utf8bytelength",
    "insertText": "utf8bytelength",
    "insertTextFormat": 2,
    "kind": 3,
    "label": "utf8bytelength",
    "sortText": "100_utf8bytelength",
    "textEdit": Object {
      "newText": "'utf8bytelength'",
      "range": Object {
        "end": Object {
          "character": 27,
          "line": 16,
        },
        "start": Object {
          "character": 27,
          "line": 16,
        },
      },
    },
  },
  Object {
    "detail": "The builtin function keys, when given an object, returns its keys in an array.",
    "filterText": "keys",
    "insertText": "keys",
    "insertTextFormat": 2,
    "kind": 3,
    "label": "keys",
    "sortText": "100_keys",
    "textEdit": Object {
      "newText": "keys",
      "range": Object {
        "end": Object {
          "character": 27,
          "line": 16,
        },
        "start": Object {
          "character": 27,
          "line": 16,
        },
      },
    },
  },
  Object {
    "detail": "The keys_unsorted function is just like keys, but if the input is an object then the keys will not be sorted, instead the keys will roughly be in insertion order.",
    "filterText": "keys_unsorted",
    "insertText": "keys_unsorted",
    "insertTextFormat": 2,
    "kind": 3,
    "label": "keys_unsorted",
    "sortText": "100_keys_unsorted",
    "textEdit": Object {
      "newText": "keys_unsorted",
      "range": Object {
        "end": Object {
          "character": 27,
          "line": 16,
        },
        "start": Object {
          "character": 27,
          "line": 16,
        },
      },
    },
  },
  Object {
    "detail": "The builtin function has returns whether the input object has the given key, or the input array has an element at the given index.",
    "filterText": "has(key)",
    "insertText": "has(key)",
    "insertTextFormat": 2,
    "kind": 3,
    "label": "has(key)",
    "sortText": "100_has(key)",
    "textEdit": Object {
      "newText": "has(key)",
      "range": Object {
        "end": Object {
          "character": 27,
          "line": 16,
        },
        "start": Object {
          "character": 27,
          "line": 16,
        },
      },
    },
  },
]
`;

exports[`SWF LS YAML code completion Jq completions state data filter completions built-in functions completion cursor with a space after the  dot(variable) 1`] = `140`;

exports[`SWF LS YAML code completion Jq completions state data filter completions built-in functions completion cursor with a space after the  dot(variable) 2`] = `
Array [
  Object {
    "detail": "The builtin function length gets the length of various different types of value.",
    "filterText": "length",
    "insertText": "length",
    "insertTextFormat": 2,
    "kind": 3,
    "label": "length",
    "sortText": "100_length",
    "textEdit": Object {
      "newText": "length",
      "range": Object {
        "end": Object {
          "character": 29,
          "line": 16,
        },
        "start": Object {
          "character": 29,
          "line": 16,
        },
      },
    },
  },
  Object {
    "detail": "The builtin function utf8bytelength outputs the number of bytes used to encode a string in UTF-8.",
    "filterText": "utf8bytelength",
    "insertText": "utf8bytelength",
    "insertTextFormat": 2,
    "kind": 3,
    "label": "utf8bytelength",
    "sortText": "100_utf8bytelength",
    "textEdit": Object {
      "newText": "'utf8bytelength'",
      "range": Object {
        "end": Object {
          "character": 29,
          "line": 16,
        },
        "start": Object {
          "character": 29,
          "line": 16,
        },
      },
    },
  },
  Object {
    "detail": "The builtin function keys, when given an object, returns its keys in an array.",
    "filterText": "keys",
    "insertText": "keys",
    "insertTextFormat": 2,
    "kind": 3,
    "label": "keys",
    "sortText": "100_keys",
    "textEdit": Object {
      "newText": "keys",
      "range": Object {
        "end": Object {
          "character": 29,
          "line": 16,
        },
        "start": Object {
          "character": 29,
          "line": 16,
        },
      },
    },
  },
  Object {
    "detail": "The keys_unsorted function is just like keys, but if the input is an object then the keys will not be sorted, instead the keys will roughly be in insertion order.",
    "filterText": "keys_unsorted",
    "insertText": "keys_unsorted",
    "insertTextFormat": 2,
    "kind": 3,
    "label": "keys_unsorted",
    "sortText": "100_keys_unsorted",
    "textEdit": Object {
      "newText": "keys_unsorted",
      "range": Object {
        "end": Object {
          "character": 29,
          "line": 16,
        },
        "start": Object {
          "character": 29,
          "line": 16,
        },
      },
    },
  },
  Object {
    "detail": "The builtin function has returns whether the input object has the given key, or the input array has an element at the given index.",
    "filterText": "has(key)",
    "insertText": "has(key)",
    "insertTextFormat": 2,
    "kind": 3,
    "label": "has(key)",
    "sortText": "100_has(key)",
    "textEdit": Object {
      "newText": "has(key)",
      "range": Object {
        "end": Object {
          "character": 29,
          "line": 16,
        },
        "start": Object {
          "character": 29,
          "line": 16,
        },
      },
    },
  },
]
`;

exports[`SWF LS YAML code completion Jq completions state data filter completions built-in functions completion cursor with a value following the  dot(variable) 1`] = `2`;

exports[`SWF LS YAML code completion Jq completions state data filter completions built-in functions completion cursor with a value following the  dot(variable) 2`] = `
Array [
  Object {
    "detail": "1",
    "filterText": "a",
    "insertText": "age",
    "insertTextFormat": 2,
    "kind": 12,
    "label": "age",
    "sortText": "100_age",
    "textEdit": Object {
      "newText": "age",
      "range": Object {
        "end": Object {
          "character": 29,
          "line": 16,
        },
        "start": Object {
          "character": 28,
          "line": 16,
        },
      },
    },
  },
  Object {
    "detail": "string",
    "filterText": "a",
    "insertText": "avgLoad",
    "insertTextFormat": 2,
    "kind": 12,
    "label": "avgLoad",
    "sortText": "100_avgLoad",
    "textEdit": Object {
      "newText": "avgLoad",
      "range": Object {
        "end": Object {
          "character": 29,
          "line": 16,
        },
        "start": Object {
          "character": 28,
          "line": 16,
        },
      },
    },
  },
]
`;

exports[`SWF LS YAML code completion Jq completions state data filter completions built-in functions completion empty object 1`] = `0`;

exports[`SWF LS YAML code completion Jq completions state data filter completions built-in functions completion empty object 2`] = `Array []`;

exports[`SWF LS YAML code completion Jq completions state data filter completions built-in functions completion empty object 3`] = `0`;

exports[`SWF LS YAML code completion Jq completions state data filter completions built-in functions completion empty object 4`] = `Array []`;

exports[`SWF LS YAML code completion Jq completions state data filter completions built-in functions completion empty object 5`] = `0`;

exports[`SWF LS YAML code completion Jq completions state data filter completions built-in functions completion empty object 6`] = `Array []`;

exports[`SWF LS YAML code completion Jq completions state data filter completions built-in functions completion fn: after some value 1`] = `2`;

exports[`SWF LS YAML code completion Jq completions state data filter completions built-in functions completion fn: after some value 2`] = `
Array [
  Object {
    "detail": "Reusable functions(expressions) defined in the functions array",
    "filterText": "expressionFunc1",
    "insertText": "expressionFunc1",
    "insertTextFormat": 2,
    "kind": 3,
    "label": "expressionFunc1",
    "sortText": "100_expressionFunc1",
    "textEdit": Object {
      "newText": "'expressionFunc1'",
      "range": Object {
        "end": Object {
          "character": 39,
          "line": 16,
        },
        "start": Object {
          "character": 39,
          "line": 16,
        },
      },
    },
  },
  Object {
    "detail": "Reusable functions(expressions) defined in the functions array",
    "filterText": "expressionFunc2",
    "insertText": "expressionFunc2",
    "insertTextFormat": 2,
    "kind": 3,
    "label": "expressionFunc2",
    "sortText": "100_expressionFunc2",
    "textEdit": Object {
      "newText": "'expressionFunc2'",
      "range": Object {
        "end": Object {
          "character": 39,
          "line": 16,
        },
        "start": Object {
          "character": 39,
          "line": 16,
        },
      },
    },
  },
]
`;

exports[`SWF LS YAML code completion Jq completions state data filter completions built-in functions completion fn: starting with a 1`] = `0`;

exports[`SWF LS YAML code completion Jq completions state data filter completions built-in functions completion fn: starting with a 2`] = `Array []`;

exports[`SWF LS YAML code completion Jq completions state data filter completions built-in functions completion fn: starting with r 1`] = `0`;

exports[`SWF LS YAML code completion Jq completions state data filter completions built-in functions completion fn: starting with r 2`] = `Array []`;

exports[`SWF LS YAML code completion Jq completions state data filter completions built-in functions completion no value/double quotes 1`] = `140`;

exports[`SWF LS YAML code completion Jq completions state data filter completions built-in functions completion no value/double quotes 2`] = `
Array [
  Object {
    "detail": "The builtin function length gets the length of various different types of value.",
    "filterText": "length",
    "insertText": "length",
    "insertTextFormat": 2,
    "kind": 3,
    "label": "length",
    "sortText": "100_length",
    "textEdit": Object {
      "newText": "length",
      "range": Object {
        "end": Object {
          "character": 27,
          "line": 16,
        },
        "start": Object {
          "character": 27,
          "line": 16,
        },
      },
    },
  },
  Object {
    "detail": "The builtin function utf8bytelength outputs the number of bytes used to encode a string in UTF-8.",
    "filterText": "utf8bytelength",
    "insertText": "utf8bytelength",
    "insertTextFormat": 2,
    "kind": 3,
    "label": "utf8bytelength",
    "sortText": "100_utf8bytelength",
    "textEdit": Object {
      "newText": "'utf8bytelength'",
      "range": Object {
        "end": Object {
          "character": 27,
          "line": 16,
        },
        "start": Object {
          "character": 27,
          "line": 16,
        },
      },
    },
  },
  Object {
    "detail": "The builtin function keys, when given an object, returns its keys in an array.",
    "filterText": "keys",
    "insertText": "keys",
    "insertTextFormat": 2,
    "kind": 3,
    "label": "keys",
    "sortText": "100_keys",
    "textEdit": Object {
      "newText": "keys",
      "range": Object {
        "end": Object {
          "character": 27,
          "line": 16,
        },
        "start": Object {
          "character": 27,
          "line": 16,
        },
      },
    },
  },
  Object {
    "detail": "The keys_unsorted function is just like keys, but if the input is an object then the keys will not be sorted, instead the keys will roughly be in insertion order.",
    "filterText": "keys_unsorted",
    "insertText": "keys_unsorted",
    "insertTextFormat": 2,
    "kind": 3,
    "label": "keys_unsorted",
    "sortText": "100_keys_unsorted",
    "textEdit": Object {
      "newText": "keys_unsorted",
      "range": Object {
        "end": Object {
          "character": 27,
          "line": 16,
        },
        "start": Object {
          "character": 27,
          "line": 16,
        },
      },
    },
  },
  Object {
    "detail": "The builtin function has returns whether the input object has the given key, or the input array has an element at the given index.",
    "filterText": "has(key)",
    "insertText": "has(key)",
    "insertTextFormat": 2,
    "kind": 3,
    "label": "has(key)",
    "sortText": "100_has(key)",
    "textEdit": Object {
      "newText": "has(key)",
      "range": Object {
        "end": Object {
          "character": 27,
          "line": 16,
        },
        "start": Object {
          "character": 27,
          "line": 16,
        },
      },
    },
  },
]
`;

exports[`SWF LS YAML code completion Jq completions state data filter completions built-in functions completion no value/single quotes 1`] = `140`;

exports[`SWF LS YAML code completion Jq completions state data filter completions built-in functions completion no value/single quotes 2`] = `
Array [
  Object {
    "detail": "The builtin function length gets the length of various different types of value.",
    "filterText": "length",
    "insertText": "length",
    "insertTextFormat": 2,
    "kind": 3,
    "label": "length",
    "sortText": "100_length",
    "textEdit": Object {
      "newText": "length",
      "range": Object {
        "end": Object {
          "character": 27,
          "line": 16,
        },
        "start": Object {
          "character": 27,
          "line": 16,
        },
      },
    },
  },
  Object {
    "detail": "The builtin function utf8bytelength outputs the number of bytes used to encode a string in UTF-8.",
    "filterText": "utf8bytelength",
    "insertText": "utf8bytelength",
    "insertTextFormat": 2,
    "kind": 3,
    "label": "utf8bytelength",
    "sortText": "100_utf8bytelength",
    "textEdit": Object {
      "newText": "'utf8bytelength'",
      "range": Object {
        "end": Object {
          "character": 27,
          "line": 16,
        },
        "start": Object {
          "character": 27,
          "line": 16,
        },
      },
    },
  },
  Object {
    "detail": "The builtin function keys, when given an object, returns its keys in an array.",
    "filterText": "keys",
    "insertText": "keys",
    "insertTextFormat": 2,
    "kind": 3,
    "label": "keys",
    "sortText": "100_keys",
    "textEdit": Object {
      "newText": "keys",
      "range": Object {
        "end": Object {
          "character": 27,
          "line": 16,
        },
        "start": Object {
          "character": 27,
          "line": 16,
        },
      },
    },
  },
  Object {
    "detail": "The keys_unsorted function is just like keys, but if the input is an object then the keys will not be sorted, instead the keys will roughly be in insertion order.",
    "filterText": "keys_unsorted",
    "insertText": "keys_unsorted",
    "insertTextFormat": 2,
    "kind": 3,
    "label": "keys_unsorted",
    "sortText": "100_keys_unsorted",
    "textEdit": Object {
      "newText": "keys_unsorted",
      "range": Object {
        "end": Object {
          "character": 27,
          "line": 16,
        },
        "start": Object {
          "character": 27,
          "line": 16,
        },
      },
    },
  },
  Object {
    "detail": "The builtin function has returns whether the input object has the given key, or the input array has an element at the given index.",
    "filterText": "has(key)",
    "insertText": "has(key)",
    "insertTextFormat": 2,
    "kind": 3,
    "label": "has(key)",
    "sortText": "100_has(key)",
    "textEdit": Object {
      "newText": "has(key)",
      "range": Object {
        "end": Object {
          "character": 27,
          "line": 16,
        },
        "start": Object {
          "character": 27,
          "line": 16,
        },
      },
    },
  },
]
`;

exports[`SWF LS YAML code completion Jq completions state data filter completions built-in functions completion space before fn: 1`] = `2`;

exports[`SWF LS YAML code completion Jq completions state data filter completions built-in functions completion space before fn: 2`] = `
Array [
  Object {
    "detail": "Reusable functions(expressions) defined in the functions array",
    "filterText": "expressionFunc1",
    "insertText": "expressionFunc1",
    "insertTextFormat": 2,
    "kind": 3,
    "label": "expressionFunc1",
    "sortText": "100_expressionFunc1",
    "textEdit": Object {
      "newText": "'expressionFunc1'",
      "range": Object {
        "end": Object {
          "character": 31,
          "line": 16,
        },
        "start": Object {
          "character": 31,
          "line": 16,
        },
      },
    },
  },
  Object {
    "detail": "Reusable functions(expressions) defined in the functions array",
    "filterText": "expressionFunc2",
    "insertText": "expressionFunc2",
    "insertTextFormat": 2,
    "kind": 3,
    "label": "expressionFunc2",
    "sortText": "100_expressionFunc2",
    "textEdit": Object {
      "newText": "'expressionFunc2'",
      "range": Object {
        "end": Object {
          "character": 31,
          "line": 16,
        },
        "start": Object {
          "character": 31,
          "line": 16,
        },
      },
    },
  },
]
`;

exports[`SWF LS YAML code completion Jq completions state data filter completions built-in functions completion value fn:/double quotes 1`] = `2`;

exports[`SWF LS YAML code completion Jq completions state data filter completions built-in functions completion value fn:/double quotes 2`] = `
Array [
  Object {
    "detail": "Reusable functions(expressions) defined in the functions array",
    "filterText": "expressionFunc1",
    "insertText": "expressionFunc1",
    "insertTextFormat": 2,
    "kind": 3,
    "label": "expressionFunc1",
    "sortText": "100_expressionFunc1",
    "textEdit": Object {
      "newText": "'expressionFunc1'",
      "range": Object {
        "end": Object {
          "character": 30,
          "line": 16,
        },
        "start": Object {
          "character": 30,
          "line": 16,
        },
      },
    },
  },
  Object {
    "detail": "Reusable functions(expressions) defined in the functions array",
    "filterText": "expressionFunc2",
    "insertText": "expressionFunc2",
    "insertTextFormat": 2,
    "kind": 3,
    "label": "expressionFunc2",
    "sortText": "100_expressionFunc2",
    "textEdit": Object {
      "newText": "'expressionFunc2'",
      "range": Object {
        "end": Object {
          "character": 30,
          "line": 16,
        },
        "start": Object {
          "character": 30,
          "line": 16,
        },
      },
    },
  },
]
`;

exports[`SWF LS YAML code completion Jq completions state data filter completions built-in functions completion value fn:/single quotes 1`] = `2`;

exports[`SWF LS YAML code completion Jq completions state data filter completions built-in functions completion value fn:/single quotes 2`] = `
Array [
  Object {
    "detail": "Reusable functions(expressions) defined in the functions array",
    "filterText": "expressionFunc1",
    "insertText": "expressionFunc1",
    "insertTextFormat": 2,
    "kind": 3,
    "label": "expressionFunc1",
    "sortText": "100_expressionFunc1",
    "textEdit": Object {
      "newText": "'expressionFunc1'",
      "range": Object {
        "end": Object {
          "character": 30,
          "line": 16,
        },
        "start": Object {
          "character": 30,
          "line": 16,
        },
      },
    },
  },
  Object {
    "detail": "Reusable functions(expressions) defined in the functions array",
    "filterText": "expressionFunc2",
    "insertText": "expressionFunc2",
    "insertTextFormat": 2,
    "kind": 3,
    "label": "expressionFunc2",
    "sortText": "100_expressionFunc2",
    "textEdit": Object {
      "newText": "'expressionFunc2'",
      "range": Object {
        "end": Object {
          "character": 30,
          "line": 16,
        },
        "start": Object {
          "character": 30,
          "line": 16,
        },
      },
    },
  },
]
`;

exports[`SWF LS YAML code completion Jq completions state data filter completions variables completion cursor after a value - auto-complete the word map 1`] = `2`;

exports[`SWF LS YAML code completion Jq completions state data filter completions variables completion cursor after a value - auto-complete the word map 2`] = `
Array [
  Object {
    "detail": "For any filter x, map(x) will run that filter for each element of the input array, and return the outputs in a new array. map(.+1) will increment each element of an array of numbers.",
    "filterText": "map",
    "insertText": "map(x)",
    "insertTextFormat": 2,
    "kind": 3,
    "label": "map(x)",
    "sortText": "100_map(x)",
    "textEdit": Object {
      "newText": "map(x)",
      "range": Object {
        "end": Object {
          "character": 30,
          "line": 16,
        },
        "start": Object {
          "character": 27,
          "line": 16,
        },
      },
    },
  },
  Object {
    "detail": "map_values(x) will run that filter for each element, but it will return an object when an object is passed.",
    "filterText": "map",
    "insertText": "map_values(x)",
    "insertTextFormat": 2,
    "kind": 3,
    "label": "map_values(x)",
    "sortText": "100_map_values(x)",
    "textEdit": Object {
      "newText": "map_values(x)",
      "range": Object {
        "end": Object {
          "character": 30,
          "line": 16,
        },
        "start": Object {
          "character": 27,
          "line": 16,
        },
      },
    },
  },
]
`;

exports[`SWF LS YAML code completion Jq completions state data filter completions variables completion cursor after some random word 1`] = `140`;

exports[`SWF LS YAML code completion Jq completions state data filter completions variables completion cursor after some random word 2`] = `
Array [
  Object {
    "detail": "The builtin function length gets the length of various different types of value.",
    "filterText": "length",
    "insertText": "length",
    "insertTextFormat": 2,
    "kind": 3,
    "label": "length",
    "sortText": "100_length",
    "textEdit": Object {
      "newText": "length",
      "range": Object {
        "end": Object {
          "character": 37,
          "line": 16,
        },
        "start": Object {
          "character": 37,
          "line": 16,
        },
      },
    },
  },
  Object {
    "detail": "The builtin function utf8bytelength outputs the number of bytes used to encode a string in UTF-8.",
    "filterText": "utf8bytelength",
    "insertText": "utf8bytelength",
    "insertTextFormat": 2,
    "kind": 3,
    "label": "utf8bytelength",
    "sortText": "100_utf8bytelength",
    "textEdit": Object {
      "newText": "'utf8bytelength'",
      "range": Object {
        "end": Object {
          "character": 37,
          "line": 16,
        },
        "start": Object {
          "character": 37,
          "line": 16,
        },
      },
    },
  },
  Object {
    "detail": "The builtin function keys, when given an object, returns its keys in an array.",
    "filterText": "keys",
    "insertText": "keys",
    "insertTextFormat": 2,
    "kind": 3,
    "label": "keys",
    "sortText": "100_keys",
    "textEdit": Object {
      "newText": "keys",
      "range": Object {
        "end": Object {
          "character": 37,
          "line": 16,
        },
        "start": Object {
          "character": 37,
          "line": 16,
        },
      },
    },
  },
  Object {
    "detail": "The keys_unsorted function is just like keys, but if the input is an object then the keys will not be sorted, instead the keys will roughly be in insertion order.",
    "filterText": "keys_unsorted",
    "insertText": "keys_unsorted",
    "insertTextFormat": 2,
    "kind": 3,
    "label": "keys_unsorted",
    "sortText": "100_keys_unsorted",
    "textEdit": Object {
      "newText": "keys_unsorted",
      "range": Object {
        "end": Object {
          "character": 37,
          "line": 16,
        },
        "start": Object {
          "character": 37,
          "line": 16,
        },
      },
    },
  },
  Object {
    "detail": "The builtin function has returns whether the input object has the given key, or the input array has an element at the given index.",
    "filterText": "has(key)",
    "insertText": "has(key)",
    "insertTextFormat": 2,
    "kind": 3,
    "label": "has(key)",
    "sortText": "100_has(key)",
    "textEdit": Object {
      "newText": "has(key)",
      "range": Object {
        "end": Object {
          "character": 37,
          "line": 16,
        },
        "start": Object {
          "character": 37,
          "line": 16,
        },
      },
    },
  },
]
`;

exports[`SWF LS YAML code completion Jq completions state data filter completions variables completion cursor after the dot(variable):/double quotes 1`] = `4`;

exports[`SWF LS YAML code completion Jq completions state data filter completions variables completion cursor after the dot(variable):/double quotes 2`] = `
Array [
  Object {
    "detail": "string",
    "filterText": "name",
    "insertText": "name",
    "insertTextFormat": 2,
    "kind": 12,
    "label": "name",
    "sortText": "100_name",
    "textEdit": Object {
      "newText": "name",
      "range": Object {
        "end": Object {
          "character": 28,
          "line": 16,
        },
        "start": Object {
          "character": 28,
          "line": 16,
        },
      },
    },
  },
  Object {
    "detail": "1",
    "filterText": "age",
    "insertText": "age",
    "insertTextFormat": 2,
    "kind": 12,
    "label": "age",
    "sortText": "100_age",
    "textEdit": Object {
      "newText": "age",
      "range": Object {
        "end": Object {
          "character": 28,
          "line": 16,
        },
        "start": Object {
          "character": 28,
          "line": 16,
        },
      },
    },
  },
  Object {
    "detail": "string",
    "filterText": "avgLoad",
    "insertText": "avgLoad",
    "insertTextFormat": 2,
    "kind": 12,
    "label": "avgLoad",
    "sortText": "100_avgLoad",
    "textEdit": Object {
      "newText": "avgLoad",
      "range": Object {
        "end": Object {
          "character": 28,
          "line": 16,
        },
        "start": Object {
          "character": 28,
          "line": 16,
        },
      },
    },
  },
  Object {
    "detail": "1",
    "filterText": "numberOfPods",
    "insertText": "numberOfPods",
    "insertTextFormat": 2,
    "kind": 12,
    "label": "numberOfPods",
    "sortText": "100_numberOfPods",
    "textEdit": Object {
      "newText": "numberOfPods",
      "range": Object {
        "end": Object {
          "character": 28,
          "line": 16,
        },
        "start": Object {
          "character": 28,
          "line": 16,
        },
      },
    },
  },
]
`;

exports[`SWF LS YAML code completion Jq completions state data filter completions variables completion cursor after the dot(variable):/single quotes 1`] = `4`;

exports[`SWF LS YAML code completion Jq completions state data filter completions variables completion cursor after the dot(variable):/single quotes 2`] = `
Array [
  Object {
    "detail": "string",
    "filterText": "name",
    "insertText": "name",
    "insertTextFormat": 2,
    "kind": 12,
    "label": "name",
    "sortText": "100_name",
    "textEdit": Object {
      "newText": "name",
      "range": Object {
        "end": Object {
          "character": 28,
          "line": 16,
        },
        "start": Object {
          "character": 28,
          "line": 16,
        },
      },
    },
  },
  Object {
    "detail": "1",
    "filterText": "age",
    "insertText": "age",
    "insertTextFormat": 2,
    "kind": 12,
    "label": "age",
    "sortText": "100_age",
    "textEdit": Object {
      "newText": "age",
      "range": Object {
        "end": Object {
          "character": 28,
          "line": 16,
        },
        "start": Object {
          "character": 28,
          "line": 16,
        },
      },
    },
  },
  Object {
    "detail": "string",
    "filterText": "avgLoad",
    "insertText": "avgLoad",
    "insertTextFormat": 2,
    "kind": 12,
    "label": "avgLoad",
    "sortText": "100_avgLoad",
    "textEdit": Object {
      "newText": "avgLoad",
      "range": Object {
        "end": Object {
          "character": 28,
          "line": 16,
        },
        "start": Object {
          "character": 28,
          "line": 16,
        },
      },
    },
  },
  Object {
    "detail": "1",
    "filterText": "numberOfPods",
    "insertText": "numberOfPods",
    "insertTextFormat": 2,
    "kind": 12,
    "label": "numberOfPods",
    "sortText": "100_numberOfPods",
    "textEdit": Object {
      "newText": "numberOfPods",
      "range": Object {
        "end": Object {
          "character": 28,
          "line": 16,
        },
        "start": Object {
          "character": 28,
          "line": 16,
        },
      },
    },
  },
]
`;

exports[`SWF LS YAML code completion Jq completions state data filter completions variables completion cursor before empty space 1`] = `140`;

exports[`SWF LS YAML code completion Jq completions state data filter completions variables completion cursor before empty space 2`] = `
Array [
  Object {
    "detail": "The builtin function length gets the length of various different types of value.",
    "filterText": "length",
    "insertText": "length",
    "insertTextFormat": 2,
    "kind": 3,
    "label": "length",
    "sortText": "100_length",
    "textEdit": Object {
      "newText": "length",
      "range": Object {
        "end": Object {
          "character": 27,
          "line": 16,
        },
        "start": Object {
          "character": 27,
          "line": 16,
        },
      },
    },
  },
  Object {
    "detail": "The builtin function utf8bytelength outputs the number of bytes used to encode a string in UTF-8.",
    "filterText": "utf8bytelength",
    "insertText": "utf8bytelength",
    "insertTextFormat": 2,
    "kind": 3,
    "label": "utf8bytelength",
    "sortText": "100_utf8bytelength",
    "textEdit": Object {
      "newText": "'utf8bytelength'",
      "range": Object {
        "end": Object {
          "character": 27,
          "line": 16,
        },
        "start": Object {
          "character": 27,
          "line": 16,
        },
      },
    },
  },
  Object {
    "detail": "The builtin function keys, when given an object, returns its keys in an array.",
    "filterText": "keys",
    "insertText": "keys",
    "insertTextFormat": 2,
    "kind": 3,
    "label": "keys",
    "sortText": "100_keys",
    "textEdit": Object {
      "newText": "keys",
      "range": Object {
        "end": Object {
          "character": 27,
          "line": 16,
        },
        "start": Object {
          "character": 27,
          "line": 16,
        },
      },
    },
  },
  Object {
    "detail": "The keys_unsorted function is just like keys, but if the input is an object then the keys will not be sorted, instead the keys will roughly be in insertion order.",
    "filterText": "keys_unsorted",
    "insertText": "keys_unsorted",
    "insertTextFormat": 2,
    "kind": 3,
    "label": "keys_unsorted",
    "sortText": "100_keys_unsorted",
    "textEdit": Object {
      "newText": "keys_unsorted",
      "range": Object {
        "end": Object {
          "character": 27,
          "line": 16,
        },
        "start": Object {
          "character": 27,
          "line": 16,
        },
      },
    },
  },
  Object {
    "detail": "The builtin function has returns whether the input object has the given key, or the input array has an element at the given index.",
    "filterText": "has(key)",
    "insertText": "has(key)",
    "insertTextFormat": 2,
    "kind": 3,
    "label": "has(key)",
    "sortText": "100_has(key)",
    "textEdit": Object {
      "newText": "has(key)",
      "range": Object {
        "end": Object {
          "character": 27,
          "line": 16,
        },
        "start": Object {
          "character": 27,
          "line": 16,
        },
      },
    },
  },
]
`;

exports[`SWF LS YAML code completion Jq completions state data filter completions variables completion cursor before the dot(variable) 1`] = `140`;

exports[`SWF LS YAML code completion Jq completions state data filter completions variables completion cursor before the dot(variable) 2`] = `
Array [
  Object {
    "detail": "The builtin function length gets the length of various different types of value.",
    "filterText": "length",
    "insertText": "length",
    "insertTextFormat": 2,
    "kind": 3,
    "label": "length",
    "sortText": "100_length",
    "textEdit": Object {
      "newText": "length",
      "range": Object {
        "end": Object {
          "character": 27,
          "line": 16,
        },
        "start": Object {
          "character": 27,
          "line": 16,
        },
      },
    },
  },
  Object {
    "detail": "The builtin function utf8bytelength outputs the number of bytes used to encode a string in UTF-8.",
    "filterText": "utf8bytelength",
    "insertText": "utf8bytelength",
    "insertTextFormat": 2,
    "kind": 3,
    "label": "utf8bytelength",
    "sortText": "100_utf8bytelength",
    "textEdit": Object {
      "newText": "'utf8bytelength'",
      "range": Object {
        "end": Object {
          "character": 27,
          "line": 16,
        },
        "start": Object {
          "character": 27,
          "line": 16,
        },
      },
    },
  },
  Object {
    "detail": "The builtin function keys, when given an object, returns its keys in an array.",
    "filterText": "keys",
    "insertText": "keys",
    "insertTextFormat": 2,
    "kind": 3,
    "label": "keys",
    "sortText": "100_keys",
    "textEdit": Object {
      "newText": "keys",
      "range": Object {
        "end": Object {
          "character": 27,
          "line": 16,
        },
        "start": Object {
          "character": 27,
          "line": 16,
        },
      },
    },
  },
  Object {
    "detail": "The keys_unsorted function is just like keys, but if the input is an object then the keys will not be sorted, instead the keys will roughly be in insertion order.",
    "filterText": "keys_unsorted",
    "insertText": "keys_unsorted",
    "insertTextFormat": 2,
    "kind": 3,
    "label": "keys_unsorted",
    "sortText": "100_keys_unsorted",
    "textEdit": Object {
      "newText": "keys_unsorted",
      "range": Object {
        "end": Object {
          "character": 27,
          "line": 16,
        },
        "start": Object {
          "character": 27,
          "line": 16,
        },
      },
    },
  },
  Object {
    "detail": "The builtin function has returns whether the input object has the given key, or the input array has an element at the given index.",
    "filterText": "has(key)",
    "insertText": "has(key)",
    "insertTextFormat": 2,
    "kind": 3,
    "label": "has(key)",
    "sortText": "100_has(key)",
    "textEdit": Object {
      "newText": "has(key)",
      "range": Object {
        "end": Object {
          "character": 27,
          "line": 16,
        },
        "start": Object {
          "character": 27,
          "line": 16,
        },
      },
    },
  },
]
`;

exports[`SWF LS YAML code completion Jq completions state data filter completions variables completion cursor with a space after the  dot(variable) 1`] = `140`;

exports[`SWF LS YAML code completion Jq completions state data filter completions variables completion cursor with a space after the  dot(variable) 2`] = `
Array [
  Object {
    "detail": "The builtin function length gets the length of various different types of value.",
    "filterText": "length",
    "insertText": "length",
    "insertTextFormat": 2,
    "kind": 3,
    "label": "length",
    "sortText": "100_length",
    "textEdit": Object {
      "newText": "length",
      "range": Object {
        "end": Object {
          "character": 29,
          "line": 16,
        },
        "start": Object {
          "character": 29,
          "line": 16,
        },
      },
    },
  },
  Object {
    "detail": "The builtin function utf8bytelength outputs the number of bytes used to encode a string in UTF-8.",
    "filterText": "utf8bytelength",
    "insertText": "utf8bytelength",
    "insertTextFormat": 2,
    "kind": 3,
    "label": "utf8bytelength",
    "sortText": "100_utf8bytelength",
    "textEdit": Object {
      "newText": "'utf8bytelength'",
      "range": Object {
        "end": Object {
          "character": 29,
          "line": 16,
        },
        "start": Object {
          "character": 29,
          "line": 16,
        },
      },
    },
  },
  Object {
    "detail": "The builtin function keys, when given an object, returns its keys in an array.",
    "filterText": "keys",
    "insertText": "keys",
    "insertTextFormat": 2,
    "kind": 3,
    "label": "keys",
    "sortText": "100_keys",
    "textEdit": Object {
      "newText": "keys",
      "range": Object {
        "end": Object {
          "character": 29,
          "line": 16,
        },
        "start": Object {
          "character": 29,
          "line": 16,
        },
      },
    },
  },
  Object {
    "detail": "The keys_unsorted function is just like keys, but if the input is an object then the keys will not be sorted, instead the keys will roughly be in insertion order.",
    "filterText": "keys_unsorted",
    "insertText": "keys_unsorted",
    "insertTextFormat": 2,
    "kind": 3,
    "label": "keys_unsorted",
    "sortText": "100_keys_unsorted",
    "textEdit": Object {
      "newText": "keys_unsorted",
      "range": Object {
        "end": Object {
          "character": 29,
          "line": 16,
        },
        "start": Object {
          "character": 29,
          "line": 16,
        },
      },
    },
  },
  Object {
    "detail": "The builtin function has returns whether the input object has the given key, or the input array has an element at the given index.",
    "filterText": "has(key)",
    "insertText": "has(key)",
    "insertTextFormat": 2,
    "kind": 3,
    "label": "has(key)",
    "sortText": "100_has(key)",
    "textEdit": Object {
      "newText": "has(key)",
      "range": Object {
        "end": Object {
          "character": 29,
          "line": 16,
        },
        "start": Object {
          "character": 29,
          "line": 16,
        },
      },
    },
  },
]
`;

exports[`SWF LS YAML code completion Jq completions state data filter completions variables completion cursor with a value following the  dot(variable) 1`] = `2`;

exports[`SWF LS YAML code completion Jq completions state data filter completions variables completion cursor with a value following the  dot(variable) 2`] = `
Array [
  Object {
    "detail": "1",
    "filterText": "a",
    "insertText": "age",
    "insertTextFormat": 2,
    "kind": 12,
    "label": "age",
    "sortText": "100_age",
    "textEdit": Object {
      "newText": "age",
      "range": Object {
        "end": Object {
          "character": 29,
          "line": 16,
        },
        "start": Object {
          "character": 28,
          "line": 16,
        },
      },
    },
  },
  Object {
    "detail": "string",
    "filterText": "a",
    "insertText": "avgLoad",
    "insertTextFormat": 2,
    "kind": 12,
    "label": "avgLoad",
    "sortText": "100_avgLoad",
    "textEdit": Object {
      "newText": "avgLoad",
      "range": Object {
        "end": Object {
          "character": 29,
          "line": 16,
        },
        "start": Object {
          "character": 28,
          "line": 16,
        },
      },
    },
  },
]
`;

exports[`SWF LS YAML code completion Jq completions state data filter completions variables completion empty object 1`] = `0`;

exports[`SWF LS YAML code completion Jq completions state data filter completions variables completion empty object 2`] = `Array []`;

exports[`SWF LS YAML code completion Jq completions state data filter completions variables completion empty object 3`] = `0`;

exports[`SWF LS YAML code completion Jq completions state data filter completions variables completion empty object 4`] = `Array []`;

exports[`SWF LS YAML code completion Jq completions state data filter completions variables completion empty object 5`] = `0`;

exports[`SWF LS YAML code completion Jq completions state data filter completions variables completion empty object 6`] = `Array []`;

exports[`SWF LS YAML code completion Jq completions state data filter completions variables completion fn: after some value 1`] = `2`;

exports[`SWF LS YAML code completion Jq completions state data filter completions variables completion fn: after some value 2`] = `
Array [
  Object {
    "detail": "Reusable functions(expressions) defined in the functions array",
    "filterText": "expressionFunc1",
    "insertText": "expressionFunc1",
    "insertTextFormat": 2,
    "kind": 3,
    "label": "expressionFunc1",
    "sortText": "100_expressionFunc1",
    "textEdit": Object {
      "newText": "'expressionFunc1'",
      "range": Object {
        "end": Object {
          "character": 39,
          "line": 16,
        },
        "start": Object {
          "character": 39,
          "line": 16,
        },
      },
    },
  },
  Object {
    "detail": "Reusable functions(expressions) defined in the functions array",
    "filterText": "expressionFunc2",
    "insertText": "expressionFunc2",
    "insertTextFormat": 2,
    "kind": 3,
    "label": "expressionFunc2",
    "sortText": "100_expressionFunc2",
    "textEdit": Object {
      "newText": "'expressionFunc2'",
      "range": Object {
        "end": Object {
          "character": 39,
          "line": 16,
        },
        "start": Object {
          "character": 39,
          "line": 16,
        },
      },
    },
  },
]
`;

exports[`SWF LS YAML code completion Jq completions state data filter completions variables completion fn: starting with a 1`] = `0`;

exports[`SWF LS YAML code completion Jq completions state data filter completions variables completion fn: starting with a 2`] = `Array []`;

exports[`SWF LS YAML code completion Jq completions state data filter completions variables completion fn: starting with r 1`] = `0`;

exports[`SWF LS YAML code completion Jq completions state data filter completions variables completion fn: starting with r 2`] = `Array []`;

exports[`SWF LS YAML code completion Jq completions state data filter completions variables completion no value/double quotes 1`] = `140`;

exports[`SWF LS YAML code completion Jq completions state data filter completions variables completion no value/double quotes 2`] = `
Array [
  Object {
    "detail": "The builtin function length gets the length of various different types of value.",
    "filterText": "length",
    "insertText": "length",
    "insertTextFormat": 2,
    "kind": 3,
    "label": "length",
    "sortText": "100_length",
    "textEdit": Object {
      "newText": "length",
      "range": Object {
        "end": Object {
          "character": 27,
          "line": 16,
        },
        "start": Object {
          "character": 27,
          "line": 16,
        },
      },
    },
  },
  Object {
    "detail": "The builtin function utf8bytelength outputs the number of bytes used to encode a string in UTF-8.",
    "filterText": "utf8bytelength",
    "insertText": "utf8bytelength",
    "insertTextFormat": 2,
    "kind": 3,
    "label": "utf8bytelength",
    "sortText": "100_utf8bytelength",
    "textEdit": Object {
      "newText": "'utf8bytelength'",
      "range": Object {
        "end": Object {
          "character": 27,
          "line": 16,
        },
        "start": Object {
          "character": 27,
          "line": 16,
        },
      },
    },
  },
  Object {
    "detail": "The builtin function keys, when given an object, returns its keys in an array.",
    "filterText": "keys",
    "insertText": "keys",
    "insertTextFormat": 2,
    "kind": 3,
    "label": "keys",
    "sortText": "100_keys",
    "textEdit": Object {
      "newText": "keys",
      "range": Object {
        "end": Object {
          "character": 27,
          "line": 16,
        },
        "start": Object {
          "character": 27,
          "line": 16,
        },
      },
    },
  },
  Object {
    "detail": "The keys_unsorted function is just like keys, but if the input is an object then the keys will not be sorted, instead the keys will roughly be in insertion order.",
    "filterText": "keys_unsorted",
    "insertText": "keys_unsorted",
    "insertTextFormat": 2,
    "kind": 3,
    "label": "keys_unsorted",
    "sortText": "100_keys_unsorted",
    "textEdit": Object {
      "newText": "keys_unsorted",
      "range": Object {
        "end": Object {
          "character": 27,
          "line": 16,
        },
        "start": Object {
          "character": 27,
          "line": 16,
        },
      },
    },
  },
  Object {
    "detail": "The builtin function has returns whether the input object has the given key, or the input array has an element at the given index.",
    "filterText": "has(key)",
    "insertText": "has(key)",
    "insertTextFormat": 2,
    "kind": 3,
    "label": "has(key)",
    "sortText": "100_has(key)",
    "textEdit": Object {
      "newText": "has(key)",
      "range": Object {
        "end": Object {
          "character": 27,
          "line": 16,
        },
        "start": Object {
          "character": 27,
          "line": 16,
        },
      },
    },
  },
]
`;

exports[`SWF LS YAML code completion Jq completions state data filter completions variables completion no value/single quotes 1`] = `140`;

exports[`SWF LS YAML code completion Jq completions state data filter completions variables completion no value/single quotes 2`] = `
Array [
  Object {
    "detail": "The builtin function length gets the length of various different types of value.",
    "filterText": "length",
    "insertText": "length",
    "insertTextFormat": 2,
    "kind": 3,
    "label": "length",
    "sortText": "100_length",
    "textEdit": Object {
      "newText": "length",
      "range": Object {
        "end": Object {
          "character": 27,
          "line": 16,
        },
        "start": Object {
          "character": 27,
          "line": 16,
        },
      },
    },
  },
  Object {
    "detail": "The builtin function utf8bytelength outputs the number of bytes used to encode a string in UTF-8.",
    "filterText": "utf8bytelength",
    "insertText": "utf8bytelength",
    "insertTextFormat": 2,
    "kind": 3,
    "label": "utf8bytelength",
    "sortText": "100_utf8bytelength",
    "textEdit": Object {
      "newText": "'utf8bytelength'",
      "range": Object {
        "end": Object {
          "character": 27,
          "line": 16,
        },
        "start": Object {
          "character": 27,
          "line": 16,
        },
      },
    },
  },
  Object {
    "detail": "The builtin function keys, when given an object, returns its keys in an array.",
    "filterText": "keys",
    "insertText": "keys",
    "insertTextFormat": 2,
    "kind": 3,
    "label": "keys",
    "sortText": "100_keys",
    "textEdit": Object {
      "newText": "keys",
      "range": Object {
        "end": Object {
          "character": 27,
          "line": 16,
        },
        "start": Object {
          "character": 27,
          "line": 16,
        },
      },
    },
  },
  Object {
    "detail": "The keys_unsorted function is just like keys, but if the input is an object then the keys will not be sorted, instead the keys will roughly be in insertion order.",
    "filterText": "keys_unsorted",
    "insertText": "keys_unsorted",
    "insertTextFormat": 2,
    "kind": 3,
    "label": "keys_unsorted",
    "sortText": "100_keys_unsorted",
    "textEdit": Object {
      "newText": "keys_unsorted",
      "range": Object {
        "end": Object {
          "character": 27,
          "line": 16,
        },
        "start": Object {
          "character": 27,
          "line": 16,
        },
      },
    },
  },
  Object {
    "detail": "The builtin function has returns whether the input object has the given key, or the input array has an element at the given index.",
    "filterText": "has(key)",
    "insertText": "has(key)",
    "insertTextFormat": 2,
    "kind": 3,
    "label": "has(key)",
    "sortText": "100_has(key)",
    "textEdit": Object {
      "newText": "has(key)",
      "range": Object {
        "end": Object {
          "character": 27,
          "line": 16,
        },
        "start": Object {
          "character": 27,
          "line": 16,
        },
      },
    },
  },
]
`;

exports[`SWF LS YAML code completion Jq completions state data filter completions variables completion space before fn: 1`] = `2`;

exports[`SWF LS YAML code completion Jq completions state data filter completions variables completion space before fn: 2`] = `
Array [
  Object {
    "detail": "Reusable functions(expressions) defined in the functions array",
    "filterText": "expressionFunc1",
    "insertText": "expressionFunc1",
    "insertTextFormat": 2,
    "kind": 3,
    "label": "expressionFunc1",
    "sortText": "100_expressionFunc1",
    "textEdit": Object {
      "newText": "'expressionFunc1'",
      "range": Object {
        "end": Object {
          "character": 31,
          "line": 16,
        },
        "start": Object {
          "character": 31,
          "line": 16,
        },
      },
    },
  },
  Object {
    "detail": "Reusable functions(expressions) defined in the functions array",
    "filterText": "expressionFunc2",
    "insertText": "expressionFunc2",
    "insertTextFormat": 2,
    "kind": 3,
    "label": "expressionFunc2",
    "sortText": "100_expressionFunc2",
    "textEdit": Object {
      "newText": "'expressionFunc2'",
      "range": Object {
        "end": Object {
          "character": 31,
          "line": 16,
        },
        "start": Object {
          "character": 31,
          "line": 16,
        },
      },
    },
  },
]
`;

exports[`SWF LS YAML code completion Jq completions state data filter completions variables completion value fn:/double quotes 1`] = `2`;

exports[`SWF LS YAML code completion Jq completions state data filter completions variables completion value fn:/double quotes 2`] = `
Array [
  Object {
    "detail": "Reusable functions(expressions) defined in the functions array",
    "filterText": "expressionFunc1",
    "insertText": "expressionFunc1",
    "insertTextFormat": 2,
    "kind": 3,
    "label": "expressionFunc1",
    "sortText": "100_expressionFunc1",
    "textEdit": Object {
      "newText": "'expressionFunc1'",
      "range": Object {
        "end": Object {
          "character": 30,
          "line": 16,
        },
        "start": Object {
          "character": 30,
          "line": 16,
        },
      },
    },
  },
  Object {
    "detail": "Reusable functions(expressions) defined in the functions array",
    "filterText": "expressionFunc2",
    "insertText": "expressionFunc2",
    "insertTextFormat": 2,
    "kind": 3,
    "label": "expressionFunc2",
    "sortText": "100_expressionFunc2",
    "textEdit": Object {
      "newText": "'expressionFunc2'",
      "range": Object {
        "end": Object {
          "character": 30,
          "line": 16,
        },
        "start": Object {
          "character": 30,
          "line": 16,
        },
      },
    },
  },
]
`;

exports[`SWF LS YAML code completion Jq completions state data filter completions variables completion value fn:/single quotes 1`] = `2`;

exports[`SWF LS YAML code completion Jq completions state data filter completions variables completion value fn:/single quotes 2`] = `
Array [
  Object {
    "detail": "Reusable functions(expressions) defined in the functions array",
    "filterText": "expressionFunc1",
    "insertText": "expressionFunc1",
    "insertTextFormat": 2,
    "kind": 3,
    "label": "expressionFunc1",
    "sortText": "100_expressionFunc1",
    "textEdit": Object {
      "newText": "'expressionFunc1'",
      "range": Object {
        "end": Object {
          "character": 30,
          "line": 16,
        },
        "start": Object {
          "character": 30,
          "line": 16,
        },
      },
    },
  },
  Object {
    "detail": "Reusable functions(expressions) defined in the functions array",
    "filterText": "expressionFunc2",
    "insertText": "expressionFunc2",
    "insertTextFormat": 2,
    "kind": 3,
    "label": "expressionFunc2",
    "sortText": "100_expressionFunc2",
    "textEdit": Object {
      "newText": "'expressionFunc2'",
      "range": Object {
        "end": Object {
          "character": 30,
          "line": 16,
        },
        "start": Object {
          "character": 30,
          "line": 16,
        },
      },
    },
  },
]
`;

exports[`SWF LS YAML code completion empty file completion empty file with a newline after the cursor 1`] = `2`;

exports[`SWF LS YAML code completion empty file completion empty file with a newline after the cursor 2`] = `
Array [
  Object {
    "detail": "Start with a simple Serverless Workflow",
    "insertTextFormat": 2,
    "kind": 1,
    "label": "Serverless Workflow Example",
    "sortText": "100_Serverless Workflow Example",
    "textEdit": Object {
      "newText": "id: '\${1:Workflow unique identifier}'
version: '\${2:0.1}'
specVersion: '\${3:0.8}'
name: '\${4:Workflow name}'
description: '\${5:Workflow description}'
start: '\${13}'
functions:
  - name: '\${7:uniqueFunctionName}'
    operation: '\${8:localhost#operation}'
    type: '\${9:rest}'
events:
  - name: '\${10:Unique event name}'
    source: '\${11:CloudEvent source}'
    type: '\${12:CloudEvent type}'
states:
  - name: '\${13:StartState}'
    type: '\${14:operation}'
    actions:
      - name: '\${15:uniqueActionName}'
        functionRef:
          refName: '\${7}'
          arguments:
            firstArgument: ''
            secondArgument: ''
    end: true",
      "range": Object {
        "end": Object {
          "character": 0,
          "line": 0,
        },
        "start": Object {
          "character": 0,
          "line": 0,
        },
      },
    },
  },
  Object {
    "detail": "Start with an empty Serverless Workflow",
    "insertTextFormat": 2,
    "kind": 1,
    "label": "Empty Serverless Workflow",
    "sortText": "100_Empty Serverless Workflow",
    "textEdit": Object {
      "newText": "id: '\${1:Workflow unique identifier}'
version: '\${2:0.1}'
specVersion: '\${3:0.8}'
name: '\${4:Workflow name}'
description: '\${5:Workflow description}'
start: '\${13}'
functions: []
events: []
states: []",
      "range": Object {
        "end": Object {
          "character": 0,
          "line": 0,
        },
        "start": Object {
          "character": 0,
          "line": 0,
        },
      },
    },
  },
]
`;

exports[`SWF LS YAML code completion empty file completion empty file with a newline before the cursor 1`] = `2`;

exports[`SWF LS YAML code completion empty file completion empty file with a newline before the cursor 2`] = `
Array [
  Object {
    "detail": "Start with a simple Serverless Workflow",
    "insertTextFormat": 2,
    "kind": 1,
    "label": "Serverless Workflow Example",
    "sortText": "100_Serverless Workflow Example",
    "textEdit": Object {
      "newText": "id: '\${1:Workflow unique identifier}'
version: '\${2:0.1}'
specVersion: '\${3:0.8}'
name: '\${4:Workflow name}'
description: '\${5:Workflow description}'
start: '\${13}'
functions:
  - name: '\${7:uniqueFunctionName}'
    operation: '\${8:localhost#operation}'
    type: '\${9:rest}'
events:
  - name: '\${10:Unique event name}'
    source: '\${11:CloudEvent source}'
    type: '\${12:CloudEvent type}'
states:
  - name: '\${13:StartState}'
    type: '\${14:operation}'
    actions:
      - name: '\${15:uniqueActionName}'
        functionRef:
          refName: '\${7}'
          arguments:
            firstArgument: ''
            secondArgument: ''
    end: true",
      "range": Object {
        "end": Object {
          "character": 0,
          "line": 1,
        },
        "start": Object {
          "character": 0,
          "line": 1,
        },
      },
    },
  },
  Object {
    "detail": "Start with an empty Serverless Workflow",
    "insertTextFormat": 2,
    "kind": 1,
    "label": "Empty Serverless Workflow",
    "sortText": "100_Empty Serverless Workflow",
    "textEdit": Object {
      "newText": "id: '\${1:Workflow unique identifier}'
version: '\${2:0.1}'
specVersion: '\${3:0.8}'
name: '\${4:Workflow name}'
description: '\${5:Workflow description}'
start: '\${13}'
functions: []
events: []
states: []",
      "range": Object {
        "end": Object {
          "character": 0,
          "line": 1,
        },
        "start": Object {
          "character": 0,
          "line": 1,
        },
      },
    },
  },
]
`;

exports[`SWF LS YAML code completion empty file completion total empty file 1`] = `2`;

exports[`SWF LS YAML code completion empty file completion total empty file 2`] = `
Array [
  Object {
    "detail": "Start with a simple Serverless Workflow",
    "insertTextFormat": 2,
    "kind": 1,
    "label": "Serverless Workflow Example",
    "sortText": "100_Serverless Workflow Example",
    "textEdit": Object {
      "newText": "id: '\${1:Workflow unique identifier}'
version: '\${2:0.1}'
specVersion: '\${3:0.8}'
name: '\${4:Workflow name}'
description: '\${5:Workflow description}'
start: '\${13}'
functions:
  - name: '\${7:uniqueFunctionName}'
    operation: '\${8:localhost#operation}'
    type: '\${9:rest}'
events:
  - name: '\${10:Unique event name}'
    source: '\${11:CloudEvent source}'
    type: '\${12:CloudEvent type}'
states:
  - name: '\${13:StartState}'
    type: '\${14:operation}'
    actions:
      - name: '\${15:uniqueActionName}'
        functionRef:
          refName: '\${7}'
          arguments:
            firstArgument: ''
            secondArgument: ''
    end: true",
      "range": Object {
        "end": Object {
          "character": 0,
          "line": 0,
        },
        "start": Object {
          "character": 0,
          "line": 0,
        },
      },
    },
  },
  Object {
    "detail": "Start with an empty Serverless Workflow",
    "insertTextFormat": 2,
    "kind": 1,
    "label": "Empty Serverless Workflow",
    "sortText": "100_Empty Serverless Workflow",
    "textEdit": Object {
      "newText": "id: '\${1:Workflow unique identifier}'
version: '\${2:0.1}'
specVersion: '\${3:0.8}'
name: '\${4:Workflow name}'
description: '\${5:Workflow description}'
start: '\${13}'
functions: []
events: []
states: []",
      "range": Object {
        "end": Object {
          "character": 0,
          "line": 0,
        },
        "start": Object {
          "character": 0,
          "line": 0,
        },
      },
    },
  },
]
`;

exports[`SWF LS YAML code completion eventRefs completion add at the beginning / with extra indentation / using the code lenses 1`] = `1`;

exports[`SWF LS YAML code completion eventRefs completion add at the beginning / with extra indentation / using the code lenses 2`] = `
Array [
  Object {
    "detail": "\\"GreetEvent\\"",
    "filterText": "GreetEvent",
    "insertTextFormat": 2,
    "kind": 12,
    "label": "GreetEvent",
    "sortText": "100_GreetEvent",
    "textEdit": Object {
      "newText": "GreetEvent",
      "range": Object {
        "end": Object {
          "character": 6,
          "line": 5,
        },
        "start": Object {
          "character": 6,
          "line": 5,
        },
      },
    },
  },
]
`;

exports[`SWF LS YAML code completion eventRefs completion add at the beginning 1`] = `1`;

exports[`SWF LS YAML code completion eventRefs completion add at the beginning 2`] = `
Array [
  Object {
    "detail": "\\"GreetEvent\\"",
    "filterText": "GreetEvent",
    "insertTextFormat": 2,
    "kind": 12,
    "label": "GreetEvent",
    "sortText": "100_GreetEvent",
    "textEdit": Object {
      "newText": "GreetEvent",
      "range": Object {
        "end": Object {
          "character": 6,
          "line": 5,
        },
        "start": Object {
          "character": 6,
          "line": 5,
        },
      },
    },
  },
]
`;

exports[`SWF LS YAML code completion eventRefs completion add at the beginning, using the code lenses 1`] = `1`;

exports[`SWF LS YAML code completion eventRefs completion add at the beginning, using the code lenses 2`] = `
Array [
  Object {
    "detail": "\\"GreetEvent\\"",
    "filterText": "GreetEvent",
    "insertTextFormat": 2,
    "kind": 12,
    "label": "GreetEvent",
    "sortText": "100_GreetEvent",
    "textEdit": Object {
      "newText": "GreetEvent",
      "range": Object {
        "end": Object {
          "character": 4,
          "line": 5,
        },
        "start": Object {
          "character": 4,
          "line": 5,
        },
      },
    },
  },
]
`;

exports[`SWF LS YAML code completion eventRefs completion add at the end 1`] = `1`;

exports[`SWF LS YAML code completion eventRefs completion add at the end 2`] = `
Array [
  Object {
    "detail": "\\"GreetEvent\\"",
    "filterText": "GreetEvent",
    "insertTextFormat": 2,
    "kind": 12,
    "label": "GreetEvent",
    "sortText": "100_GreetEvent",
    "textEdit": Object {
      "newText": "GreetEvent",
      "range": Object {
        "end": Object {
          "character": 6,
          "line": 6,
        },
        "start": Object {
          "character": 6,
          "line": 6,
        },
      },
    },
  },
]
`;

exports[`SWF LS YAML code completion eventRefs completion add in the middle / without dash character 1`] = `0`;

exports[`SWF LS YAML code completion eventRefs completion add in the middle / without dash character 2`] = `Array []`;

exports[`SWF LS YAML code completion eventRefs completion add in the middle 1`] = `1`;

exports[`SWF LS YAML code completion eventRefs completion add in the middle 2`] = `
Array [
  Object {
    "detail": "\\"GreetEvent\\"",
    "filterText": "GreetEvent",
    "insertTextFormat": 2,
    "kind": 12,
    "label": "GreetEvent",
    "sortText": "100_GreetEvent",
    "textEdit": Object {
      "newText": "GreetEvent",
      "range": Object {
        "end": Object {
          "character": 6,
          "line": 6,
        },
        "start": Object {
          "character": 6,
          "line": 6,
        },
      },
    },
  },
]
`;

exports[`SWF LS YAML code completion eventRefs completion empty completion items / with extra space 1`] = `1`;

exports[`SWF LS YAML code completion eventRefs completion empty completion items / with extra space 2`] = `
Array [
  Object {
    "detail": "\\"GreetEvent\\"",
    "filterText": "GreetEvent",
    "insertTextFormat": 2,
    "kind": 12,
    "label": "GreetEvent",
    "sortText": "100_GreetEvent",
    "textEdit": Object {
      "newText": "GreetEvent",
      "range": Object {
        "end": Object {
          "character": 6,
          "line": 5,
        },
        "start": Object {
          "character": 6,
          "line": 5,
        },
      },
    },
  },
]
`;

exports[`SWF LS YAML code completion eventRefs completion empty completion items 1`] = `0`;

exports[`SWF LS YAML code completion eventRefs completion empty completion items 2`] = `Array []`;

exports[`SWF LS YAML code completion events completion add at the beginning / with double extra indentation / using the code lenses 1`] = `1`;

exports[`SWF LS YAML code completion events completion add at the beginning / with double extra indentation / using the code lenses 2`] = `
Array [
  Object {
    "detail": "Add a new event",
    "filterText": "New event",
    "insertTextFormat": 2,
    "kind": 8,
    "label": "New event",
    "sortText": "100_New event",
    "textEdit": Object {
      "newText": "- name: '\${1:Unique event name}'
  source: '\${2:CloudEvent source}'
  type: '\${3:CloudEvent type}'
",
      "range": Object {
        "end": Object {
          "character": 4,
          "line": 1,
        },
        "start": Object {
          "character": 4,
          "line": 1,
        },
      },
    },
  },
]
`;

exports[`SWF LS YAML code completion events completion add at the beginning / with extra indentation / using the code lenses 1`] = `1`;

exports[`SWF LS YAML code completion events completion add at the beginning / with extra indentation / using the code lenses 2`] = `
Array [
  Object {
    "detail": "Add a new event",
    "filterText": "New event",
    "insertTextFormat": 2,
    "kind": 8,
    "label": "New event",
    "sortText": "100_New event",
    "textEdit": Object {
      "newText": "- name: '\${1:Unique event name}'
  source: '\${2:CloudEvent source}'
  type: '\${3:CloudEvent type}'
",
      "range": Object {
        "end": Object {
          "character": 2,
          "line": 1,
        },
        "start": Object {
          "character": 2,
          "line": 1,
        },
      },
    },
  },
]
`;

exports[`SWF LS YAML code completion events completion add at the beginning 1`] = `1`;

exports[`SWF LS YAML code completion events completion add at the beginning 2`] = `
Array [
  Object {
    "detail": "Add a new event",
    "filterText": "New event",
    "insertTextFormat": 2,
    "kind": 8,
    "label": "New event",
    "sortText": "100_New event",
    "textEdit": Object {
      "newText": "name: '\${1:Unique event name}'
  source: '\${2:CloudEvent source}'
  type: '\${3:CloudEvent type}'",
      "range": Object {
        "end": Object {
          "character": 2,
          "line": 1,
        },
        "start": Object {
          "character": 2,
          "line": 1,
        },
      },
    },
  },
]
`;

exports[`SWF LS YAML code completion events completion add at the beginning, using the code lenses 1`] = `1`;

exports[`SWF LS YAML code completion events completion add at the beginning, using the code lenses 2`] = `
Array [
  Object {
    "detail": "Add a new event",
    "filterText": "New event",
    "insertTextFormat": 2,
    "kind": 8,
    "label": "New event",
    "sortText": "100_New event",
    "textEdit": Object {
      "newText": "- name: '\${1:Unique event name}'
  source: '\${2:CloudEvent source}'
  type: '\${3:CloudEvent type}'
",
      "range": Object {
        "end": Object {
          "character": 0,
          "line": 1,
        },
        "start": Object {
          "character": 0,
          "line": 1,
        },
      },
    },
  },
]
`;

exports[`SWF LS YAML code completion events completion add at the end 1`] = `1`;

exports[`SWF LS YAML code completion events completion add at the end 2`] = `
Array [
  Object {
    "detail": "Add a new event",
    "filterText": "New event",
    "insertTextFormat": 2,
    "kind": 8,
    "label": "New event",
    "sortText": "100_New event",
    "textEdit": Object {
      "newText": "name: '\${1:Unique event name}'
  source: '\${2:CloudEvent source}'
  type: '\${3:CloudEvent type}'",
      "range": Object {
        "end": Object {
          "character": 2,
          "line": 2,
        },
        "start": Object {
          "character": 2,
          "line": 2,
        },
      },
    },
  },
]
`;

exports[`SWF LS YAML code completion events completion add in the middle / without dash character 1`] = `0`;

exports[`SWF LS YAML code completion events completion add in the middle / without dash character 2`] = `Array []`;

exports[`SWF LS YAML code completion events completion add in the middle 1`] = `1`;

exports[`SWF LS YAML code completion events completion add in the middle 2`] = `
Array [
  Object {
    "detail": "Add a new event",
    "filterText": "New event",
    "insertTextFormat": 2,
    "kind": 8,
    "label": "New event",
    "sortText": "100_New event",
    "textEdit": Object {
      "newText": "name: '\${1:Unique event name}'
  source: '\${2:CloudEvent source}'
  type: '\${3:CloudEvent type}'",
      "range": Object {
        "end": Object {
          "character": 2,
          "line": 2,
        },
        "start": Object {
          "character": 2,
          "line": 2,
        },
      },
    },
  },
]
`;

exports[`SWF LS YAML code completion events completion empty completion items / with extra space 1`] = `1`;

exports[`SWF LS YAML code completion events completion empty completion items / with extra space 2`] = `
Array [
  Object {
    "detail": "Add a new event",
    "filterText": "New event",
    "insertTextFormat": 2,
    "kind": 8,
    "label": "New event",
    "sortText": "100_New event",
    "textEdit": Object {
      "newText": "name: '\${1:Unique event name}'
  source: '\${2:CloudEvent source}'
  type: '\${3:CloudEvent type}'",
      "range": Object {
        "end": Object {
          "character": 2,
          "line": 1,
        },
        "start": Object {
          "character": 2,
          "line": 1,
        },
      },
    },
  },
]
`;

exports[`SWF LS YAML code completion events completion empty completion items 1`] = `0`;

exports[`SWF LS YAML code completion events completion empty completion items 2`] = `Array []`;

exports[`SWF LS YAML code completion functionRef arguments completion using JSON format 1`] = `0`;

exports[`SWF LS YAML code completion functionRef arguments completion using JSON format 2`] = `Array []`;

exports[`SWF LS YAML code completion functionRef arguments completion with same level content after 1`] = `1`;

exports[`SWF LS YAML code completion functionRef arguments completion with same level content after 2`] = `
Array [
  Object {
    "detail": "specs/testRelativeService1.yml#testRelativeFunction1",
    "filterText": "'testRelativeFunction1' arguments",
    "insertTextFormat": 2,
    "kind": 9,
    "label": "'testRelativeFunction1' arguments",
    "sortText": "100_'testRelativeFunction1' arguments",
    "textEdit": Object {
      "newText": "
  argString: '\${1:}'
  argNumber: '\${2:}'
  argBoolean: '\${3:}'",
      "range": Object {
        "end": Object {
          "character": 17,
          "line": 13,
        },
        "start": Object {
          "character": 17,
          "line": 13,
        },
      },
    },
  },
]
`;

exports[`SWF LS YAML code completion functionRef arguments completion without any function arguments to complete 1`] = `0`;

exports[`SWF LS YAML code completion functionRef arguments completion without any function arguments to complete 2`] = `Array []`;

exports[`SWF LS YAML code completion functionRef arguments completion without same level content after / without space after property name 1`] = `0`;

exports[`SWF LS YAML code completion functionRef arguments completion without same level content after / without space after property name 2`] = `Array []`;

exports[`SWF LS YAML code completion functionRef arguments completion without same level content after 1`] = `1`;

exports[`SWF LS YAML code completion functionRef arguments completion without same level content after 2`] = `
Array [
  Object {
    "detail": "specs/testRelativeService1.yml#testRelativeFunction1",
    "filterText": "'testRelativeFunction1' arguments",
    "insertTextFormat": 2,
    "kind": 9,
    "label": "'testRelativeFunction1' arguments",
    "sortText": "100_'testRelativeFunction1' arguments",
    "textEdit": Object {
      "newText": "
  argString: '\${1:}'
  argNumber: '\${2:}'
  argBoolean: '\${3:}'",
      "range": Object {
        "end": Object {
          "character": 17,
          "line": 13,
        },
        "start": Object {
          "character": 17,
          "line": 13,
        },
      },
    },
  },
]
`;

exports[`SWF LS YAML code completion functionRef completion with same level content after 1`] = `1`;

exports[`SWF LS YAML code completion functionRef completion with same level content after 2`] = `
Array [
  Object {
    "detail": "specs/testRelativeService1.yml#testRelativeFunction1",
    "filterText": "testRelativeFunction1",
    "insertTextFormat": 2,
    "kind": 9,
    "label": "testRelativeFunction1",
    "sortText": "100_testRelativeFunction1",
    "textEdit": Object {
      "newText": "
  refName: 'testRelativeFunction1'
  arguments:
    argString: '\${1:}'
    argNumber: '\${2:}'
    argBoolean: '\${3:}'",
      "range": Object {
        "end": Object {
          "character": 17,
          "line": 10,
        },
        "start": Object {
          "character": 17,
          "line": 10,
        },
      },
    },
  },
]
`;

exports[`SWF LS YAML code completion functionRef completion without same level content after 1`] = `1`;

exports[`SWF LS YAML code completion functionRef completion without same level content after 2`] = `
Array [
  Object {
    "detail": "specs/testRelativeService1.yml#testRelativeFunction1",
    "filterText": "testRelativeFunction1",
    "insertTextFormat": 2,
    "kind": 9,
    "label": "testRelativeFunction1",
    "sortText": "100_testRelativeFunction1",
    "textEdit": Object {
      "newText": "
  refName: 'testRelativeFunction1'
  arguments:
    argString: '\${1:}'
    argNumber: '\${2:}'
    argBoolean: '\${3:}'",
      "range": Object {
        "end": Object {
          "character": 17,
          "line": 11,
        },
        "start": Object {
          "character": 17,
          "line": 11,
        },
      },
    },
  },
]
`;

exports[`SWF LS YAML code completion functionRef refName completion inside double quotes / with same level content after 1`] = `1`;

exports[`SWF LS YAML code completion functionRef refName completion inside double quotes / with same level content after 2`] = `
Array [
  Object {
    "detail": "\\"myFunc\\"",
    "filterText": "myFunc",
    "insertTextFormat": 2,
    "kind": 12,
    "label": "myFunc",
    "sortText": "100_myFunc",
    "textEdit": Object {
      "newText": "myFunc",
      "range": Object {
        "end": Object {
          "character": 17,
          "line": 12,
        },
        "start": Object {
          "character": 15,
          "line": 12,
        },
      },
    },
  },
]
`;

exports[`SWF LS YAML code completion functionRef refName completion inside double quotes / without same level content after 1`] = `1`;

exports[`SWF LS YAML code completion functionRef refName completion inside double quotes / without same level content after 2`] = `
Array [
  Object {
    "detail": "\\"myFunc\\"",
    "filterText": "myFunc",
    "insertTextFormat": 2,
    "kind": 12,
    "label": "myFunc",
    "sortText": "100_myFunc",
    "textEdit": Object {
      "newText": "myFunc",
      "range": Object {
        "end": Object {
          "character": 17,
          "line": 12,
        },
        "start": Object {
          "character": 15,
          "line": 12,
        },
      },
    },
  },
]
`;

exports[`SWF LS YAML code completion functionRef refName completion inside single quotes / without same level content after 1`] = `1`;

exports[`SWF LS YAML code completion functionRef refName completion inside single quotes / without same level content after 2`] = `
Array [
  Object {
    "detail": "\\"myFunc\\"",
    "filterText": "myFunc",
    "insertTextFormat": 2,
    "kind": 12,
    "label": "myFunc",
    "sortText": "100_myFunc",
    "textEdit": Object {
      "newText": "myFunc",
      "range": Object {
        "end": Object {
          "character": 17,
          "line": 12,
        },
        "start": Object {
          "character": 15,
          "line": 12,
        },
      },
    },
  },
]
`;

exports[`SWF LS YAML code completion functionRef refName completion not in quotes / with same level content after 1`] = `1`;

exports[`SWF LS YAML code completion functionRef refName completion not in quotes / with same level content after 2`] = `
Array [
  Object {
    "detail": "\\"myFunc\\"",
    "filterText": "myFunc",
    "insertTextFormat": 2,
    "kind": 12,
    "label": "myFunc",
    "sortText": "100_myFunc",
    "textEdit": Object {
      "newText": "myFunc",
      "range": Object {
        "end": Object {
          "character": 15,
          "line": 12,
        },
        "start": Object {
          "character": 15,
          "line": 12,
        },
      },
    },
  },
]
`;

exports[`SWF LS YAML code completion functionRef refName completion not in quotes / without same level content after 1`] = `1`;

exports[`SWF LS YAML code completion functionRef refName completion not in quotes / without same level content after 2`] = `
Array [
  Object {
    "detail": "\\"myFunc\\"",
    "filterText": "myFunc",
    "insertTextFormat": 2,
    "kind": 12,
    "label": "myFunc",
    "sortText": "100_myFunc",
    "textEdit": Object {
      "newText": "myFunc",
      "range": Object {
        "end": Object {
          "character": 15,
          "line": 12,
        },
        "start": Object {
          "character": 15,
          "line": 12,
        },
      },
    },
  },
]
`;

exports[`SWF LS YAML code completion functionRef refName completion not in quotes / without space after property name 1`] = `0`;

exports[`SWF LS YAML code completion functionRef refName completion not in quotes / without space after property name 2`] = `Array []`;

exports[`SWF LS YAML code completion functions completion add at the beginning / with double extra indentation / using the code lenses 1`] = `2`;

exports[`SWF LS YAML code completion functions completion add at the beginning / with double extra indentation / using the code lenses 2`] = `
Array [
  Object {
    "command": Object {
      "arguments": Array [
        Object {
          "containingService": Object {
            "functions": Array [
              Object {
                "arguments": Object {
                  "argBoolean": "boolean",
                  "argNumber": "number",
                  "argString": "string",
                },
                "name": "testRelativeFunction1",
                "operation": "specs/testRelativeService1.yml#testRelativeFunction1",
                "source": Object {
                  "serviceFileAbsolutePath": "/Users/tiago/Desktop/testRelativeService1.yml",
                  "type": "LOCAL_FS",
                },
                "type": "rest",
              },
            ],
            "name": "testRelativeService1",
            "rawContent": "",
            "source": Object {
              "absoluteFilePath": "/Users/tiago/Desktop/testRelativeService1.yml",
              "type": "LOCAL_FS",
            },
            "type": "rest",
          },
          "documentUri": "test.sw.yaml",
        },
      ],
      "command": "swf.ls.commands.ImportFunctionFromCompletionItem",
      "title": "Import function from completion item",
    },
    "detail": "specs/testRelativeService1.yml#testRelativeFunction1",
    "filterText": "specs»testRelativeService1.yml#testRelativeFunction1",
    "insertTextFormat": 2,
    "kind": 18,
    "label": "specs»testRelativeService1.yml#testRelativeFunction1",
    "sortText": "100_specs»testRelativeService1.yml#testRelativeFunction1",
    "textEdit": Object {
      "newText": "- name: '\${1:testRelativeFunction1}'
  operation: 'specs/testRelativeService1.yml#testRelativeFunction1'
  type: rest
",
      "range": Object {
        "end": Object {
          "character": 4,
          "line": 1,
        },
        "start": Object {
          "character": 4,
          "line": 1,
        },
      },
    },
  },
  Object {
    "detail": "Add a new function",
    "filterText": "New function",
    "insertTextFormat": 2,
    "kind": 8,
    "label": "New function",
    "sortText": "100_New function",
    "textEdit": Object {
      "newText": "- name: '\${1:Unique function name}'
  operation: '\${2:localhost#operation}'
  type: '\${3:Function type}'
",
      "range": Object {
        "end": Object {
          "character": 4,
          "line": 1,
        },
        "start": Object {
          "character": 4,
          "line": 1,
        },
      },
    },
  },
]
`;

exports[`SWF LS YAML code completion functions completion add at the beginning / with extra indentation / using the code lenses 1`] = `2`;

exports[`SWF LS YAML code completion functions completion add at the beginning / with extra indentation / using the code lenses 2`] = `
Array [
  Object {
    "command": Object {
      "arguments": Array [
        Object {
          "containingService": Object {
            "functions": Array [
              Object {
                "arguments": Object {
                  "argBoolean": "boolean",
                  "argNumber": "number",
                  "argString": "string",
                },
                "name": "testRelativeFunction1",
                "operation": "specs/testRelativeService1.yml#testRelativeFunction1",
                "source": Object {
                  "serviceFileAbsolutePath": "/Users/tiago/Desktop/testRelativeService1.yml",
                  "type": "LOCAL_FS",
                },
                "type": "rest",
              },
            ],
            "name": "testRelativeService1",
            "rawContent": "",
            "source": Object {
              "absoluteFilePath": "/Users/tiago/Desktop/testRelativeService1.yml",
              "type": "LOCAL_FS",
            },
            "type": "rest",
          },
          "documentUri": "test.sw.yaml",
        },
      ],
      "command": "swf.ls.commands.ImportFunctionFromCompletionItem",
      "title": "Import function from completion item",
    },
    "detail": "specs/testRelativeService1.yml#testRelativeFunction1",
    "filterText": "specs»testRelativeService1.yml#testRelativeFunction1",
    "insertTextFormat": 2,
    "kind": 18,
    "label": "specs»testRelativeService1.yml#testRelativeFunction1",
    "sortText": "100_specs»testRelativeService1.yml#testRelativeFunction1",
    "textEdit": Object {
      "newText": "- name: '\${1:testRelativeFunction1}'
  operation: 'specs/testRelativeService1.yml#testRelativeFunction1'
  type: rest
",
      "range": Object {
        "end": Object {
          "character": 2,
          "line": 1,
        },
        "start": Object {
          "character": 2,
          "line": 1,
        },
      },
    },
  },
  Object {
    "detail": "Add a new function",
    "filterText": "New function",
    "insertTextFormat": 2,
    "kind": 8,
    "label": "New function",
    "sortText": "100_New function",
    "textEdit": Object {
      "newText": "- name: '\${1:Unique function name}'
  operation: '\${2:localhost#operation}'
  type: '\${3:Function type}'
",
      "range": Object {
        "end": Object {
          "character": 2,
          "line": 1,
        },
        "start": Object {
          "character": 2,
          "line": 1,
        },
      },
    },
  },
]
`;

exports[`SWF LS YAML code completion functions completion add at the beginning 1`] = `2`;

exports[`SWF LS YAML code completion functions completion add at the beginning 2`] = `
Array [
  Object {
    "command": Object {
      "arguments": Array [
        Object {
          "containingService": Object {
            "functions": Array [
              Object {
                "arguments": Object {
                  "argBoolean": "boolean",
                  "argNumber": "number",
                  "argString": "string",
                },
                "name": "testRelativeFunction1",
                "operation": "specs/testRelativeService1.yml#testRelativeFunction1",
                "source": Object {
                  "serviceFileAbsolutePath": "/Users/tiago/Desktop/testRelativeService1.yml",
                  "type": "LOCAL_FS",
                },
                "type": "rest",
              },
            ],
            "name": "testRelativeService1",
            "rawContent": "",
            "source": Object {
              "absoluteFilePath": "/Users/tiago/Desktop/testRelativeService1.yml",
              "type": "LOCAL_FS",
            },
            "type": "rest",
          },
          "documentUri": "test.sw.yaml",
        },
      ],
      "command": "swf.ls.commands.ImportFunctionFromCompletionItem",
      "title": "Import function from completion item",
    },
    "detail": "specs/testRelativeService1.yml#testRelativeFunction1",
    "filterText": "specs»testRelativeService1.yml#testRelativeFunction1",
    "insertTextFormat": 2,
    "kind": 18,
    "label": "specs»testRelativeService1.yml#testRelativeFunction1",
    "sortText": "100_specs»testRelativeService1.yml#testRelativeFunction1",
    "textEdit": Object {
      "newText": "name: '\${1:testRelativeFunction1}'
  operation: 'specs/testRelativeService1.yml#testRelativeFunction1'
  type: rest",
      "range": Object {
        "end": Object {
          "character": 2,
          "line": 1,
        },
        "start": Object {
          "character": 2,
          "line": 1,
        },
      },
    },
  },
  Object {
    "detail": "Add a new function",
    "filterText": "New function",
    "insertTextFormat": 2,
    "kind": 8,
    "label": "New function",
    "sortText": "100_New function",
    "textEdit": Object {
      "newText": "name: '\${1:Unique function name}'
  operation: '\${2:localhost#operation}'
  type: '\${3:Function type}'",
      "range": Object {
        "end": Object {
          "character": 2,
          "line": 1,
        },
        "start": Object {
          "character": 2,
          "line": 1,
        },
      },
    },
  },
]
`;

exports[`SWF LS YAML code completion functions completion add at the beginning, using the code lenses 1`] = `2`;

exports[`SWF LS YAML code completion functions completion add at the beginning, using the code lenses 2`] = `
Array [
  Object {
    "command": Object {
      "arguments": Array [
        Object {
          "containingService": Object {
            "functions": Array [
              Object {
                "arguments": Object {
                  "argBoolean": "boolean",
                  "argNumber": "number",
                  "argString": "string",
                },
                "name": "testRelativeFunction1",
                "operation": "specs/testRelativeService1.yml#testRelativeFunction1",
                "source": Object {
                  "serviceFileAbsolutePath": "/Users/tiago/Desktop/testRelativeService1.yml",
                  "type": "LOCAL_FS",
                },
                "type": "rest",
              },
            ],
            "name": "testRelativeService1",
            "rawContent": "",
            "source": Object {
              "absoluteFilePath": "/Users/tiago/Desktop/testRelativeService1.yml",
              "type": "LOCAL_FS",
            },
            "type": "rest",
          },
          "documentUri": "test.sw.yaml",
        },
      ],
      "command": "swf.ls.commands.ImportFunctionFromCompletionItem",
      "title": "Import function from completion item",
    },
    "detail": "specs/testRelativeService1.yml#testRelativeFunction1",
    "filterText": "specs»testRelativeService1.yml#testRelativeFunction1",
    "insertTextFormat": 2,
    "kind": 18,
    "label": "specs»testRelativeService1.yml#testRelativeFunction1",
    "sortText": "100_specs»testRelativeService1.yml#testRelativeFunction1",
    "textEdit": Object {
      "newText": "- name: '\${1:testRelativeFunction1}'
  operation: 'specs/testRelativeService1.yml#testRelativeFunction1'
  type: rest
",
      "range": Object {
        "end": Object {
          "character": 0,
          "line": 1,
        },
        "start": Object {
          "character": 0,
          "line": 1,
        },
      },
    },
  },
  Object {
    "detail": "Add a new function",
    "filterText": "New function",
    "insertTextFormat": 2,
    "kind": 8,
    "label": "New function",
    "sortText": "100_New function",
    "textEdit": Object {
      "newText": "- name: '\${1:Unique function name}'
  operation: '\${2:localhost#operation}'
  type: '\${3:Function type}'
",
      "range": Object {
        "end": Object {
          "character": 0,
          "line": 1,
        },
        "start": Object {
          "character": 0,
          "line": 1,
        },
      },
    },
  },
]
`;

exports[`SWF LS YAML code completion functions completion add at the end 1`] = `2`;

exports[`SWF LS YAML code completion functions completion add at the end 2`] = `
Array [
  Object {
    "command": Object {
      "arguments": Array [
        Object {
          "containingService": Object {
            "functions": Array [
              Object {
                "arguments": Object {
                  "argBoolean": "boolean",
                  "argNumber": "number",
                  "argString": "string",
                },
                "name": "testRelativeFunction1",
                "operation": "specs/testRelativeService1.yml#testRelativeFunction1",
                "source": Object {
                  "serviceFileAbsolutePath": "/Users/tiago/Desktop/testRelativeService1.yml",
                  "type": "LOCAL_FS",
                },
                "type": "rest",
              },
            ],
            "name": "testRelativeService1",
            "rawContent": "",
            "source": Object {
              "absoluteFilePath": "/Users/tiago/Desktop/testRelativeService1.yml",
              "type": "LOCAL_FS",
            },
            "type": "rest",
          },
          "documentUri": "test.sw.yaml",
        },
      ],
      "command": "swf.ls.commands.ImportFunctionFromCompletionItem",
      "title": "Import function from completion item",
    },
    "detail": "specs/testRelativeService1.yml#testRelativeFunction1",
    "filterText": "specs»testRelativeService1.yml#testRelativeFunction1",
    "insertTextFormat": 2,
    "kind": 18,
    "label": "specs»testRelativeService1.yml#testRelativeFunction1",
    "sortText": "100_specs»testRelativeService1.yml#testRelativeFunction1",
    "textEdit": Object {
      "newText": "name: '\${1:testRelativeFunction1}'
  operation: 'specs/testRelativeService1.yml#testRelativeFunction1'
  type: rest",
      "range": Object {
        "end": Object {
          "character": 2,
          "line": 2,
        },
        "start": Object {
          "character": 2,
          "line": 2,
        },
      },
    },
  },
  Object {
    "detail": "Add a new function",
    "filterText": "New function",
    "insertTextFormat": 2,
    "kind": 8,
    "label": "New function",
    "sortText": "100_New function",
    "textEdit": Object {
      "newText": "name: '\${1:Unique function name}'
  operation: '\${2:localhost#operation}'
  type: '\${3:Function type}'",
      "range": Object {
        "end": Object {
          "character": 2,
          "line": 2,
        },
        "start": Object {
          "character": 2,
          "line": 2,
        },
      },
    },
  },
]
`;

exports[`SWF LS YAML code completion functions completion add in the middle / without dash character 1`] = `0`;

exports[`SWF LS YAML code completion functions completion add in the middle / without dash character 2`] = `Array []`;

exports[`SWF LS YAML code completion functions completion add in the middle 1`] = `2`;

exports[`SWF LS YAML code completion functions completion add in the middle 2`] = `
Array [
  Object {
    "command": Object {
      "arguments": Array [
        Object {
          "containingService": Object {
            "functions": Array [
              Object {
                "arguments": Object {
                  "argBoolean": "boolean",
                  "argNumber": "number",
                  "argString": "string",
                },
                "name": "testRelativeFunction1",
                "operation": "specs/testRelativeService1.yml#testRelativeFunction1",
                "source": Object {
                  "serviceFileAbsolutePath": "/Users/tiago/Desktop/testRelativeService1.yml",
                  "type": "LOCAL_FS",
                },
                "type": "rest",
              },
            ],
            "name": "testRelativeService1",
            "rawContent": "",
            "source": Object {
              "absoluteFilePath": "/Users/tiago/Desktop/testRelativeService1.yml",
              "type": "LOCAL_FS",
            },
            "type": "rest",
          },
          "documentUri": "test.sw.yaml",
        },
      ],
      "command": "swf.ls.commands.ImportFunctionFromCompletionItem",
      "title": "Import function from completion item",
    },
    "detail": "specs/testRelativeService1.yml#testRelativeFunction1",
    "filterText": "specs»testRelativeService1.yml#testRelativeFunction1",
    "insertTextFormat": 2,
    "kind": 18,
    "label": "specs»testRelativeService1.yml#testRelativeFunction1",
    "sortText": "100_specs»testRelativeService1.yml#testRelativeFunction1",
    "textEdit": Object {
      "newText": "name: '\${1:testRelativeFunction1}'
  operation: 'specs/testRelativeService1.yml#testRelativeFunction1'
  type: rest",
      "range": Object {
        "end": Object {
          "character": 2,
          "line": 2,
        },
        "start": Object {
          "character": 2,
          "line": 2,
        },
      },
    },
  },
  Object {
    "detail": "Add a new function",
    "filterText": "New function",
    "insertTextFormat": 2,
    "kind": 8,
    "label": "New function",
    "sortText": "100_New function",
    "textEdit": Object {
      "newText": "name: '\${1:Unique function name}'
  operation: '\${2:localhost#operation}'
  type: '\${3:Function type}'",
      "range": Object {
        "end": Object {
          "character": 2,
          "line": 2,
        },
        "start": Object {
          "character": 2,
          "line": 2,
        },
      },
    },
  },
]
`;

exports[`SWF LS YAML code completion functions completion empty completion items / with extra space 1`] = `2`;

exports[`SWF LS YAML code completion functions completion empty completion items / with extra space 2`] = `
Array [
  Object {
    "command": Object {
      "arguments": Array [
        Object {
          "containingService": Object {
            "functions": Array [
              Object {
                "arguments": Object {
                  "argBoolean": "boolean",
                  "argNumber": "number",
                  "argString": "string",
                },
                "name": "testRelativeFunction1",
                "operation": "specs/testRelativeService1.yml#testRelativeFunction1",
                "source": Object {
                  "serviceFileAbsolutePath": "/Users/tiago/Desktop/testRelativeService1.yml",
                  "type": "LOCAL_FS",
                },
                "type": "rest",
              },
            ],
            "name": "testRelativeService1",
            "rawContent": "",
            "source": Object {
              "absoluteFilePath": "/Users/tiago/Desktop/testRelativeService1.yml",
              "type": "LOCAL_FS",
            },
            "type": "rest",
          },
          "documentUri": "test.sw.yaml",
        },
      ],
      "command": "swf.ls.commands.ImportFunctionFromCompletionItem",
      "title": "Import function from completion item",
    },
    "detail": "specs/testRelativeService1.yml#testRelativeFunction1",
    "filterText": "specs»testRelativeService1.yml#testRelativeFunction1",
    "insertTextFormat": 2,
    "kind": 18,
    "label": "specs»testRelativeService1.yml#testRelativeFunction1",
    "sortText": "100_specs»testRelativeService1.yml#testRelativeFunction1",
    "textEdit": Object {
      "newText": "name: '\${1:testRelativeFunction1}'
  operation: 'specs/testRelativeService1.yml#testRelativeFunction1'
  type: rest",
      "range": Object {
        "end": Object {
          "character": 2,
          "line": 1,
        },
        "start": Object {
          "character": 2,
          "line": 1,
        },
      },
    },
  },
  Object {
    "detail": "Add a new function",
    "filterText": "New function",
    "insertTextFormat": 2,
    "kind": 8,
    "label": "New function",
    "sortText": "100_New function",
    "textEdit": Object {
      "newText": "name: '\${1:Unique function name}'
  operation: '\${2:localhost#operation}'
  type: '\${3:Function type}'",
      "range": Object {
        "end": Object {
          "character": 2,
          "line": 1,
        },
        "start": Object {
          "character": 2,
          "line": 1,
        },
      },
    },
  },
]
`;

exports[`SWF LS YAML code completion functions completion empty completion items 1`] = `0`;

exports[`SWF LS YAML code completion functions completion empty completion items 2`] = `Array []`;

exports[`SWF LS YAML code completion operation completion inside double quotes / without same level content after 1`] = `1`;

exports[`SWF LS YAML code completion operation completion inside double quotes / without same level content after 2`] = `
Array [
  Object {
    "detail": "'specs/testRelativeService1.yml#testRelativeFunction1'",
    "filterText": "'specs/testRelativeService1.yml#testRelativeFunction1'",
    "insertTextFormat": 2,
    "kind": 19,
    "label": "'specs/testRelativeService1.yml#testRelativeFunction1'",
    "sortText": "100_'specs/testRelativeService1.yml#testRelativeFunction1'",
    "textEdit": Object {
      "newText": "'specs/testRelativeService1.yml#testRelativeFunction1'",
      "range": Object {
        "end": Object {
          "character": 15,
          "line": 2,
        },
        "start": Object {
          "character": 13,
          "line": 2,
        },
      },
    },
  },
]
`;

exports[`SWF LS YAML code completion operation completion inside single quotes / with same level content after 1`] = `1`;

exports[`SWF LS YAML code completion operation completion inside single quotes / with same level content after 2`] = `
Array [
  Object {
    "detail": "'specs/testRelativeService1.yml#testRelativeFunction1'",
    "filterText": "'specs/testRelativeService1.yml#testRelativeFunction1'",
    "insertTextFormat": 2,
    "kind": 19,
    "label": "'specs/testRelativeService1.yml#testRelativeFunction1'",
    "sortText": "100_'specs/testRelativeService1.yml#testRelativeFunction1'",
    "textEdit": Object {
      "newText": "'specs/testRelativeService1.yml#testRelativeFunction1'",
      "range": Object {
        "end": Object {
          "character": 15,
          "line": 2,
        },
        "start": Object {
          "character": 13,
          "line": 2,
        },
      },
    },
  },
]
`;

exports[`SWF LS YAML code completion operation completion inside single quotes / without same level content after 1`] = `1`;

exports[`SWF LS YAML code completion operation completion inside single quotes / without same level content after 2`] = `
Array [
  Object {
    "detail": "'specs/testRelativeService1.yml#testRelativeFunction1'",
    "filterText": "'specs/testRelativeService1.yml#testRelativeFunction1'",
    "insertTextFormat": 2,
    "kind": 19,
    "label": "'specs/testRelativeService1.yml#testRelativeFunction1'",
    "sortText": "100_'specs/testRelativeService1.yml#testRelativeFunction1'",
    "textEdit": Object {
      "newText": "'specs/testRelativeService1.yml#testRelativeFunction1'",
      "range": Object {
        "end": Object {
          "character": 15,
          "line": 2,
        },
        "start": Object {
          "character": 13,
          "line": 2,
        },
      },
    },
  },
]
`;

exports[`SWF LS YAML code completion operation completion not in quotes / with same level content after 1`] = `1`;

exports[`SWF LS YAML code completion operation completion not in quotes / with same level content after 2`] = `
Array [
  Object {
    "detail": "'specs/testRelativeService1.yml#testRelativeFunction1'",
    "filterText": "'specs/testRelativeService1.yml#testRelativeFunction1'",
    "insertTextFormat": 2,
    "kind": 19,
    "label": "'specs/testRelativeService1.yml#testRelativeFunction1'",
    "sortText": "100_'specs/testRelativeService1.yml#testRelativeFunction1'",
    "textEdit": Object {
      "newText": "'specs/testRelativeService1.yml#testRelativeFunction1'",
      "range": Object {
        "end": Object {
          "character": 13,
          "line": 2,
        },
        "start": Object {
          "character": 13,
          "line": 2,
        },
      },
    },
  },
]
`;

exports[`SWF LS YAML code completion operation completion not in quotes / without space after property name 1`] = `1`;

exports[`SWF LS YAML code completion operation completion not in quotes / without space after property name 2`] = `
Array [
  Object {
    "detail": "'specs/testRelativeService1.yml#testRelativeFunction1'",
    "filterText": "'specs/testRelativeService1.yml#testRelativeFunction1'",
    "insertTextFormat": 2,
    "kind": 19,
    "label": "'specs/testRelativeService1.yml#testRelativeFunction1'",
    "sortText": "100_'specs/testRelativeService1.yml#testRelativeFunction1'",
    "textEdit": Object {
      "newText": "'specs/testRelativeService1.yml#testRelativeFunction1'",
      "range": Object {
        "end": Object {
          "character": 13,
          "line": 2,
        },
        "start": Object {
          "character": 13,
          "line": 2,
        },
      },
    },
  },
]
`;

exports[`SWF LS YAML code completion start completion inside double quotes 1`] = `2`;

exports[`SWF LS YAML code completion start completion inside double quotes 2`] = `
Array [
  Object {
    "detail": "\\"GreetInEnglish\\"",
    "filterText": "GreetInEnglish",
    "insertTextFormat": 2,
    "kind": 12,
    "label": "GreetInEnglish",
    "sortText": "100_GreetInEnglish",
    "textEdit": Object {
      "newText": "GreetInEnglish",
      "range": Object {
        "end": Object {
          "character": 9,
          "line": 0,
        },
        "start": Object {
          "character": 7,
          "line": 0,
        },
      },
    },
  },
  Object {
    "detail": "\\"GreetInSpanish\\"",
    "filterText": "GreetInSpanish",
    "insertTextFormat": 2,
    "kind": 12,
    "label": "GreetInSpanish",
    "sortText": "100_GreetInSpanish",
    "textEdit": Object {
      "newText": "GreetInSpanish",
      "range": Object {
        "end": Object {
          "character": 9,
          "line": 0,
        },
        "start": Object {
          "character": 7,
          "line": 0,
        },
      },
    },
  },
]
`;

exports[`SWF LS YAML code completion start completion inside single quotes 1`] = `2`;

exports[`SWF LS YAML code completion start completion inside single quotes 2`] = `
Array [
  Object {
    "detail": "\\"GreetInEnglish\\"",
    "filterText": "GreetInEnglish",
    "insertTextFormat": 2,
    "kind": 12,
    "label": "GreetInEnglish",
    "sortText": "100_GreetInEnglish",
    "textEdit": Object {
      "newText": "GreetInEnglish",
      "range": Object {
        "end": Object {
          "character": 9,
          "line": 0,
        },
        "start": Object {
          "character": 7,
          "line": 0,
        },
      },
    },
  },
  Object {
    "detail": "\\"GreetInSpanish\\"",
    "filterText": "GreetInSpanish",
    "insertTextFormat": 2,
    "kind": 12,
    "label": "GreetInSpanish",
    "sortText": "100_GreetInSpanish",
    "textEdit": Object {
      "newText": "GreetInSpanish",
      "range": Object {
        "end": Object {
          "character": 9,
          "line": 0,
        },
        "start": Object {
          "character": 7,
          "line": 0,
        },
      },
    },
  },
]
`;

exports[`SWF LS YAML code completion start completion not in quotes / without space after property name 1`] = `0`;

exports[`SWF LS YAML code completion start completion not in quotes / without space after property name 2`] = `Array []`;

exports[`SWF LS YAML code completion start completion not in quotes 1`] = `2`;

exports[`SWF LS YAML code completion start completion not in quotes 2`] = `
Array [
  Object {
    "detail": "\\"GreetInEnglish\\"",
    "filterText": "GreetInEnglish",
    "insertTextFormat": 2,
    "kind": 12,
    "label": "GreetInEnglish",
    "sortText": "100_GreetInEnglish",
    "textEdit": Object {
      "newText": "GreetInEnglish",
      "range": Object {
        "end": Object {
          "character": 7,
          "line": 0,
        },
        "start": Object {
          "character": 7,
          "line": 0,
        },
      },
    },
  },
  Object {
    "detail": "\\"GreetInSpanish\\"",
    "filterText": "GreetInSpanish",
    "insertTextFormat": 2,
    "kind": 12,
    "label": "GreetInSpanish",
    "sortText": "100_GreetInSpanish",
    "textEdit": Object {
      "newText": "GreetInSpanish",
      "range": Object {
        "end": Object {
          "character": 7,
          "line": 0,
        },
        "start": Object {
          "character": 7,
          "line": 0,
        },
      },
    },
  },
]
`;

exports[`SWF LS YAML code completion states completion add at the beginning / with double extra indentation / using the code lenses 1`] = `4`;

exports[`SWF LS YAML code completion states completion add at the beginning / with double extra indentation / using the code lenses 2`] = `
Array [
  Object {
    "detail": "Add a new operation state",
    "filterText": "New operation state",
    "insertTextFormat": 2,
    "kind": 8,
    "label": "New operation state",
    "sortText": "100_New operation state",
    "textEdit": Object {
      "newText": "- name: '\${1:Unique State name}'
  type: operation
  actions:
    - name: '\${5:Unique Action name}'
      functionRef: {}
  transition: '\${10:Next transition of the workflow}'
  end: false
",
      "range": Object {
        "end": Object {
          "character": 4,
          "line": 1,
        },
        "start": Object {
          "character": 4,
          "line": 1,
        },
      },
    },
  },
  Object {
    "detail": "Add a new event state",
    "filterText": "New event state",
    "insertTextFormat": 2,
    "kind": 8,
    "label": "New event state",
    "sortText": "100_New event state",
    "textEdit": Object {
      "newText": "- name: '\${1:Unique State name}'
  type: event
  onEvents:
    - eventRefs:
        - '\${5:Unique event names}'
  transition: '\${10:Next transition of the workflow}'
  end: false
",
      "range": Object {
        "end": Object {
          "character": 4,
          "line": 1,
        },
        "start": Object {
          "character": 4,
          "line": 1,
        },
      },
    },
  },
  Object {
    "detail": "Add a new switch state",
    "filterText": "New switch state",
    "insertTextFormat": 2,
    "kind": 8,
    "label": "New switch state",
    "sortText": "100_New switch state",
    "textEdit": Object {
      "newText": "- name: '\${1:Unique State name}'
  type: switch
  dataConditions:
    - condition: '\${5:Workflow expression evaluated against state data}'
      transition: '\${6:Transition to another state if condition is true}'
  defaultCondition:
    transition: '\${7:Default transition of the workflow}'
",
      "range": Object {
        "end": Object {
          "character": 4,
          "line": 1,
        },
        "start": Object {
          "character": 4,
          "line": 1,
        },
      },
    },
  },
  Object {
    "detail": "Add a new inject state",
    "filterText": "New inject state",
    "insertTextFormat": 2,
    "kind": 8,
    "label": "New inject state",
    "sortText": "100_New inject state",
    "textEdit": Object {
      "newText": "- name: '\${1:Unique State name}'
  type: inject
  data: {}
  transition: '\${10:Next transition of the workflow}'
  end: false
",
      "range": Object {
        "end": Object {
          "character": 4,
          "line": 1,
        },
        "start": Object {
          "character": 4,
          "line": 1,
        },
      },
    },
  },
]
`;

exports[`SWF LS YAML code completion states completion add at the beginning / with extra indentation / using the code lenses 1`] = `4`;

exports[`SWF LS YAML code completion states completion add at the beginning / with extra indentation / using the code lenses 2`] = `
Array [
  Object {
    "detail": "Add a new operation state",
    "filterText": "New operation state",
    "insertTextFormat": 2,
    "kind": 8,
    "label": "New operation state",
    "sortText": "100_New operation state",
    "textEdit": Object {
      "newText": "- name: '\${1:Unique State name}'
  type: operation
  actions:
    - name: '\${5:Unique Action name}'
      functionRef: {}
  transition: '\${10:Next transition of the workflow}'
  end: false
",
      "range": Object {
        "end": Object {
          "character": 2,
          "line": 1,
        },
        "start": Object {
          "character": 2,
          "line": 1,
        },
      },
    },
  },
  Object {
    "detail": "Add a new event state",
    "filterText": "New event state",
    "insertTextFormat": 2,
    "kind": 8,
    "label": "New event state",
    "sortText": "100_New event state",
    "textEdit": Object {
      "newText": "- name: '\${1:Unique State name}'
  type: event
  onEvents:
    - eventRefs:
        - '\${5:Unique event names}'
  transition: '\${10:Next transition of the workflow}'
  end: false
",
      "range": Object {
        "end": Object {
          "character": 2,
          "line": 1,
        },
        "start": Object {
          "character": 2,
          "line": 1,
        },
      },
    },
  },
  Object {
    "detail": "Add a new switch state",
    "filterText": "New switch state",
    "insertTextFormat": 2,
    "kind": 8,
    "label": "New switch state",
    "sortText": "100_New switch state",
    "textEdit": Object {
      "newText": "- name: '\${1:Unique State name}'
  type: switch
  dataConditions:
    - condition: '\${5:Workflow expression evaluated against state data}'
      transition: '\${6:Transition to another state if condition is true}'
  defaultCondition:
    transition: '\${7:Default transition of the workflow}'
",
      "range": Object {
        "end": Object {
          "character": 2,
          "line": 1,
        },
        "start": Object {
          "character": 2,
          "line": 1,
        },
      },
    },
  },
  Object {
    "detail": "Add a new inject state",
    "filterText": "New inject state",
    "insertTextFormat": 2,
    "kind": 8,
    "label": "New inject state",
    "sortText": "100_New inject state",
    "textEdit": Object {
      "newText": "- name: '\${1:Unique State name}'
  type: inject
  data: {}
  transition: '\${10:Next transition of the workflow}'
  end: false
",
      "range": Object {
        "end": Object {
          "character": 2,
          "line": 1,
        },
        "start": Object {
          "character": 2,
          "line": 1,
        },
      },
    },
  },
]
`;

exports[`SWF LS YAML code completion states completion add at the beginning 1`] = `4`;

exports[`SWF LS YAML code completion states completion add at the beginning 2`] = `
Array [
  Object {
    "detail": "Add a new operation state",
    "filterText": "New operation state",
    "insertTextFormat": 2,
    "kind": 8,
    "label": "New operation state",
    "sortText": "100_New operation state",
    "textEdit": Object {
      "newText": "name: '\${1:Unique State name}'
  type: operation
  actions:
    - name: '\${5:Unique Action name}'
      functionRef: {}
  transition: '\${10:Next transition of the workflow}'
  end: false",
      "range": Object {
        "end": Object {
          "character": 2,
          "line": 1,
        },
        "start": Object {
          "character": 2,
          "line": 1,
        },
      },
    },
  },
  Object {
    "detail": "Add a new event state",
    "filterText": "New event state",
    "insertTextFormat": 2,
    "kind": 8,
    "label": "New event state",
    "sortText": "100_New event state",
    "textEdit": Object {
      "newText": "name: '\${1:Unique State name}'
  type: event
  onEvents:
    - eventRefs:
        - '\${5:Unique event names}'
  transition: '\${10:Next transition of the workflow}'
  end: false",
      "range": Object {
        "end": Object {
          "character": 2,
          "line": 1,
        },
        "start": Object {
          "character": 2,
          "line": 1,
        },
      },
    },
  },
  Object {
    "detail": "Add a new switch state",
    "filterText": "New switch state",
    "insertTextFormat": 2,
    "kind": 8,
    "label": "New switch state",
    "sortText": "100_New switch state",
    "textEdit": Object {
      "newText": "name: '\${1:Unique State name}'
  type: switch
  dataConditions:
    - condition: '\${5:Workflow expression evaluated against state data}'
      transition: '\${6:Transition to another state if condition is true}'
  defaultCondition:
    transition: '\${7:Default transition of the workflow}'",
      "range": Object {
        "end": Object {
          "character": 2,
          "line": 1,
        },
        "start": Object {
          "character": 2,
          "line": 1,
        },
      },
    },
  },
  Object {
    "detail": "Add a new inject state",
    "filterText": "New inject state",
    "insertTextFormat": 2,
    "kind": 8,
    "label": "New inject state",
    "sortText": "100_New inject state",
    "textEdit": Object {
      "newText": "name: '\${1:Unique State name}'
  type: inject
  data: {}
  transition: '\${10:Next transition of the workflow}'
  end: false",
      "range": Object {
        "end": Object {
          "character": 2,
          "line": 1,
        },
        "start": Object {
          "character": 2,
          "line": 1,
        },
      },
    },
  },
]
`;

exports[`SWF LS YAML code completion states completion add at the beginning, using the code lenses 1`] = `4`;

exports[`SWF LS YAML code completion states completion add at the beginning, using the code lenses 2`] = `
Array [
  Object {
    "detail": "Add a new operation state",
    "filterText": "New operation state",
    "insertTextFormat": 2,
    "kind": 8,
    "label": "New operation state",
    "sortText": "100_New operation state",
    "textEdit": Object {
      "newText": "- name: '\${1:Unique State name}'
  type: operation
  actions:
    - name: '\${5:Unique Action name}'
      functionRef: {}
  transition: '\${10:Next transition of the workflow}'
  end: false
",
      "range": Object {
        "end": Object {
          "character": 0,
          "line": 1,
        },
        "start": Object {
          "character": 0,
          "line": 1,
        },
      },
    },
  },
  Object {
    "detail": "Add a new event state",
    "filterText": "New event state",
    "insertTextFormat": 2,
    "kind": 8,
    "label": "New event state",
    "sortText": "100_New event state",
    "textEdit": Object {
      "newText": "- name: '\${1:Unique State name}'
  type: event
  onEvents:
    - eventRefs:
        - '\${5:Unique event names}'
  transition: '\${10:Next transition of the workflow}'
  end: false
",
      "range": Object {
        "end": Object {
          "character": 0,
          "line": 1,
        },
        "start": Object {
          "character": 0,
          "line": 1,
        },
      },
    },
  },
  Object {
    "detail": "Add a new switch state",
    "filterText": "New switch state",
    "insertTextFormat": 2,
    "kind": 8,
    "label": "New switch state",
    "sortText": "100_New switch state",
    "textEdit": Object {
      "newText": "- name: '\${1:Unique State name}'
  type: switch
  dataConditions:
    - condition: '\${5:Workflow expression evaluated against state data}'
      transition: '\${6:Transition to another state if condition is true}'
  defaultCondition:
    transition: '\${7:Default transition of the workflow}'
",
      "range": Object {
        "end": Object {
          "character": 0,
          "line": 1,
        },
        "start": Object {
          "character": 0,
          "line": 1,
        },
      },
    },
  },
  Object {
    "detail": "Add a new inject state",
    "filterText": "New inject state",
    "insertTextFormat": 2,
    "kind": 8,
    "label": "New inject state",
    "sortText": "100_New inject state",
    "textEdit": Object {
      "newText": "- name: '\${1:Unique State name}'
  type: inject
  data: {}
  transition: '\${10:Next transition of the workflow}'
  end: false
",
      "range": Object {
        "end": Object {
          "character": 0,
          "line": 1,
        },
        "start": Object {
          "character": 0,
          "line": 1,
        },
      },
    },
  },
]
`;

exports[`SWF LS YAML code completion states completion add at the end 1`] = `4`;

exports[`SWF LS YAML code completion states completion add at the end 2`] = `
Array [
  Object {
    "detail": "Add a new operation state",
    "filterText": "New operation state",
    "insertTextFormat": 2,
    "kind": 8,
    "label": "New operation state",
    "sortText": "100_New operation state",
    "textEdit": Object {
      "newText": "name: '\${1:Unique State name}'
  type: operation
  actions:
    - name: '\${5:Unique Action name}'
      functionRef: {}
  transition: '\${10:Next transition of the workflow}'
  end: false",
      "range": Object {
        "end": Object {
          "character": 2,
          "line": 2,
        },
        "start": Object {
          "character": 2,
          "line": 2,
        },
      },
    },
  },
  Object {
    "detail": "Add a new event state",
    "filterText": "New event state",
    "insertTextFormat": 2,
    "kind": 8,
    "label": "New event state",
    "sortText": "100_New event state",
    "textEdit": Object {
      "newText": "name: '\${1:Unique State name}'
  type: event
  onEvents:
    - eventRefs:
        - '\${5:Unique event names}'
  transition: '\${10:Next transition of the workflow}'
  end: false",
      "range": Object {
        "end": Object {
          "character": 2,
          "line": 2,
        },
        "start": Object {
          "character": 2,
          "line": 2,
        },
      },
    },
  },
  Object {
    "detail": "Add a new switch state",
    "filterText": "New switch state",
    "insertTextFormat": 2,
    "kind": 8,
    "label": "New switch state",
    "sortText": "100_New switch state",
    "textEdit": Object {
      "newText": "name: '\${1:Unique State name}'
  type: switch
  dataConditions:
    - condition: '\${5:Workflow expression evaluated against state data}'
      transition: '\${6:Transition to another state if condition is true}'
  defaultCondition:
    transition: '\${7:Default transition of the workflow}'",
      "range": Object {
        "end": Object {
          "character": 2,
          "line": 2,
        },
        "start": Object {
          "character": 2,
          "line": 2,
        },
      },
    },
  },
  Object {
    "detail": "Add a new inject state",
    "filterText": "New inject state",
    "insertTextFormat": 2,
    "kind": 8,
    "label": "New inject state",
    "sortText": "100_New inject state",
    "textEdit": Object {
      "newText": "name: '\${1:Unique State name}'
  type: inject
  data: {}
  transition: '\${10:Next transition of the workflow}'
  end: false",
      "range": Object {
        "end": Object {
          "character": 2,
          "line": 2,
        },
        "start": Object {
          "character": 2,
          "line": 2,
        },
      },
    },
  },
]
`;

exports[`SWF LS YAML code completion states completion add in the middle / without dash character 1`] = `0`;

exports[`SWF LS YAML code completion states completion add in the middle / without dash character 2`] = `Array []`;

exports[`SWF LS YAML code completion states completion add in the middle 1`] = `4`;

exports[`SWF LS YAML code completion states completion add in the middle 2`] = `
Array [
  Object {
    "detail": "Add a new operation state",
    "filterText": "New operation state",
    "insertTextFormat": 2,
    "kind": 8,
    "label": "New operation state",
    "sortText": "100_New operation state",
    "textEdit": Object {
      "newText": "name: '\${1:Unique State name}'
  type: operation
  actions:
    - name: '\${5:Unique Action name}'
      functionRef: {}
  transition: '\${10:Next transition of the workflow}'
  end: false",
      "range": Object {
        "end": Object {
          "character": 2,
          "line": 2,
        },
        "start": Object {
          "character": 2,
          "line": 2,
        },
      },
    },
  },
  Object {
    "detail": "Add a new event state",
    "filterText": "New event state",
    "insertTextFormat": 2,
    "kind": 8,
    "label": "New event state",
    "sortText": "100_New event state",
    "textEdit": Object {
      "newText": "name: '\${1:Unique State name}'
  type: event
  onEvents:
    - eventRefs:
        - '\${5:Unique event names}'
  transition: '\${10:Next transition of the workflow}'
  end: false",
      "range": Object {
        "end": Object {
          "character": 2,
          "line": 2,
        },
        "start": Object {
          "character": 2,
          "line": 2,
        },
      },
    },
  },
  Object {
    "detail": "Add a new switch state",
    "filterText": "New switch state",
    "insertTextFormat": 2,
    "kind": 8,
    "label": "New switch state",
    "sortText": "100_New switch state",
    "textEdit": Object {
      "newText": "name: '\${1:Unique State name}'
  type: switch
  dataConditions:
    - condition: '\${5:Workflow expression evaluated against state data}'
      transition: '\${6:Transition to another state if condition is true}'
  defaultCondition:
    transition: '\${7:Default transition of the workflow}'",
      "range": Object {
        "end": Object {
          "character": 2,
          "line": 2,
        },
        "start": Object {
          "character": 2,
          "line": 2,
        },
      },
    },
  },
  Object {
    "detail": "Add a new inject state",
    "filterText": "New inject state",
    "insertTextFormat": 2,
    "kind": 8,
    "label": "New inject state",
    "sortText": "100_New inject state",
    "textEdit": Object {
      "newText": "name: '\${1:Unique State name}'
  type: inject
  data: {}
  transition: '\${10:Next transition of the workflow}'
  end: false",
      "range": Object {
        "end": Object {
          "character": 2,
          "line": 2,
        },
        "start": Object {
          "character": 2,
          "line": 2,
        },
      },
    },
  },
]
`;

exports[`SWF LS YAML code completion states completion empty completion items / with extra space 1`] = `4`;

exports[`SWF LS YAML code completion states completion empty completion items / with extra space 2`] = `
Array [
  Object {
    "detail": "Add a new operation state",
    "filterText": "New operation state",
    "insertTextFormat": 2,
    "kind": 8,
    "label": "New operation state",
    "sortText": "100_New operation state",
    "textEdit": Object {
      "newText": "name: '\${1:Unique State name}'
  type: operation
  actions:
    - name: '\${5:Unique Action name}'
      functionRef: {}
  transition: '\${10:Next transition of the workflow}'
  end: false",
      "range": Object {
        "end": Object {
          "character": 2,
          "line": 1,
        },
        "start": Object {
          "character": 2,
          "line": 1,
        },
      },
    },
  },
  Object {
    "detail": "Add a new event state",
    "filterText": "New event state",
    "insertTextFormat": 2,
    "kind": 8,
    "label": "New event state",
    "sortText": "100_New event state",
    "textEdit": Object {
      "newText": "name: '\${1:Unique State name}'
  type: event
  onEvents:
    - eventRefs:
        - '\${5:Unique event names}'
  transition: '\${10:Next transition of the workflow}'
  end: false",
      "range": Object {
        "end": Object {
          "character": 2,
          "line": 1,
        },
        "start": Object {
          "character": 2,
          "line": 1,
        },
      },
    },
  },
  Object {
    "detail": "Add a new switch state",
    "filterText": "New switch state",
    "insertTextFormat": 2,
    "kind": 8,
    "label": "New switch state",
    "sortText": "100_New switch state",
    "textEdit": Object {
      "newText": "name: '\${1:Unique State name}'
  type: switch
  dataConditions:
    - condition: '\${5:Workflow expression evaluated against state data}'
      transition: '\${6:Transition to another state if condition is true}'
  defaultCondition:
    transition: '\${7:Default transition of the workflow}'",
      "range": Object {
        "end": Object {
          "character": 2,
          "line": 1,
        },
        "start": Object {
          "character": 2,
          "line": 1,
        },
      },
    },
  },
  Object {
    "detail": "Add a new inject state",
    "filterText": "New inject state",
    "insertTextFormat": 2,
    "kind": 8,
    "label": "New inject state",
    "sortText": "100_New inject state",
    "textEdit": Object {
      "newText": "name: '\${1:Unique State name}'
  type: inject
  data: {}
  transition: '\${10:Next transition of the workflow}'
  end: false",
      "range": Object {
        "end": Object {
          "character": 2,
          "line": 1,
        },
        "start": Object {
          "character": 2,
          "line": 1,
        },
      },
    },
  },
]
`;

exports[`SWF LS YAML code completion states completion empty completion items 1`] = `0`;

exports[`SWF LS YAML code completion states completion empty completion items 2`] = `Array []`;

exports[`SWF LS YAML code completion transition completion dataConditions transition completion simple case 1`] = `1`;

exports[`SWF LS YAML code completion transition completion dataConditions transition completion simple case 2`] = `
Array [
  Object {
    "detail": "\\"Inject Mantra\\"",
    "filterText": "Inject Mantra",
    "insertTextFormat": 2,
    "kind": 12,
    "label": "Inject Mantra",
    "sortText": "100_Inject Mantra",
    "textEdit": Object {
      "newText": "Inject Mantra",
      "range": Object {
        "end": Object {
          "character": 16,
          "line": 3,
        },
        "start": Object {
          "character": 16,
          "line": 3,
        },
      },
    },
  },
]
`;

exports[`SWF LS YAML code completion transition completion defaultCondition transition completion simple case 1`] = `1`;

exports[`SWF LS YAML code completion transition completion defaultCondition transition completion simple case 2`] = `
Array [
  Object {
    "detail": "\\"Inject Mantra\\"",
    "filterText": "Inject Mantra",
    "insertTextFormat": 2,
    "kind": 12,
    "label": "Inject Mantra",
    "sortText": "100_Inject Mantra",
    "textEdit": Object {
      "newText": "Inject Mantra",
      "range": Object {
        "end": Object {
          "character": 16,
          "line": 3,
        },
        "start": Object {
          "character": 16,
          "line": 3,
        },
      },
    },
  },
]
`;

exports[`SWF LS YAML code completion transition completion eventConditions transition completion simple case 1`] = `1`;

exports[`SWF LS YAML code completion transition completion eventConditions transition completion simple case 2`] = `
Array [
  Object {
    "detail": "\\"Inject Mantra\\"",
    "filterText": "Inject Mantra",
    "insertTextFormat": 2,
    "kind": 12,
    "label": "Inject Mantra",
    "sortText": "100_Inject Mantra",
    "textEdit": Object {
      "newText": "Inject Mantra",
      "range": Object {
        "end": Object {
          "character": 16,
          "line": 3,
        },
        "start": Object {
          "character": 16,
          "line": 3,
        },
      },
    },
  },
]
`;

exports[`SWF LS YAML code completion transition completion state transition completion inside double quotes / with same level content after 1`] = `1`;

exports[`SWF LS YAML code completion transition completion state transition completion inside double quotes / with same level content after 2`] = `
Array [
  Object {
    "detail": "\\"Inject Mantra\\"",
    "filterText": "Inject Mantra",
    "insertTextFormat": 2,
    "kind": 12,
    "label": "Inject Mantra",
    "sortText": "100_Inject Mantra",
    "textEdit": Object {
      "newText": "Inject Mantra",
      "range": Object {
        "end": Object {
          "character": 16,
          "line": 2,
        },
        "start": Object {
          "character": 14,
          "line": 2,
        },
      },
    },
  },
]
`;

exports[`SWF LS YAML code completion transition completion state transition completion inside double quotes / without same level content after 1`] = `1`;

exports[`SWF LS YAML code completion transition completion state transition completion inside double quotes / without same level content after 2`] = `
Array [
  Object {
    "detail": "\\"Inject Mantra\\"",
    "filterText": "Inject Mantra",
    "insertTextFormat": 2,
    "kind": 12,
    "label": "Inject Mantra",
    "sortText": "100_Inject Mantra",
    "textEdit": Object {
      "newText": "Inject Mantra",
      "range": Object {
        "end": Object {
          "character": 16,
          "line": 2,
        },
        "start": Object {
          "character": 14,
          "line": 2,
        },
      },
    },
  },
]
`;

exports[`SWF LS YAML code completion transition completion state transition completion inside single quotes / without same level content after 1`] = `1`;

exports[`SWF LS YAML code completion transition completion state transition completion inside single quotes / without same level content after 2`] = `
Array [
  Object {
    "detail": "\\"Inject Mantra\\"",
    "filterText": "Inject Mantra",
    "insertTextFormat": 2,
    "kind": 12,
    "label": "Inject Mantra",
    "sortText": "100_Inject Mantra",
    "textEdit": Object {
      "newText": "Inject Mantra",
      "range": Object {
        "end": Object {
          "character": 16,
          "line": 2,
        },
        "start": Object {
          "character": 14,
          "line": 2,
        },
      },
    },
  },
]
`;

exports[`SWF LS YAML code completion transition completion state transition completion not in quotes / with same level content after 1`] = `1`;

exports[`SWF LS YAML code completion transition completion state transition completion not in quotes / with same level content after 2`] = `
Array [
  Object {
    "detail": "\\"Inject Mantra\\"",
    "filterText": "Inject Mantra",
    "insertTextFormat": 2,
    "kind": 12,
    "label": "Inject Mantra",
    "sortText": "100_Inject Mantra",
    "textEdit": Object {
      "newText": "Inject Mantra",
      "range": Object {
        "end": Object {
          "character": 14,
          "line": 2,
        },
        "start": Object {
          "character": 14,
          "line": 2,
        },
      },
    },
  },
]
`;

exports[`SWF LS YAML code completion transition completion state transition completion not in quotes / without same level content after 1`] = `1`;

exports[`SWF LS YAML code completion transition completion state transition completion not in quotes / without same level content after 2`] = `
Array [
  Object {
    "detail": "\\"Inject Mantra\\"",
    "filterText": "Inject Mantra",
    "insertTextFormat": 2,
    "kind": 12,
    "label": "Inject Mantra",
    "sortText": "100_Inject Mantra",
    "textEdit": Object {
      "newText": "Inject Mantra",
      "range": Object {
        "end": Object {
          "character": 14,
          "line": 2,
        },
        "start": Object {
          "character": 14,
          "line": 2,
        },
      },
    },
  },
]
`;

exports[`SWF LS YAML code completion transition completion state transition completion not in quotes / without space after property name 1`] = `0`;

exports[`SWF LS YAML code completion transition completion state transition completion not in quotes / without space after property name 2`] = `Array []`;

exports[`SWF LS YAML diagnostic empty file 1`] = `0`;

exports[`SWF LS YAML diagnostic empty file 2`] = `Array []`;

exports[`SWF LS YAML diagnostic missing state type 1`] = `1`;

exports[`SWF LS YAML diagnostic missing state type 2`] = `
Array [
  Object {
    "code": 0,
    "data": Object {
      "schemaUri": Array [
        "https://serverlessworkflow.io/schemas/0.8/workflow.json",
      ],
    },
    "message": "Missing property \\"type\\".",
    "range": Object {
      "end": Object {
        "character": 5,
        "line": 4,
      },
      "start": Object {
        "character": 4,
        "line": 4,
      },
    },
    "severity": 2,
    "source": "yaml-schema: Sleep State",
  },
]
`;

exports[`SWF LS YAML diagnostic using JSON format unclosed brackets 1`] = `1`;

exports[`SWF LS YAML diagnostic using JSON format unclosed brackets 2`] = `
Array [
  Object {
    "message": "JS-YAML: missed comma between flow collection entries at line 13, column 1",
    "range": Object {
      "end": Object {
        "character": 0,
        "line": 12,
      },
      "start": Object {
        "character": 0,
        "line": 12,
      },
    },
    "severity": 1,
  },
]
`;

exports[`SWF LS YAML diagnostic valid 1`] = `0`;

exports[`SWF LS YAML diagnostic valid 2`] = `Array []`;

exports[`SWF LS YAML diagnostic wrong start state 1`] = `1`;

exports[`SWF LS YAML diagnostic wrong start state 2`] = `
Array [
  Object {
    "message": "Missing 'Wrong state name' in 'states'",
    "range": Object {
      "end": Object {
        "character": 23,
        "line": 2,
      },
      "start": Object {
        "character": 7,
        "line": 2,
      },
    },
  },
]
`;

exports[`SWF LS YAML diagnostic wrong states type 1`] = `1`;

exports[`SWF LS YAML diagnostic wrong states type 2`] = `
Array [
  Object {
    "code": 0,
    "data": Object {
      "schemaUri": Array [
        "https://serverlessworkflow.io/schemas/0.8/workflow.json",
      ],
    },
    "message": "Incorrect type. Expected \\"array\\".",
    "range": Object {
      "end": Object {
        "character": 25,
        "line": 2,
      },
      "start": Object {
        "character": 8,
        "line": 2,
      },
    },
    "severity": 2,
    "source": "yaml-schema: https://serverlessworkflow.io/schemas/0.8/workflow.json",
  },
]
`;

exports[`SWF LS YAML parsing content parsing content with empty function array 1`] = `
Object {
  "children": Array [
    Object {
      "children": Array [
        Object {
          "length": 9,
          "offset": 4,
          "parent": [Circular],
          "type": "string",
          "value": "functions",
        },
        Object {
          "children": Array [],
          "length": 2,
          "offset": 15,
          "parent": [Circular],
          "type": "array",
        },
      ],
      "colonOffset": 13,
      "length": 13,
      "offset": 4,
      "parent": [Circular],
      "type": "property",
      "value": Object {
        "endPosition": 17,
        "errors": Array [],
        "items": Array [],
        "kind": 3,
        "parent": Object {
          "endPosition": 17,
          "errors": Array [],
          "key": Object {
            "doubleQuoted": false,
            "endPosition": 13,
            "errors": Array [],
            "kind": 0,
            "parent": [Circular],
            "plainScalar": true,
            "rawValue": "functions",
            "startPosition": 4,
            "value": "functions",
          },
          "kind": 1,
          "parent": Object {
            "endPosition": 17,
            "errors": Array [],
            "kind": 2,
            "mappings": Array [
              [Circular],
            ],
            "parent": null,
            "startPosition": 4,
          },
          "startPosition": 4,
          "value": [Circular],
        },
        "startPosition": 15,
      },
    },
  ],
  "length": 13,
  "offset": 4,
  "parent": undefined,
  "type": "object",
  "value": undefined,
}
`;

exports[`SWF LS YAML parsing content parsing content with one state and one function 1`] = `
Object {
  "children": Array [
    Object {
      "children": Array [
        Object {
          "length": 9,
          "offset": 4,
          "parent": [Circular],
          "type": "string",
          "value": "functions",
        },
        Object {
          "children": Array [
            Object {
              "children": Array [
                Object {
                  "children": Array [
                    Object {
                      "length": 4,
                      "offset": 17,
                      "parent": [Circular],
                      "type": "string",
                      "value": "name",
                    },
                    Object {
                      "length": 6,
                      "offset": 23,
                      "parent": [Circular],
                      "type": "string",
                      "value": "myFunc",
                    },
                  ],
                  "colonOffset": 21,
                  "length": 12,
                  "offset": 17,
                  "parent": [Circular],
                  "type": "property",
                  "value": Object {
                    "doubleQuoted": false,
                    "endPosition": 29,
                    "errors": Array [],
                    "kind": 0,
                    "parent": Object {
                      "endPosition": 29,
                      "errors": Array [],
                      "key": Object {
                        "doubleQuoted": false,
                        "endPosition": 21,
                        "errors": Array [],
                        "kind": 0,
                        "parent": [Circular],
                        "plainScalar": true,
                        "rawValue": "name",
                        "startPosition": 17,
                        "value": "name",
                      },
                      "kind": 1,
                      "parent": Object {
                        "endPosition": 82,
                        "errors": Array [],
                        "kind": 2,
                        "mappings": Array [
                          [Circular],
                          Object {
                            "endPosition": 69,
                            "errors": Array [],
                            "key": Object {
                              "doubleQuoted": false,
                              "endPosition": 41,
                              "errors": Array [],
                              "kind": 0,
                              "parent": [Circular],
                              "plainScalar": true,
                              "rawValue": "operation",
                              "startPosition": 32,
                              "value": "operation",
                            },
                            "kind": 1,
                            "parent": [Circular],
                            "startPosition": 32,
                            "value": Object {
                              "doubleQuoted": true,
                              "endPosition": 69,
                              "errors": Array [],
                              "kind": 0,
                              "parent": [Circular],
                              "rawValue": "\\"./specs/myService#myFunc\\"",
                              "startPosition": 43,
                              "value": "./specs/myService#myFunc",
                            },
                          },
                          Object {
                            "endPosition": 82,
                            "errors": Array [],
                            "key": Object {
                              "doubleQuoted": false,
                              "endPosition": 76,
                              "errors": Array [],
                              "kind": 0,
                              "parent": [Circular],
                              "plainScalar": true,
                              "rawValue": "type",
                              "startPosition": 72,
                              "value": "type",
                            },
                            "kind": 1,
                            "parent": [Circular],
                            "startPosition": 72,
                            "value": Object {
                              "doubleQuoted": false,
                              "endPosition": 82,
                              "errors": Array [],
                              "kind": 0,
                              "parent": [Circular],
                              "plainScalar": true,
                              "rawValue": "rest",
                              "startPosition": 78,
                              "value": "rest",
                            },
                          },
                        ],
                        "parent": Object {
                          "endPosition": 83,
                          "errors": Array [],
                          "items": Array [
                            [Circular],
                          ],
                          "kind": 3,
                          "parent": Object {
                            "endPosition": 83,
                            "errors": Array [],
                            "key": Object {
                              "doubleQuoted": false,
                              "endPosition": 13,
                              "errors": Array [],
                              "kind": 0,
                              "parent": [Circular],
                              "plainScalar": true,
                              "rawValue": "functions",
                              "startPosition": 4,
                              "value": "functions",
                            },
                            "kind": 1,
                            "parent": Object {
                              "endPosition": 224,
                              "errors": Array [],
                              "kind": 2,
                              "mappings": Array [
                                [Circular],
                                Object {
                                  "endPosition": 225,
                                  "errors": Array [],
                                  "key": Object {
                                    "doubleQuoted": true,
                                    "endPosition": 91,
                                    "errors": Array [],
                                    "kind": 0,
                                    "parent": [Circular],
                                    "rawValue": "\\"states\\"",
                                    "startPosition": 83,
                                    "value": "states",
                                  },
                                  "kind": 1,
                                  "parent": [Circular],
                                  "startPosition": 83,
                                  "value": Object {
                                    "endPosition": 225,
                                    "errors": Array [],
                                    "items": Array [
                                      Object {
                                        "endPosition": 225,
                                        "errors": Array [],
                                        "kind": 2,
                                        "mappings": Array [
                                          Object {
                                            "endPosition": 110,
                                            "errors": Array [],
                                            "key": Object {
                                              "doubleQuoted": false,
                                              "endPosition": 99,
                                              "errors": Array [],
                                              "kind": 0,
                                              "parent": [Circular],
                                              "plainScalar": true,
                                              "rawValue": "name",
                                              "startPosition": 95,
                                              "value": "name",
                                            },
                                            "kind": 1,
                                            "parent": [Circular],
                                            "startPosition": 95,
                                            "value": Object {
                                              "doubleQuoted": false,
                                              "endPosition": 110,
                                              "errors": Array [],
                                              "kind": 0,
                                              "parent": [Circular],
                                              "plainScalar": true,
                                              "rawValue": "testState",
                                              "startPosition": 101,
                                              "value": "testState",
                                            },
                                          },
                                          Object {
                                            "endPosition": 128,
                                            "errors": Array [],
                                            "key": Object {
                                              "doubleQuoted": false,
                                              "endPosition": 117,
                                              "errors": Array [],
                                              "kind": 0,
                                              "parent": [Circular],
                                              "plainScalar": true,
                                              "rawValue": "type",
                                              "startPosition": 113,
                                              "value": "type",
                                            },
                                            "kind": 1,
                                            "parent": [Circular],
                                            "startPosition": 113,
                                            "value": Object {
                                              "doubleQuoted": false,
                                              "endPosition": 128,
                                              "errors": Array [],
                                              "kind": 0,
                                              "parent": [Circular],
                                              "plainScalar": true,
                                              "rawValue": "operation",
                                              "startPosition": 119,
                                              "value": "operation",
                                            },
                                          },
                                          Object {
                                            "endPosition": 146,
                                            "errors": Array [],
                                            "key": Object {
                                              "doubleQuoted": false,
                                              "endPosition": 141,
                                              "errors": Array [],
                                              "kind": 0,
                                              "parent": [Circular],
                                              "plainScalar": true,
                                              "rawValue": "transition",
                                              "startPosition": 131,
                                              "value": "transition",
                                            },
                                            "kind": 1,
                                            "parent": [Circular],
                                            "startPosition": 131,
                                            "value": Object {
                                              "doubleQuoted": false,
                                              "endPosition": 146,
                                              "errors": Array [],
                                              "kind": 0,
                                              "parent": [Circular],
                                              "plainScalar": true,
                                              "rawValue": "end",
                                              "startPosition": 143,
                                              "value": "end",
                                            },
                                          },
                                          Object {
                                            "endPosition": 225,
                                            "errors": Array [],
                                            "key": Object {
                                              "doubleQuoted": false,
                                              "endPosition": 156,
                                              "errors": Array [],
                                              "kind": 0,
                                              "parent": [Circular],
                                              "plainScalar": true,
                                              "rawValue": "actions",
                                              "startPosition": 149,
                                              "value": "actions",
                                            },
                                            "kind": 1,
                                            "parent": [Circular],
                                            "startPosition": 149,
                                            "value": Object {
                                              "endPosition": 225,
                                              "errors": Array [],
                                              "items": Array [
                                                Object {
                                                  "endPosition": 224,
                                                  "errors": Array [],
                                                  "kind": 2,
                                                  "mappings": Array [
                                                    Object {
                                                      "endPosition": 183,
                                                      "errors": Array [],
                                                      "key": Object {
                                                        "doubleQuoted": false,
                                                        "endPosition": 166,
                                                        "errors": Array [],
                                                        "kind": 0,
                                                        "parent": [Circular],
                                                        "plainScalar": true,
                                                        "rawValue": "name",
                                                        "startPosition": 162,
                                                        "value": "name",
                                                      },
                                                      "kind": 1,
                                                      "parent": [Circular],
                                                      "startPosition": 162,
                                                      "value": Object {
                                                        "doubleQuoted": false,
                                                        "endPosition": 183,
                                                        "errors": Array [],
                                                        "kind": 0,
                                                        "parent": [Circular],
                                                        "plainScalar": true,
                                                        "rawValue": "testStateAction",
                                                        "startPosition": 168,
                                                        "value": "testStateAction",
                                                      },
                                                    },
                                                    Object {
                                                      "endPosition": 224,
                                                      "errors": Array [],
                                                      "key": Object {
                                                        "doubleQuoted": false,
                                                        "endPosition": 199,
                                                        "errors": Array [],
                                                        "kind": 0,
                                                        "parent": [Circular],
                                                        "plainScalar": true,
                                                        "rawValue": "functionRef",
                                                        "startPosition": 188,
                                                        "value": "functionRef",
                                                      },
                                                      "kind": 1,
                                                      "parent": [Circular],
                                                      "startPosition": 188,
                                                      "value": Object {
                                                        "endPosition": 224,
                                                        "errors": Array [],
                                                        "kind": 2,
                                                        "mappings": Array [
                                                          Object {
                                                            "endPosition": 224,
                                                            "errors": Array [],
                                                            "key": Object {
                                                              "doubleQuoted": false,
                                                              "endPosition": 214,
                                                              "errors": Array [],
                                                              "kind": 0,
                                                              "parent": [Circular],
                                                              "plainScalar": true,
                                                              "rawValue": "refName",
                                                              "startPosition": 207,
                                                              "value": "refName",
                                                            },
                                                            "kind": 1,
                                                            "parent": [Circular],
                                                            "startPosition": 207,
                                                            "value": Object {
                                                              "doubleQuoted": false,
                                                              "endPosition": 224,
                                                              "errors": Array [],
                                                              "kind": 0,
                                                              "parent": [Circular],
                                                              "rawValue": "",
                                                              "singleQuoted": true,
                                                              "startPosition": 216,
                                                              "value": "myFunc",
                                                            },
                                                          },
                                                        ],
                                                        "parent": [Circular],
                                                        "startPosition": 207,
                                                      },
                                                    },
                                                  ],
                                                  "parent": [Circular],
                                                  "startPosition": 162,
                                                },
                                              ],
                                              "kind": 3,
                                              "parent": [Circular],
                                              "startPosition": 160,
                                            },
                                          },
                                        ],
                                        "parent": [Circular],
                                        "startPosition": 95,
                                      },
                                    ],
                                    "kind": 3,
                                    "parent": [Circular],
                                    "startPosition": 93,
                                  },
                                },
                              ],
                              "parent": null,
                              "startPosition": 4,
                            },
                            "startPosition": 4,
                            "value": [Circular],
                          },
                          "startPosition": 15,
                        },
                        "startPosition": 17,
                      },
                      "startPosition": 17,
                      "value": [Circular],
                    },
                    "plainScalar": true,
                    "rawValue": "myFunc",
                    "startPosition": 23,
                    "value": "myFunc",
                  },
                },
                Object {
                  "children": Array [
                    Object {
                      "length": 9,
                      "offset": 32,
                      "parent": [Circular],
                      "type": "string",
                      "value": "operation",
                    },
                    Object {
                      "length": 26,
                      "offset": 43,
                      "parent": [Circular],
                      "type": "string",
                      "value": "./specs/myService#myFunc",
                    },
                  ],
                  "colonOffset": 41,
                  "length": 37,
                  "offset": 32,
                  "parent": [Circular],
                  "type": "property",
                  "value": Object {
                    "doubleQuoted": true,
                    "endPosition": 69,
                    "errors": Array [],
                    "kind": 0,
                    "parent": Object {
                      "endPosition": 69,
                      "errors": Array [],
                      "key": Object {
                        "doubleQuoted": false,
                        "endPosition": 41,
                        "errors": Array [],
                        "kind": 0,
                        "parent": [Circular],
                        "plainScalar": true,
                        "rawValue": "operation",
                        "startPosition": 32,
                        "value": "operation",
                      },
                      "kind": 1,
                      "parent": Object {
                        "endPosition": 82,
                        "errors": Array [],
                        "kind": 2,
                        "mappings": Array [
                          Object {
                            "endPosition": 29,
                            "errors": Array [],
                            "key": Object {
                              "doubleQuoted": false,
                              "endPosition": 21,
                              "errors": Array [],
                              "kind": 0,
                              "parent": [Circular],
                              "plainScalar": true,
                              "rawValue": "name",
                              "startPosition": 17,
                              "value": "name",
                            },
                            "kind": 1,
                            "parent": [Circular],
                            "startPosition": 17,
                            "value": Object {
                              "doubleQuoted": false,
                              "endPosition": 29,
                              "errors": Array [],
                              "kind": 0,
                              "parent": [Circular],
                              "plainScalar": true,
                              "rawValue": "myFunc",
                              "startPosition": 23,
                              "value": "myFunc",
                            },
                          },
                          [Circular],
                          Object {
                            "endPosition": 82,
                            "errors": Array [],
                            "key": Object {
                              "doubleQuoted": false,
                              "endPosition": 76,
                              "errors": Array [],
                              "kind": 0,
                              "parent": [Circular],
                              "plainScalar": true,
                              "rawValue": "type",
                              "startPosition": 72,
                              "value": "type",
                            },
                            "kind": 1,
                            "parent": [Circular],
                            "startPosition": 72,
                            "value": Object {
                              "doubleQuoted": false,
                              "endPosition": 82,
                              "errors": Array [],
                              "kind": 0,
                              "parent": [Circular],
                              "plainScalar": true,
                              "rawValue": "rest",
                              "startPosition": 78,
                              "value": "rest",
                            },
                          },
                        ],
                        "parent": Object {
                          "endPosition": 83,
                          "errors": Array [],
                          "items": Array [
                            [Circular],
                          ],
                          "kind": 3,
                          "parent": Object {
                            "endPosition": 83,
                            "errors": Array [],
                            "key": Object {
                              "doubleQuoted": false,
                              "endPosition": 13,
                              "errors": Array [],
                              "kind": 0,
                              "parent": [Circular],
                              "plainScalar": true,
                              "rawValue": "functions",
                              "startPosition": 4,
                              "value": "functions",
                            },
                            "kind": 1,
                            "parent": Object {
                              "endPosition": 224,
                              "errors": Array [],
                              "kind": 2,
                              "mappings": Array [
                                [Circular],
                                Object {
                                  "endPosition": 225,
                                  "errors": Array [],
                                  "key": Object {
                                    "doubleQuoted": true,
                                    "endPosition": 91,
                                    "errors": Array [],
                                    "kind": 0,
                                    "parent": [Circular],
                                    "rawValue": "\\"states\\"",
                                    "startPosition": 83,
                                    "value": "states",
                                  },
                                  "kind": 1,
                                  "parent": [Circular],
                                  "startPosition": 83,
                                  "value": Object {
                                    "endPosition": 225,
                                    "errors": Array [],
                                    "items": Array [
                                      Object {
                                        "endPosition": 225,
                                        "errors": Array [],
                                        "kind": 2,
                                        "mappings": Array [
                                          Object {
                                            "endPosition": 110,
                                            "errors": Array [],
                                            "key": Object {
                                              "doubleQuoted": false,
                                              "endPosition": 99,
                                              "errors": Array [],
                                              "kind": 0,
                                              "parent": [Circular],
                                              "plainScalar": true,
                                              "rawValue": "name",
                                              "startPosition": 95,
                                              "value": "name",
                                            },
                                            "kind": 1,
                                            "parent": [Circular],
                                            "startPosition": 95,
                                            "value": Object {
                                              "doubleQuoted": false,
                                              "endPosition": 110,
                                              "errors": Array [],
                                              "kind": 0,
                                              "parent": [Circular],
                                              "plainScalar": true,
                                              "rawValue": "testState",
                                              "startPosition": 101,
                                              "value": "testState",
                                            },
                                          },
                                          Object {
                                            "endPosition": 128,
                                            "errors": Array [],
                                            "key": Object {
                                              "doubleQuoted": false,
                                              "endPosition": 117,
                                              "errors": Array [],
                                              "kind": 0,
                                              "parent": [Circular],
                                              "plainScalar": true,
                                              "rawValue": "type",
                                              "startPosition": 113,
                                              "value": "type",
                                            },
                                            "kind": 1,
                                            "parent": [Circular],
                                            "startPosition": 113,
                                            "value": Object {
                                              "doubleQuoted": false,
                                              "endPosition": 128,
                                              "errors": Array [],
                                              "kind": 0,
                                              "parent": [Circular],
                                              "plainScalar": true,
                                              "rawValue": "operation",
                                              "startPosition": 119,
                                              "value": "operation",
                                            },
                                          },
                                          Object {
                                            "endPosition": 146,
                                            "errors": Array [],
                                            "key": Object {
                                              "doubleQuoted": false,
                                              "endPosition": 141,
                                              "errors": Array [],
                                              "kind": 0,
                                              "parent": [Circular],
                                              "plainScalar": true,
                                              "rawValue": "transition",
                                              "startPosition": 131,
                                              "value": "transition",
                                            },
                                            "kind": 1,
                                            "parent": [Circular],
                                            "startPosition": 131,
                                            "value": Object {
                                              "doubleQuoted": false,
                                              "endPosition": 146,
                                              "errors": Array [],
                                              "kind": 0,
                                              "parent": [Circular],
                                              "plainScalar": true,
                                              "rawValue": "end",
                                              "startPosition": 143,
                                              "value": "end",
                                            },
                                          },
                                          Object {
                                            "endPosition": 225,
                                            "errors": Array [],
                                            "key": Object {
                                              "doubleQuoted": false,
                                              "endPosition": 156,
                                              "errors": Array [],
                                              "kind": 0,
                                              "parent": [Circular],
                                              "plainScalar": true,
                                              "rawValue": "actions",
                                              "startPosition": 149,
                                              "value": "actions",
                                            },
                                            "kind": 1,
                                            "parent": [Circular],
                                            "startPosition": 149,
                                            "value": Object {
                                              "endPosition": 225,
                                              "errors": Array [],
                                              "items": Array [
                                                Object {
                                                  "endPosition": 224,
                                                  "errors": Array [],
                                                  "kind": 2,
                                                  "mappings": Array [
                                                    Object {
                                                      "endPosition": 183,
                                                      "errors": Array [],
                                                      "key": Object {
                                                        "doubleQuoted": false,
                                                        "endPosition": 166,
                                                        "errors": Array [],
                                                        "kind": 0,
                                                        "parent": [Circular],
                                                        "plainScalar": true,
                                                        "rawValue": "name",
                                                        "startPosition": 162,
                                                        "value": "name",
                                                      },
                                                      "kind": 1,
                                                      "parent": [Circular],
                                                      "startPosition": 162,
                                                      "value": Object {
                                                        "doubleQuoted": false,
                                                        "endPosition": 183,
                                                        "errors": Array [],
                                                        "kind": 0,
                                                        "parent": [Circular],
                                                        "plainScalar": true,
                                                        "rawValue": "testStateAction",
                                                        "startPosition": 168,
                                                        "value": "testStateAction",
                                                      },
                                                    },
                                                    Object {
                                                      "endPosition": 224,
                                                      "errors": Array [],
                                                      "key": Object {
                                                        "doubleQuoted": false,
                                                        "endPosition": 199,
                                                        "errors": Array [],
                                                        "kind": 0,
                                                        "parent": [Circular],
                                                        "plainScalar": true,
                                                        "rawValue": "functionRef",
                                                        "startPosition": 188,
                                                        "value": "functionRef",
                                                      },
                                                      "kind": 1,
                                                      "parent": [Circular],
                                                      "startPosition": 188,
                                                      "value": Object {
                                                        "endPosition": 224,
                                                        "errors": Array [],
                                                        "kind": 2,
                                                        "mappings": Array [
                                                          Object {
                                                            "endPosition": 224,
                                                            "errors": Array [],
                                                            "key": Object {
                                                              "doubleQuoted": false,
                                                              "endPosition": 214,
                                                              "errors": Array [],
                                                              "kind": 0,
                                                              "parent": [Circular],
                                                              "plainScalar": true,
                                                              "rawValue": "refName",
                                                              "startPosition": 207,
                                                              "value": "refName",
                                                            },
                                                            "kind": 1,
                                                            "parent": [Circular],
                                                            "startPosition": 207,
                                                            "value": Object {
                                                              "doubleQuoted": false,
                                                              "endPosition": 224,
                                                              "errors": Array [],
                                                              "kind": 0,
                                                              "parent": [Circular],
                                                              "rawValue": "",
                                                              "singleQuoted": true,
                                                              "startPosition": 216,
                                                              "value": "myFunc",
                                                            },
                                                          },
                                                        ],
                                                        "parent": [Circular],
                                                        "startPosition": 207,
                                                      },
                                                    },
                                                  ],
                                                  "parent": [Circular],
                                                  "startPosition": 162,
                                                },
                                              ],
                                              "kind": 3,
                                              "parent": [Circular],
                                              "startPosition": 160,
                                            },
                                          },
                                        ],
                                        "parent": [Circular],
                                        "startPosition": 95,
                                      },
                                    ],
                                    "kind": 3,
                                    "parent": [Circular],
                                    "startPosition": 93,
                                  },
                                },
                              ],
                              "parent": null,
                              "startPosition": 4,
                            },
                            "startPosition": 4,
                            "value": [Circular],
                          },
                          "startPosition": 15,
                        },
                        "startPosition": 17,
                      },
                      "startPosition": 32,
                      "value": [Circular],
                    },
                    "rawValue": "\\"./specs/myService#myFunc\\"",
                    "startPosition": 43,
                    "value": "./specs/myService#myFunc",
                  },
                },
                Object {
                  "children": Array [
                    Object {
                      "length": 4,
                      "offset": 72,
                      "parent": [Circular],
                      "type": "string",
                      "value": "type",
                    },
                    Object {
                      "length": 4,
                      "offset": 78,
                      "parent": [Circular],
                      "type": "string",
                      "value": "rest",
                    },
                  ],
                  "colonOffset": 76,
                  "length": 10,
                  "offset": 72,
                  "parent": [Circular],
                  "type": "property",
                  "value": Object {
                    "doubleQuoted": false,
                    "endPosition": 82,
                    "errors": Array [],
                    "kind": 0,
                    "parent": Object {
                      "endPosition": 82,
                      "errors": Array [],
                      "key": Object {
                        "doubleQuoted": false,
                        "endPosition": 76,
                        "errors": Array [],
                        "kind": 0,
                        "parent": [Circular],
                        "plainScalar": true,
                        "rawValue": "type",
                        "startPosition": 72,
                        "value": "type",
                      },
                      "kind": 1,
                      "parent": Object {
                        "endPosition": 82,
                        "errors": Array [],
                        "kind": 2,
                        "mappings": Array [
                          Object {
                            "endPosition": 29,
                            "errors": Array [],
                            "key": Object {
                              "doubleQuoted": false,
                              "endPosition": 21,
                              "errors": Array [],
                              "kind": 0,
                              "parent": [Circular],
                              "plainScalar": true,
                              "rawValue": "name",
                              "startPosition": 17,
                              "value": "name",
                            },
                            "kind": 1,
                            "parent": [Circular],
                            "startPosition": 17,
                            "value": Object {
                              "doubleQuoted": false,
                              "endPosition": 29,
                              "errors": Array [],
                              "kind": 0,
                              "parent": [Circular],
                              "plainScalar": true,
                              "rawValue": "myFunc",
                              "startPosition": 23,
                              "value": "myFunc",
                            },
                          },
                          Object {
                            "endPosition": 69,
                            "errors": Array [],
                            "key": Object {
                              "doubleQuoted": false,
                              "endPosition": 41,
                              "errors": Array [],
                              "kind": 0,
                              "parent": [Circular],
                              "plainScalar": true,
                              "rawValue": "operation",
                              "startPosition": 32,
                              "value": "operation",
                            },
                            "kind": 1,
                            "parent": [Circular],
                            "startPosition": 32,
                            "value": Object {
                              "doubleQuoted": true,
                              "endPosition": 69,
                              "errors": Array [],
                              "kind": 0,
                              "parent": [Circular],
                              "rawValue": "\\"./specs/myService#myFunc\\"",
                              "startPosition": 43,
                              "value": "./specs/myService#myFunc",
                            },
                          },
                          [Circular],
                        ],
                        "parent": Object {
                          "endPosition": 83,
                          "errors": Array [],
                          "items": Array [
                            [Circular],
                          ],
                          "kind": 3,
                          "parent": Object {
                            "endPosition": 83,
                            "errors": Array [],
                            "key": Object {
                              "doubleQuoted": false,
                              "endPosition": 13,
                              "errors": Array [],
                              "kind": 0,
                              "parent": [Circular],
                              "plainScalar": true,
                              "rawValue": "functions",
                              "startPosition": 4,
                              "value": "functions",
                            },
                            "kind": 1,
                            "parent": Object {
                              "endPosition": 224,
                              "errors": Array [],
                              "kind": 2,
                              "mappings": Array [
                                [Circular],
                                Object {
                                  "endPosition": 225,
                                  "errors": Array [],
                                  "key": Object {
                                    "doubleQuoted": true,
                                    "endPosition": 91,
                                    "errors": Array [],
                                    "kind": 0,
                                    "parent": [Circular],
                                    "rawValue": "\\"states\\"",
                                    "startPosition": 83,
                                    "value": "states",
                                  },
                                  "kind": 1,
                                  "parent": [Circular],
                                  "startPosition": 83,
                                  "value": Object {
                                    "endPosition": 225,
                                    "errors": Array [],
                                    "items": Array [
                                      Object {
                                        "endPosition": 225,
                                        "errors": Array [],
                                        "kind": 2,
                                        "mappings": Array [
                                          Object {
                                            "endPosition": 110,
                                            "errors": Array [],
                                            "key": Object {
                                              "doubleQuoted": false,
                                              "endPosition": 99,
                                              "errors": Array [],
                                              "kind": 0,
                                              "parent": [Circular],
                                              "plainScalar": true,
                                              "rawValue": "name",
                                              "startPosition": 95,
                                              "value": "name",
                                            },
                                            "kind": 1,
                                            "parent": [Circular],
                                            "startPosition": 95,
                                            "value": Object {
                                              "doubleQuoted": false,
                                              "endPosition": 110,
                                              "errors": Array [],
                                              "kind": 0,
                                              "parent": [Circular],
                                              "plainScalar": true,
                                              "rawValue": "testState",
                                              "startPosition": 101,
                                              "value": "testState",
                                            },
                                          },
                                          Object {
                                            "endPosition": 128,
                                            "errors": Array [],
                                            "key": Object {
                                              "doubleQuoted": false,
                                              "endPosition": 117,
                                              "errors": Array [],
                                              "kind": 0,
                                              "parent": [Circular],
                                              "plainScalar": true,
                                              "rawValue": "type",
                                              "startPosition": 113,
                                              "value": "type",
                                            },
                                            "kind": 1,
                                            "parent": [Circular],
                                            "startPosition": 113,
                                            "value": Object {
                                              "doubleQuoted": false,
                                              "endPosition": 128,
                                              "errors": Array [],
                                              "kind": 0,
                                              "parent": [Circular],
                                              "plainScalar": true,
                                              "rawValue": "operation",
                                              "startPosition": 119,
                                              "value": "operation",
                                            },
                                          },
                                          Object {
                                            "endPosition": 146,
                                            "errors": Array [],
                                            "key": Object {
                                              "doubleQuoted": false,
                                              "endPosition": 141,
                                              "errors": Array [],
                                              "kind": 0,
                                              "parent": [Circular],
                                              "plainScalar": true,
                                              "rawValue": "transition",
                                              "startPosition": 131,
                                              "value": "transition",
                                            },
                                            "kind": 1,
                                            "parent": [Circular],
                                            "startPosition": 131,
                                            "value": Object {
                                              "doubleQuoted": false,
                                              "endPosition": 146,
                                              "errors": Array [],
                                              "kind": 0,
                                              "parent": [Circular],
                                              "plainScalar": true,
                                              "rawValue": "end",
                                              "startPosition": 143,
                                              "value": "end",
                                            },
                                          },
                                          Object {
                                            "endPosition": 225,
                                            "errors": Array [],
                                            "key": Object {
                                              "doubleQuoted": false,
                                              "endPosition": 156,
                                              "errors": Array [],
                                              "kind": 0,
                                              "parent": [Circular],
                                              "plainScalar": true,
                                              "rawValue": "actions",
                                              "startPosition": 149,
                                              "value": "actions",
                                            },
                                            "kind": 1,
                                            "parent": [Circular],
                                            "startPosition": 149,
                                            "value": Object {
                                              "endPosition": 225,
                                              "errors": Array [],
                                              "items": Array [
                                                Object {
                                                  "endPosition": 224,
                                                  "errors": Array [],
                                                  "kind": 2,
                                                  "mappings": Array [
                                                    Object {
                                                      "endPosition": 183,
                                                      "errors": Array [],
                                                      "key": Object {
                                                        "doubleQuoted": false,
                                                        "endPosition": 166,
                                                        "errors": Array [],
                                                        "kind": 0,
                                                        "parent": [Circular],
                                                        "plainScalar": true,
                                                        "rawValue": "name",
                                                        "startPosition": 162,
                                                        "value": "name",
                                                      },
                                                      "kind": 1,
                                                      "parent": [Circular],
                                                      "startPosition": 162,
                                                      "value": Object {
                                                        "doubleQuoted": false,
                                                        "endPosition": 183,
                                                        "errors": Array [],
                                                        "kind": 0,
                                                        "parent": [Circular],
                                                        "plainScalar": true,
                                                        "rawValue": "testStateAction",
                                                        "startPosition": 168,
                                                        "value": "testStateAction",
                                                      },
                                                    },
                                                    Object {
                                                      "endPosition": 224,
                                                      "errors": Array [],
                                                      "key": Object {
                                                        "doubleQuoted": false,
                                                        "endPosition": 199,
                                                        "errors": Array [],
                                                        "kind": 0,
                                                        "parent": [Circular],
                                                        "plainScalar": true,
                                                        "rawValue": "functionRef",
                                                        "startPosition": 188,
                                                        "value": "functionRef",
                                                      },
                                                      "kind": 1,
                                                      "parent": [Circular],
                                                      "startPosition": 188,
                                                      "value": Object {
                                                        "endPosition": 224,
                                                        "errors": Array [],
                                                        "kind": 2,
                                                        "mappings": Array [
                                                          Object {
                                                            "endPosition": 224,
                                                            "errors": Array [],
                                                            "key": Object {
                                                              "doubleQuoted": false,
                                                              "endPosition": 214,
                                                              "errors": Array [],
                                                              "kind": 0,
                                                              "parent": [Circular],
                                                              "plainScalar": true,
                                                              "rawValue": "refName",
                                                              "startPosition": 207,
                                                              "value": "refName",
                                                            },
                                                            "kind": 1,
                                                            "parent": [Circular],
                                                            "startPosition": 207,
                                                            "value": Object {
                                                              "doubleQuoted": false,
                                                              "endPosition": 224,
                                                              "errors": Array [],
                                                              "kind": 0,
                                                              "parent": [Circular],
                                                              "rawValue": "",
                                                              "singleQuoted": true,
                                                              "startPosition": 216,
                                                              "value": "myFunc",
                                                            },
                                                          },
                                                        ],
                                                        "parent": [Circular],
                                                        "startPosition": 207,
                                                      },
                                                    },
                                                  ],
                                                  "parent": [Circular],
                                                  "startPosition": 162,
                                                },
                                              ],
                                              "kind": 3,
                                              "parent": [Circular],
                                              "startPosition": 160,
                                            },
                                          },
                                        ],
                                        "parent": [Circular],
                                        "startPosition": 95,
                                      },
                                    ],
                                    "kind": 3,
                                    "parent": [Circular],
                                    "startPosition": 93,
                                  },
                                },
                              ],
                              "parent": null,
                              "startPosition": 4,
                            },
                            "startPosition": 4,
                            "value": [Circular],
                          },
                          "startPosition": 15,
                        },
                        "startPosition": 17,
                      },
                      "startPosition": 72,
                      "value": [Circular],
                    },
                    "plainScalar": true,
                    "rawValue": "rest",
                    "startPosition": 78,
                    "value": "rest",
                  },
                },
              ],
              "length": 65,
              "offset": 17,
              "parent": [Circular],
              "type": "object",
              "value": undefined,
            },
          ],
          "length": 68,
          "offset": 15,
          "parent": [Circular],
          "type": "array",
        },
      ],
      "colonOffset": 13,
      "length": 79,
      "offset": 4,
      "parent": [Circular],
      "type": "property",
      "value": Object {
        "endPosition": 83,
        "errors": Array [],
        "items": Array [
          Object {
            "endPosition": 82,
            "errors": Array [],
            "kind": 2,
            "mappings": Array [
              Object {
                "endPosition": 29,
                "errors": Array [],
                "key": Object {
                  "doubleQuoted": false,
                  "endPosition": 21,
                  "errors": Array [],
                  "kind": 0,
                  "parent": [Circular],
                  "plainScalar": true,
                  "rawValue": "name",
                  "startPosition": 17,
                  "value": "name",
                },
                "kind": 1,
                "parent": [Circular],
                "startPosition": 17,
                "value": Object {
                  "doubleQuoted": false,
                  "endPosition": 29,
                  "errors": Array [],
                  "kind": 0,
                  "parent": [Circular],
                  "plainScalar": true,
                  "rawValue": "myFunc",
                  "startPosition": 23,
                  "value": "myFunc",
                },
              },
              Object {
                "endPosition": 69,
                "errors": Array [],
                "key": Object {
                  "doubleQuoted": false,
                  "endPosition": 41,
                  "errors": Array [],
                  "kind": 0,
                  "parent": [Circular],
                  "plainScalar": true,
                  "rawValue": "operation",
                  "startPosition": 32,
                  "value": "operation",
                },
                "kind": 1,
                "parent": [Circular],
                "startPosition": 32,
                "value": Object {
                  "doubleQuoted": true,
                  "endPosition": 69,
                  "errors": Array [],
                  "kind": 0,
                  "parent": [Circular],
                  "rawValue": "\\"./specs/myService#myFunc\\"",
                  "startPosition": 43,
                  "value": "./specs/myService#myFunc",
                },
              },
              Object {
                "endPosition": 82,
                "errors": Array [],
                "key": Object {
                  "doubleQuoted": false,
                  "endPosition": 76,
                  "errors": Array [],
                  "kind": 0,
                  "parent": [Circular],
                  "plainScalar": true,
                  "rawValue": "type",
                  "startPosition": 72,
                  "value": "type",
                },
                "kind": 1,
                "parent": [Circular],
                "startPosition": 72,
                "value": Object {
                  "doubleQuoted": false,
                  "endPosition": 82,
                  "errors": Array [],
                  "kind": 0,
                  "parent": [Circular],
                  "plainScalar": true,
                  "rawValue": "rest",
                  "startPosition": 78,
                  "value": "rest",
                },
              },
            ],
            "parent": [Circular],
            "startPosition": 17,
          },
        ],
        "kind": 3,
        "parent": Object {
          "endPosition": 83,
          "errors": Array [],
          "key": Object {
            "doubleQuoted": false,
            "endPosition": 13,
            "errors": Array [],
            "kind": 0,
            "parent": [Circular],
            "plainScalar": true,
            "rawValue": "functions",
            "startPosition": 4,
            "value": "functions",
          },
          "kind": 1,
          "parent": Object {
            "endPosition": 224,
            "errors": Array [],
            "kind": 2,
            "mappings": Array [
              [Circular],
              Object {
                "endPosition": 225,
                "errors": Array [],
                "key": Object {
                  "doubleQuoted": true,
                  "endPosition": 91,
                  "errors": Array [],
                  "kind": 0,
                  "parent": [Circular],
                  "rawValue": "\\"states\\"",
                  "startPosition": 83,
                  "value": "states",
                },
                "kind": 1,
                "parent": [Circular],
                "startPosition": 83,
                "value": Object {
                  "endPosition": 225,
                  "errors": Array [],
                  "items": Array [
                    Object {
                      "endPosition": 225,
                      "errors": Array [],
                      "kind": 2,
                      "mappings": Array [
                        Object {
                          "endPosition": 110,
                          "errors": Array [],
                          "key": Object {
                            "doubleQuoted": false,
                            "endPosition": 99,
                            "errors": Array [],
                            "kind": 0,
                            "parent": [Circular],
                            "plainScalar": true,
                            "rawValue": "name",
                            "startPosition": 95,
                            "value": "name",
                          },
                          "kind": 1,
                          "parent": [Circular],
                          "startPosition": 95,
                          "value": Object {
                            "doubleQuoted": false,
                            "endPosition": 110,
                            "errors": Array [],
                            "kind": 0,
                            "parent": [Circular],
                            "plainScalar": true,
                            "rawValue": "testState",
                            "startPosition": 101,
                            "value": "testState",
                          },
                        },
                        Object {
                          "endPosition": 128,
                          "errors": Array [],
                          "key": Object {
                            "doubleQuoted": false,
                            "endPosition": 117,
                            "errors": Array [],
                            "kind": 0,
                            "parent": [Circular],
                            "plainScalar": true,
                            "rawValue": "type",
                            "startPosition": 113,
                            "value": "type",
                          },
                          "kind": 1,
                          "parent": [Circular],
                          "startPosition": 113,
                          "value": Object {
                            "doubleQuoted": false,
                            "endPosition": 128,
                            "errors": Array [],
                            "kind": 0,
                            "parent": [Circular],
                            "plainScalar": true,
                            "rawValue": "operation",
                            "startPosition": 119,
                            "value": "operation",
                          },
                        },
                        Object {
                          "endPosition": 146,
                          "errors": Array [],
                          "key": Object {
                            "doubleQuoted": false,
                            "endPosition": 141,
                            "errors": Array [],
                            "kind": 0,
                            "parent": [Circular],
                            "plainScalar": true,
                            "rawValue": "transition",
                            "startPosition": 131,
                            "value": "transition",
                          },
                          "kind": 1,
                          "parent": [Circular],
                          "startPosition": 131,
                          "value": Object {
                            "doubleQuoted": false,
                            "endPosition": 146,
                            "errors": Array [],
                            "kind": 0,
                            "parent": [Circular],
                            "plainScalar": true,
                            "rawValue": "end",
                            "startPosition": 143,
                            "value": "end",
                          },
                        },
                        Object {
                          "endPosition": 225,
                          "errors": Array [],
                          "key": Object {
                            "doubleQuoted": false,
                            "endPosition": 156,
                            "errors": Array [],
                            "kind": 0,
                            "parent": [Circular],
                            "plainScalar": true,
                            "rawValue": "actions",
                            "startPosition": 149,
                            "value": "actions",
                          },
                          "kind": 1,
                          "parent": [Circular],
                          "startPosition": 149,
                          "value": Object {
                            "endPosition": 225,
                            "errors": Array [],
                            "items": Array [
                              Object {
                                "endPosition": 224,
                                "errors": Array [],
                                "kind": 2,
                                "mappings": Array [
                                  Object {
                                    "endPosition": 183,
                                    "errors": Array [],
                                    "key": Object {
                                      "doubleQuoted": false,
                                      "endPosition": 166,
                                      "errors": Array [],
                                      "kind": 0,
                                      "parent": [Circular],
                                      "plainScalar": true,
                                      "rawValue": "name",
                                      "startPosition": 162,
                                      "value": "name",
                                    },
                                    "kind": 1,
                                    "parent": [Circular],
                                    "startPosition": 162,
                                    "value": Object {
                                      "doubleQuoted": false,
                                      "endPosition": 183,
                                      "errors": Array [],
                                      "kind": 0,
                                      "parent": [Circular],
                                      "plainScalar": true,
                                      "rawValue": "testStateAction",
                                      "startPosition": 168,
                                      "value": "testStateAction",
                                    },
                                  },
                                  Object {
                                    "endPosition": 224,
                                    "errors": Array [],
                                    "key": Object {
                                      "doubleQuoted": false,
                                      "endPosition": 199,
                                      "errors": Array [],
                                      "kind": 0,
                                      "parent": [Circular],
                                      "plainScalar": true,
                                      "rawValue": "functionRef",
                                      "startPosition": 188,
                                      "value": "functionRef",
                                    },
                                    "kind": 1,
                                    "parent": [Circular],
                                    "startPosition": 188,
                                    "value": Object {
                                      "endPosition": 224,
                                      "errors": Array [],
                                      "kind": 2,
                                      "mappings": Array [
                                        Object {
                                          "endPosition": 224,
                                          "errors": Array [],
                                          "key": Object {
                                            "doubleQuoted": false,
                                            "endPosition": 214,
                                            "errors": Array [],
                                            "kind": 0,
                                            "parent": [Circular],
                                            "plainScalar": true,
                                            "rawValue": "refName",
                                            "startPosition": 207,
                                            "value": "refName",
                                          },
                                          "kind": 1,
                                          "parent": [Circular],
                                          "startPosition": 207,
                                          "value": Object {
                                            "doubleQuoted": false,
                                            "endPosition": 224,
                                            "errors": Array [],
                                            "kind": 0,
                                            "parent": [Circular],
                                            "rawValue": "",
                                            "singleQuoted": true,
                                            "startPosition": 216,
                                            "value": "myFunc",
                                          },
                                        },
                                      ],
                                      "parent": [Circular],
                                      "startPosition": 207,
                                    },
                                  },
                                ],
                                "parent": [Circular],
                                "startPosition": 162,
                              },
                            ],
                            "kind": 3,
                            "parent": [Circular],
                            "startPosition": 160,
                          },
                        },
                      ],
                      "parent": [Circular],
                      "startPosition": 95,
                    },
                  ],
                  "kind": 3,
                  "parent": [Circular],
                  "startPosition": 93,
                },
              },
            ],
            "parent": null,
            "startPosition": 4,
          },
          "startPosition": 4,
          "value": [Circular],
        },
        "startPosition": 15,
      },
    },
    Object {
      "children": Array [
        Object {
          "length": 8,
          "offset": 83,
          "parent": [Circular],
          "type": "string",
          "value": "states",
        },
        Object {
          "children": Array [
            Object {
              "children": Array [
                Object {
                  "children": Array [
                    Object {
                      "length": 4,
                      "offset": 95,
                      "parent": [Circular],
                      "type": "string",
                      "value": "name",
                    },
                    Object {
                      "length": 9,
                      "offset": 101,
                      "parent": [Circular],
                      "type": "string",
                      "value": "testState",
                    },
                  ],
                  "colonOffset": 99,
                  "length": 15,
                  "offset": 95,
                  "parent": [Circular],
                  "type": "property",
                  "value": Object {
                    "doubleQuoted": false,
                    "endPosition": 110,
                    "errors": Array [],
                    "kind": 0,
                    "parent": Object {
                      "endPosition": 110,
                      "errors": Array [],
                      "key": Object {
                        "doubleQuoted": false,
                        "endPosition": 99,
                        "errors": Array [],
                        "kind": 0,
                        "parent": [Circular],
                        "plainScalar": true,
                        "rawValue": "name",
                        "startPosition": 95,
                        "value": "name",
                      },
                      "kind": 1,
                      "parent": Object {
                        "endPosition": 225,
                        "errors": Array [],
                        "kind": 2,
                        "mappings": Array [
                          [Circular],
                          Object {
                            "endPosition": 128,
                            "errors": Array [],
                            "key": Object {
                              "doubleQuoted": false,
                              "endPosition": 117,
                              "errors": Array [],
                              "kind": 0,
                              "parent": [Circular],
                              "plainScalar": true,
                              "rawValue": "type",
                              "startPosition": 113,
                              "value": "type",
                            },
                            "kind": 1,
                            "parent": [Circular],
                            "startPosition": 113,
                            "value": Object {
                              "doubleQuoted": false,
                              "endPosition": 128,
                              "errors": Array [],
                              "kind": 0,
                              "parent": [Circular],
                              "plainScalar": true,
                              "rawValue": "operation",
                              "startPosition": 119,
                              "value": "operation",
                            },
                          },
                          Object {
                            "endPosition": 146,
                            "errors": Array [],
                            "key": Object {
                              "doubleQuoted": false,
                              "endPosition": 141,
                              "errors": Array [],
                              "kind": 0,
                              "parent": [Circular],
                              "plainScalar": true,
                              "rawValue": "transition",
                              "startPosition": 131,
                              "value": "transition",
                            },
                            "kind": 1,
                            "parent": [Circular],
                            "startPosition": 131,
                            "value": Object {
                              "doubleQuoted": false,
                              "endPosition": 146,
                              "errors": Array [],
                              "kind": 0,
                              "parent": [Circular],
                              "plainScalar": true,
                              "rawValue": "end",
                              "startPosition": 143,
                              "value": "end",
                            },
                          },
                          Object {
                            "endPosition": 225,
                            "errors": Array [],
                            "key": Object {
                              "doubleQuoted": false,
                              "endPosition": 156,
                              "errors": Array [],
                              "kind": 0,
                              "parent": [Circular],
                              "plainScalar": true,
                              "rawValue": "actions",
                              "startPosition": 149,
                              "value": "actions",
                            },
                            "kind": 1,
                            "parent": [Circular],
                            "startPosition": 149,
                            "value": Object {
                              "endPosition": 225,
                              "errors": Array [],
                              "items": Array [
                                Object {
                                  "endPosition": 224,
                                  "errors": Array [],
                                  "kind": 2,
                                  "mappings": Array [
                                    Object {
                                      "endPosition": 183,
                                      "errors": Array [],
                                      "key": Object {
                                        "doubleQuoted": false,
                                        "endPosition": 166,
                                        "errors": Array [],
                                        "kind": 0,
                                        "parent": [Circular],
                                        "plainScalar": true,
                                        "rawValue": "name",
                                        "startPosition": 162,
                                        "value": "name",
                                      },
                                      "kind": 1,
                                      "parent": [Circular],
                                      "startPosition": 162,
                                      "value": Object {
                                        "doubleQuoted": false,
                                        "endPosition": 183,
                                        "errors": Array [],
                                        "kind": 0,
                                        "parent": [Circular],
                                        "plainScalar": true,
                                        "rawValue": "testStateAction",
                                        "startPosition": 168,
                                        "value": "testStateAction",
                                      },
                                    },
                                    Object {
                                      "endPosition": 224,
                                      "errors": Array [],
                                      "key": Object {
                                        "doubleQuoted": false,
                                        "endPosition": 199,
                                        "errors": Array [],
                                        "kind": 0,
                                        "parent": [Circular],
                                        "plainScalar": true,
                                        "rawValue": "functionRef",
                                        "startPosition": 188,
                                        "value": "functionRef",
                                      },
                                      "kind": 1,
                                      "parent": [Circular],
                                      "startPosition": 188,
                                      "value": Object {
                                        "endPosition": 224,
                                        "errors": Array [],
                                        "kind": 2,
                                        "mappings": Array [
                                          Object {
                                            "endPosition": 224,
                                            "errors": Array [],
                                            "key": Object {
                                              "doubleQuoted": false,
                                              "endPosition": 214,
                                              "errors": Array [],
                                              "kind": 0,
                                              "parent": [Circular],
                                              "plainScalar": true,
                                              "rawValue": "refName",
                                              "startPosition": 207,
                                              "value": "refName",
                                            },
                                            "kind": 1,
                                            "parent": [Circular],
                                            "startPosition": 207,
                                            "value": Object {
                                              "doubleQuoted": false,
                                              "endPosition": 224,
                                              "errors": Array [],
                                              "kind": 0,
                                              "parent": [Circular],
                                              "rawValue": "",
                                              "singleQuoted": true,
                                              "startPosition": 216,
                                              "value": "myFunc",
                                            },
                                          },
                                        ],
                                        "parent": [Circular],
                                        "startPosition": 207,
                                      },
                                    },
                                  ],
                                  "parent": [Circular],
                                  "startPosition": 162,
                                },
                              ],
                              "kind": 3,
                              "parent": [Circular],
                              "startPosition": 160,
                            },
                          },
                        ],
                        "parent": Object {
                          "endPosition": 225,
                          "errors": Array [],
                          "items": Array [
                            [Circular],
                          ],
                          "kind": 3,
                          "parent": Object {
                            "endPosition": 225,
                            "errors": Array [],
                            "key": Object {
                              "doubleQuoted": true,
                              "endPosition": 91,
                              "errors": Array [],
                              "kind": 0,
                              "parent": [Circular],
                              "rawValue": "\\"states\\"",
                              "startPosition": 83,
                              "value": "states",
                            },
                            "kind": 1,
                            "parent": Object {
                              "endPosition": 224,
                              "errors": Array [],
                              "kind": 2,
                              "mappings": Array [
                                Object {
                                  "endPosition": 83,
                                  "errors": Array [],
                                  "key": Object {
                                    "doubleQuoted": false,
                                    "endPosition": 13,
                                    "errors": Array [],
                                    "kind": 0,
                                    "parent": [Circular],
                                    "plainScalar": true,
                                    "rawValue": "functions",
                                    "startPosition": 4,
                                    "value": "functions",
                                  },
                                  "kind": 1,
                                  "parent": [Circular],
                                  "startPosition": 4,
                                  "value": Object {
                                    "endPosition": 83,
                                    "errors": Array [],
                                    "items": Array [
                                      Object {
                                        "endPosition": 82,
                                        "errors": Array [],
                                        "kind": 2,
                                        "mappings": Array [
                                          Object {
                                            "endPosition": 29,
                                            "errors": Array [],
                                            "key": Object {
                                              "doubleQuoted": false,
                                              "endPosition": 21,
                                              "errors": Array [],
                                              "kind": 0,
                                              "parent": [Circular],
                                              "plainScalar": true,
                                              "rawValue": "name",
                                              "startPosition": 17,
                                              "value": "name",
                                            },
                                            "kind": 1,
                                            "parent": [Circular],
                                            "startPosition": 17,
                                            "value": Object {
                                              "doubleQuoted": false,
                                              "endPosition": 29,
                                              "errors": Array [],
                                              "kind": 0,
                                              "parent": [Circular],
                                              "plainScalar": true,
                                              "rawValue": "myFunc",
                                              "startPosition": 23,
                                              "value": "myFunc",
                                            },
                                          },
                                          Object {
                                            "endPosition": 69,
                                            "errors": Array [],
                                            "key": Object {
                                              "doubleQuoted": false,
                                              "endPosition": 41,
                                              "errors": Array [],
                                              "kind": 0,
                                              "parent": [Circular],
                                              "plainScalar": true,
                                              "rawValue": "operation",
                                              "startPosition": 32,
                                              "value": "operation",
                                            },
                                            "kind": 1,
                                            "parent": [Circular],
                                            "startPosition": 32,
                                            "value": Object {
                                              "doubleQuoted": true,
                                              "endPosition": 69,
                                              "errors": Array [],
                                              "kind": 0,
                                              "parent": [Circular],
                                              "rawValue": "\\"./specs/myService#myFunc\\"",
                                              "startPosition": 43,
                                              "value": "./specs/myService#myFunc",
                                            },
                                          },
                                          Object {
                                            "endPosition": 82,
                                            "errors": Array [],
                                            "key": Object {
                                              "doubleQuoted": false,
                                              "endPosition": 76,
                                              "errors": Array [],
                                              "kind": 0,
                                              "parent": [Circular],
                                              "plainScalar": true,
                                              "rawValue": "type",
                                              "startPosition": 72,
                                              "value": "type",
                                            },
                                            "kind": 1,
                                            "parent": [Circular],
                                            "startPosition": 72,
                                            "value": Object {
                                              "doubleQuoted": false,
                                              "endPosition": 82,
                                              "errors": Array [],
                                              "kind": 0,
                                              "parent": [Circular],
                                              "plainScalar": true,
                                              "rawValue": "rest",
                                              "startPosition": 78,
                                              "value": "rest",
                                            },
                                          },
                                        ],
                                        "parent": [Circular],
                                        "startPosition": 17,
                                      },
                                    ],
                                    "kind": 3,
                                    "parent": [Circular],
                                    "startPosition": 15,
                                  },
                                },
                                [Circular],
                              ],
                              "parent": null,
                              "startPosition": 4,
                            },
                            "startPosition": 83,
                            "value": [Circular],
                          },
                          "startPosition": 93,
                        },
                        "startPosition": 95,
                      },
                      "startPosition": 95,
                      "value": [Circular],
                    },
                    "plainScalar": true,
                    "rawValue": "testState",
                    "startPosition": 101,
                    "value": "testState",
                  },
                },
                Object {
                  "children": Array [
                    Object {
                      "length": 4,
                      "offset": 113,
                      "parent": [Circular],
                      "type": "string",
                      "value": "type",
                    },
                    Object {
                      "length": 9,
                      "offset": 119,
                      "parent": [Circular],
                      "type": "string",
                      "value": "operation",
                    },
                  ],
                  "colonOffset": 117,
                  "length": 15,
                  "offset": 113,
                  "parent": [Circular],
                  "type": "property",
                  "value": Object {
                    "doubleQuoted": false,
                    "endPosition": 128,
                    "errors": Array [],
                    "kind": 0,
                    "parent": Object {
                      "endPosition": 128,
                      "errors": Array [],
                      "key": Object {
                        "doubleQuoted": false,
                        "endPosition": 117,
                        "errors": Array [],
                        "kind": 0,
                        "parent": [Circular],
                        "plainScalar": true,
                        "rawValue": "type",
                        "startPosition": 113,
                        "value": "type",
                      },
                      "kind": 1,
                      "parent": Object {
                        "endPosition": 225,
                        "errors": Array [],
                        "kind": 2,
                        "mappings": Array [
                          Object {
                            "endPosition": 110,
                            "errors": Array [],
                            "key": Object {
                              "doubleQuoted": false,
                              "endPosition": 99,
                              "errors": Array [],
                              "kind": 0,
                              "parent": [Circular],
                              "plainScalar": true,
                              "rawValue": "name",
                              "startPosition": 95,
                              "value": "name",
                            },
                            "kind": 1,
                            "parent": [Circular],
                            "startPosition": 95,
                            "value": Object {
                              "doubleQuoted": false,
                              "endPosition": 110,
                              "errors": Array [],
                              "kind": 0,
                              "parent": [Circular],
                              "plainScalar": true,
                              "rawValue": "testState",
                              "startPosition": 101,
                              "value": "testState",
                            },
                          },
                          [Circular],
                          Object {
                            "endPosition": 146,
                            "errors": Array [],
                            "key": Object {
                              "doubleQuoted": false,
                              "endPosition": 141,
                              "errors": Array [],
                              "kind": 0,
                              "parent": [Circular],
                              "plainScalar": true,
                              "rawValue": "transition",
                              "startPosition": 131,
                              "value": "transition",
                            },
                            "kind": 1,
                            "parent": [Circular],
                            "startPosition": 131,
                            "value": Object {
                              "doubleQuoted": false,
                              "endPosition": 146,
                              "errors": Array [],
                              "kind": 0,
                              "parent": [Circular],
                              "plainScalar": true,
                              "rawValue": "end",
                              "startPosition": 143,
                              "value": "end",
                            },
                          },
                          Object {
                            "endPosition": 225,
                            "errors": Array [],
                            "key": Object {
                              "doubleQuoted": false,
                              "endPosition": 156,
                              "errors": Array [],
                              "kind": 0,
                              "parent": [Circular],
                              "plainScalar": true,
                              "rawValue": "actions",
                              "startPosition": 149,
                              "value": "actions",
                            },
                            "kind": 1,
                            "parent": [Circular],
                            "startPosition": 149,
                            "value": Object {
                              "endPosition": 225,
                              "errors": Array [],
                              "items": Array [
                                Object {
                                  "endPosition": 224,
                                  "errors": Array [],
                                  "kind": 2,
                                  "mappings": Array [
                                    Object {
                                      "endPosition": 183,
                                      "errors": Array [],
                                      "key": Object {
                                        "doubleQuoted": false,
                                        "endPosition": 166,
                                        "errors": Array [],
                                        "kind": 0,
                                        "parent": [Circular],
                                        "plainScalar": true,
                                        "rawValue": "name",
                                        "startPosition": 162,
                                        "value": "name",
                                      },
                                      "kind": 1,
                                      "parent": [Circular],
                                      "startPosition": 162,
                                      "value": Object {
                                        "doubleQuoted": false,
                                        "endPosition": 183,
                                        "errors": Array [],
                                        "kind": 0,
                                        "parent": [Circular],
                                        "plainScalar": true,
                                        "rawValue": "testStateAction",
                                        "startPosition": 168,
                                        "value": "testStateAction",
                                      },
                                    },
                                    Object {
                                      "endPosition": 224,
                                      "errors": Array [],
                                      "key": Object {
                                        "doubleQuoted": false,
                                        "endPosition": 199,
                                        "errors": Array [],
                                        "kind": 0,
                                        "parent": [Circular],
                                        "plainScalar": true,
                                        "rawValue": "functionRef",
                                        "startPosition": 188,
                                        "value": "functionRef",
                                      },
                                      "kind": 1,
                                      "parent": [Circular],
                                      "startPosition": 188,
                                      "value": Object {
                                        "endPosition": 224,
                                        "errors": Array [],
                                        "kind": 2,
                                        "mappings": Array [
                                          Object {
                                            "endPosition": 224,
                                            "errors": Array [],
                                            "key": Object {
                                              "doubleQuoted": false,
                                              "endPosition": 214,
                                              "errors": Array [],
                                              "kind": 0,
                                              "parent": [Circular],
                                              "plainScalar": true,
                                              "rawValue": "refName",
                                              "startPosition": 207,
                                              "value": "refName",
                                            },
                                            "kind": 1,
                                            "parent": [Circular],
                                            "startPosition": 207,
                                            "value": Object {
                                              "doubleQuoted": false,
                                              "endPosition": 224,
                                              "errors": Array [],
                                              "kind": 0,
                                              "parent": [Circular],
                                              "rawValue": "",
                                              "singleQuoted": true,
                                              "startPosition": 216,
                                              "value": "myFunc",
                                            },
                                          },
                                        ],
                                        "parent": [Circular],
                                        "startPosition": 207,
                                      },
                                    },
                                  ],
                                  "parent": [Circular],
                                  "startPosition": 162,
                                },
                              ],
                              "kind": 3,
                              "parent": [Circular],
                              "startPosition": 160,
                            },
                          },
                        ],
                        "parent": Object {
                          "endPosition": 225,
                          "errors": Array [],
                          "items": Array [
                            [Circular],
                          ],
                          "kind": 3,
                          "parent": Object {
                            "endPosition": 225,
                            "errors": Array [],
                            "key": Object {
                              "doubleQuoted": true,
                              "endPosition": 91,
                              "errors": Array [],
                              "kind": 0,
                              "parent": [Circular],
                              "rawValue": "\\"states\\"",
                              "startPosition": 83,
                              "value": "states",
                            },
                            "kind": 1,
                            "parent": Object {
                              "endPosition": 224,
                              "errors": Array [],
                              "kind": 2,
                              "mappings": Array [
                                Object {
                                  "endPosition": 83,
                                  "errors": Array [],
                                  "key": Object {
                                    "doubleQuoted": false,
                                    "endPosition": 13,
                                    "errors": Array [],
                                    "kind": 0,
                                    "parent": [Circular],
                                    "plainScalar": true,
                                    "rawValue": "functions",
                                    "startPosition": 4,
                                    "value": "functions",
                                  },
                                  "kind": 1,
                                  "parent": [Circular],
                                  "startPosition": 4,
                                  "value": Object {
                                    "endPosition": 83,
                                    "errors": Array [],
                                    "items": Array [
                                      Object {
                                        "endPosition": 82,
                                        "errors": Array [],
                                        "kind": 2,
                                        "mappings": Array [
                                          Object {
                                            "endPosition": 29,
                                            "errors": Array [],
                                            "key": Object {
                                              "doubleQuoted": false,
                                              "endPosition": 21,
                                              "errors": Array [],
                                              "kind": 0,
                                              "parent": [Circular],
                                              "plainScalar": true,
                                              "rawValue": "name",
                                              "startPosition": 17,
                                              "value": "name",
                                            },
                                            "kind": 1,
                                            "parent": [Circular],
                                            "startPosition": 17,
                                            "value": Object {
                                              "doubleQuoted": false,
                                              "endPosition": 29,
                                              "errors": Array [],
                                              "kind": 0,
                                              "parent": [Circular],
                                              "plainScalar": true,
                                              "rawValue": "myFunc",
                                              "startPosition": 23,
                                              "value": "myFunc",
                                            },
                                          },
                                          Object {
                                            "endPosition": 69,
                                            "errors": Array [],
                                            "key": Object {
                                              "doubleQuoted": false,
                                              "endPosition": 41,
                                              "errors": Array [],
                                              "kind": 0,
                                              "parent": [Circular],
                                              "plainScalar": true,
                                              "rawValue": "operation",
                                              "startPosition": 32,
                                              "value": "operation",
                                            },
                                            "kind": 1,
                                            "parent": [Circular],
                                            "startPosition": 32,
                                            "value": Object {
                                              "doubleQuoted": true,
                                              "endPosition": 69,
                                              "errors": Array [],
                                              "kind": 0,
                                              "parent": [Circular],
                                              "rawValue": "\\"./specs/myService#myFunc\\"",
                                              "startPosition": 43,
                                              "value": "./specs/myService#myFunc",
                                            },
                                          },
                                          Object {
                                            "endPosition": 82,
                                            "errors": Array [],
                                            "key": Object {
                                              "doubleQuoted": false,
                                              "endPosition": 76,
                                              "errors": Array [],
                                              "kind": 0,
                                              "parent": [Circular],
                                              "plainScalar": true,
                                              "rawValue": "type",
                                              "startPosition": 72,
                                              "value": "type",
                                            },
                                            "kind": 1,
                                            "parent": [Circular],
                                            "startPosition": 72,
                                            "value": Object {
                                              "doubleQuoted": false,
                                              "endPosition": 82,
                                              "errors": Array [],
                                              "kind": 0,
                                              "parent": [Circular],
                                              "plainScalar": true,
                                              "rawValue": "rest",
                                              "startPosition": 78,
                                              "value": "rest",
                                            },
                                          },
                                        ],
                                        "parent": [Circular],
                                        "startPosition": 17,
                                      },
                                    ],
                                    "kind": 3,
                                    "parent": [Circular],
                                    "startPosition": 15,
                                  },
                                },
                                [Circular],
                              ],
                              "parent": null,
                              "startPosition": 4,
                            },
                            "startPosition": 83,
                            "value": [Circular],
                          },
                          "startPosition": 93,
                        },
                        "startPosition": 95,
                      },
                      "startPosition": 113,
                      "value": [Circular],
                    },
                    "plainScalar": true,
                    "rawValue": "operation",
                    "startPosition": 119,
                    "value": "operation",
                  },
                },
                Object {
                  "children": Array [
                    Object {
                      "length": 10,
                      "offset": 131,
                      "parent": [Circular],
                      "type": "string",
                      "value": "transition",
                    },
                    Object {
                      "length": 3,
                      "offset": 143,
                      "parent": [Circular],
                      "type": "string",
                      "value": "end",
                    },
                  ],
                  "colonOffset": 141,
                  "length": 15,
                  "offset": 131,
                  "parent": [Circular],
                  "type": "property",
                  "value": Object {
                    "doubleQuoted": false,
                    "endPosition": 146,
                    "errors": Array [],
                    "kind": 0,
                    "parent": Object {
                      "endPosition": 146,
                      "errors": Array [],
                      "key": Object {
                        "doubleQuoted": false,
                        "endPosition": 141,
                        "errors": Array [],
                        "kind": 0,
                        "parent": [Circular],
                        "plainScalar": true,
                        "rawValue": "transition",
                        "startPosition": 131,
                        "value": "transition",
                      },
                      "kind": 1,
                      "parent": Object {
                        "endPosition": 225,
                        "errors": Array [],
                        "kind": 2,
                        "mappings": Array [
                          Object {
                            "endPosition": 110,
                            "errors": Array [],
                            "key": Object {
                              "doubleQuoted": false,
                              "endPosition": 99,
                              "errors": Array [],
                              "kind": 0,
                              "parent": [Circular],
                              "plainScalar": true,
                              "rawValue": "name",
                              "startPosition": 95,
                              "value": "name",
                            },
                            "kind": 1,
                            "parent": [Circular],
                            "startPosition": 95,
                            "value": Object {
                              "doubleQuoted": false,
                              "endPosition": 110,
                              "errors": Array [],
                              "kind": 0,
                              "parent": [Circular],
                              "plainScalar": true,
                              "rawValue": "testState",
                              "startPosition": 101,
                              "value": "testState",
                            },
                          },
                          Object {
                            "endPosition": 128,
                            "errors": Array [],
                            "key": Object {
                              "doubleQuoted": false,
                              "endPosition": 117,
                              "errors": Array [],
                              "kind": 0,
                              "parent": [Circular],
                              "plainScalar": true,
                              "rawValue": "type",
                              "startPosition": 113,
                              "value": "type",
                            },
                            "kind": 1,
                            "parent": [Circular],
                            "startPosition": 113,
                            "value": Object {
                              "doubleQuoted": false,
                              "endPosition": 128,
                              "errors": Array [],
                              "kind": 0,
                              "parent": [Circular],
                              "plainScalar": true,
                              "rawValue": "operation",
                              "startPosition": 119,
                              "value": "operation",
                            },
                          },
                          [Circular],
                          Object {
                            "endPosition": 225,
                            "errors": Array [],
                            "key": Object {
                              "doubleQuoted": false,
                              "endPosition": 156,
                              "errors": Array [],
                              "kind": 0,
                              "parent": [Circular],
                              "plainScalar": true,
                              "rawValue": "actions",
                              "startPosition": 149,
                              "value": "actions",
                            },
                            "kind": 1,
                            "parent": [Circular],
                            "startPosition": 149,
                            "value": Object {
                              "endPosition": 225,
                              "errors": Array [],
                              "items": Array [
                                Object {
                                  "endPosition": 224,
                                  "errors": Array [],
                                  "kind": 2,
                                  "mappings": Array [
                                    Object {
                                      "endPosition": 183,
                                      "errors": Array [],
                                      "key": Object {
                                        "doubleQuoted": false,
                                        "endPosition": 166,
                                        "errors": Array [],
                                        "kind": 0,
                                        "parent": [Circular],
                                        "plainScalar": true,
                                        "rawValue": "name",
                                        "startPosition": 162,
                                        "value": "name",
                                      },
                                      "kind": 1,
                                      "parent": [Circular],
                                      "startPosition": 162,
                                      "value": Object {
                                        "doubleQuoted": false,
                                        "endPosition": 183,
                                        "errors": Array [],
                                        "kind": 0,
                                        "parent": [Circular],
                                        "plainScalar": true,
                                        "rawValue": "testStateAction",
                                        "startPosition": 168,
                                        "value": "testStateAction",
                                      },
                                    },
                                    Object {
                                      "endPosition": 224,
                                      "errors": Array [],
                                      "key": Object {
                                        "doubleQuoted": false,
                                        "endPosition": 199,
                                        "errors": Array [],
                                        "kind": 0,
                                        "parent": [Circular],
                                        "plainScalar": true,
                                        "rawValue": "functionRef",
                                        "startPosition": 188,
                                        "value": "functionRef",
                                      },
                                      "kind": 1,
                                      "parent": [Circular],
                                      "startPosition": 188,
                                      "value": Object {
                                        "endPosition": 224,
                                        "errors": Array [],
                                        "kind": 2,
                                        "mappings": Array [
                                          Object {
                                            "endPosition": 224,
                                            "errors": Array [],
                                            "key": Object {
                                              "doubleQuoted": false,
                                              "endPosition": 214,
                                              "errors": Array [],
                                              "kind": 0,
                                              "parent": [Circular],
                                              "plainScalar": true,
                                              "rawValue": "refName",
                                              "startPosition": 207,
                                              "value": "refName",
                                            },
                                            "kind": 1,
                                            "parent": [Circular],
                                            "startPosition": 207,
                                            "value": Object {
                                              "doubleQuoted": false,
                                              "endPosition": 224,
                                              "errors": Array [],
                                              "kind": 0,
                                              "parent": [Circular],
                                              "rawValue": "",
                                              "singleQuoted": true,
                                              "startPosition": 216,
                                              "value": "myFunc",
                                            },
                                          },
                                        ],
                                        "parent": [Circular],
                                        "startPosition": 207,
                                      },
                                    },
                                  ],
                                  "parent": [Circular],
                                  "startPosition": 162,
                                },
                              ],
                              "kind": 3,
                              "parent": [Circular],
                              "startPosition": 160,
                            },
                          },
                        ],
                        "parent": Object {
                          "endPosition": 225,
                          "errors": Array [],
                          "items": Array [
                            [Circular],
                          ],
                          "kind": 3,
                          "parent": Object {
                            "endPosition": 225,
                            "errors": Array [],
                            "key": Object {
                              "doubleQuoted": true,
                              "endPosition": 91,
                              "errors": Array [],
                              "kind": 0,
                              "parent": [Circular],
                              "rawValue": "\\"states\\"",
                              "startPosition": 83,
                              "value": "states",
                            },
                            "kind": 1,
                            "parent": Object {
                              "endPosition": 224,
                              "errors": Array [],
                              "kind": 2,
                              "mappings": Array [
                                Object {
                                  "endPosition": 83,
                                  "errors": Array [],
                                  "key": Object {
                                    "doubleQuoted": false,
                                    "endPosition": 13,
                                    "errors": Array [],
                                    "kind": 0,
                                    "parent": [Circular],
                                    "plainScalar": true,
                                    "rawValue": "functions",
                                    "startPosition": 4,
                                    "value": "functions",
                                  },
                                  "kind": 1,
                                  "parent": [Circular],
                                  "startPosition": 4,
                                  "value": Object {
                                    "endPosition": 83,
                                    "errors": Array [],
                                    "items": Array [
                                      Object {
                                        "endPosition": 82,
                                        "errors": Array [],
                                        "kind": 2,
                                        "mappings": Array [
                                          Object {
                                            "endPosition": 29,
                                            "errors": Array [],
                                            "key": Object {
                                              "doubleQuoted": false,
                                              "endPosition": 21,
                                              "errors": Array [],
                                              "kind": 0,
                                              "parent": [Circular],
                                              "plainScalar": true,
                                              "rawValue": "name",
                                              "startPosition": 17,
                                              "value": "name",
                                            },
                                            "kind": 1,
                                            "parent": [Circular],
                                            "startPosition": 17,
                                            "value": Object {
                                              "doubleQuoted": false,
                                              "endPosition": 29,
                                              "errors": Array [],
                                              "kind": 0,
                                              "parent": [Circular],
                                              "plainScalar": true,
                                              "rawValue": "myFunc",
                                              "startPosition": 23,
                                              "value": "myFunc",
                                            },
                                          },
                                          Object {
                                            "endPosition": 69,
                                            "errors": Array [],
                                            "key": Object {
                                              "doubleQuoted": false,
                                              "endPosition": 41,
                                              "errors": Array [],
                                              "kind": 0,
                                              "parent": [Circular],
                                              "plainScalar": true,
                                              "rawValue": "operation",
                                              "startPosition": 32,
                                              "value": "operation",
                                            },
                                            "kind": 1,
                                            "parent": [Circular],
                                            "startPosition": 32,
                                            "value": Object {
                                              "doubleQuoted": true,
                                              "endPosition": 69,
                                              "errors": Array [],
                                              "kind": 0,
                                              "parent": [Circular],
                                              "rawValue": "\\"./specs/myService#myFunc\\"",
                                              "startPosition": 43,
                                              "value": "./specs/myService#myFunc",
                                            },
                                          },
                                          Object {
                                            "endPosition": 82,
                                            "errors": Array [],
                                            "key": Object {
                                              "doubleQuoted": false,
                                              "endPosition": 76,
                                              "errors": Array [],
                                              "kind": 0,
                                              "parent": [Circular],
                                              "plainScalar": true,
                                              "rawValue": "type",
                                              "startPosition": 72,
                                              "value": "type",
                                            },
                                            "kind": 1,
                                            "parent": [Circular],
                                            "startPosition": 72,
                                            "value": Object {
                                              "doubleQuoted": false,
                                              "endPosition": 82,
                                              "errors": Array [],
                                              "kind": 0,
                                              "parent": [Circular],
                                              "plainScalar": true,
                                              "rawValue": "rest",
                                              "startPosition": 78,
                                              "value": "rest",
                                            },
                                          },
                                        ],
                                        "parent": [Circular],
                                        "startPosition": 17,
                                      },
                                    ],
                                    "kind": 3,
                                    "parent": [Circular],
                                    "startPosition": 15,
                                  },
                                },
                                [Circular],
                              ],
                              "parent": null,
                              "startPosition": 4,
                            },
                            "startPosition": 83,
                            "value": [Circular],
                          },
                          "startPosition": 93,
                        },
                        "startPosition": 95,
                      },
                      "startPosition": 131,
                      "value": [Circular],
                    },
                    "plainScalar": true,
                    "rawValue": "end",
                    "startPosition": 143,
                    "value": "end",
                  },
                },
                Object {
                  "children": Array [
                    Object {
                      "length": 7,
                      "offset": 149,
                      "parent": [Circular],
                      "type": "string",
                      "value": "actions",
                    },
                    Object {
                      "children": Array [
                        Object {
                          "children": Array [
                            Object {
                              "children": Array [
                                Object {
                                  "length": 4,
                                  "offset": 162,
                                  "parent": [Circular],
                                  "type": "string",
                                  "value": "name",
                                },
                                Object {
                                  "length": 15,
                                  "offset": 168,
                                  "parent": [Circular],
                                  "type": "string",
                                  "value": "testStateAction",
                                },
                              ],
                              "colonOffset": 166,
                              "length": 21,
                              "offset": 162,
                              "parent": [Circular],
                              "type": "property",
                              "value": Object {
                                "doubleQuoted": false,
                                "endPosition": 183,
                                "errors": Array [],
                                "kind": 0,
                                "parent": Object {
                                  "endPosition": 183,
                                  "errors": Array [],
                                  "key": Object {
                                    "doubleQuoted": false,
                                    "endPosition": 166,
                                    "errors": Array [],
                                    "kind": 0,
                                    "parent": [Circular],
                                    "plainScalar": true,
                                    "rawValue": "name",
                                    "startPosition": 162,
                                    "value": "name",
                                  },
                                  "kind": 1,
                                  "parent": Object {
                                    "endPosition": 224,
                                    "errors": Array [],
                                    "kind": 2,
                                    "mappings": Array [
                                      [Circular],
                                      Object {
                                        "endPosition": 224,
                                        "errors": Array [],
                                        "key": Object {
                                          "doubleQuoted": false,
                                          "endPosition": 199,
                                          "errors": Array [],
                                          "kind": 0,
                                          "parent": [Circular],
                                          "plainScalar": true,
                                          "rawValue": "functionRef",
                                          "startPosition": 188,
                                          "value": "functionRef",
                                        },
                                        "kind": 1,
                                        "parent": [Circular],
                                        "startPosition": 188,
                                        "value": Object {
                                          "endPosition": 224,
                                          "errors": Array [],
                                          "kind": 2,
                                          "mappings": Array [
                                            Object {
                                              "endPosition": 224,
                                              "errors": Array [],
                                              "key": Object {
                                                "doubleQuoted": false,
                                                "endPosition": 214,
                                                "errors": Array [],
                                                "kind": 0,
                                                "parent": [Circular],
                                                "plainScalar": true,
                                                "rawValue": "refName",
                                                "startPosition": 207,
                                                "value": "refName",
                                              },
                                              "kind": 1,
                                              "parent": [Circular],
                                              "startPosition": 207,
                                              "value": Object {
                                                "doubleQuoted": false,
                                                "endPosition": 224,
                                                "errors": Array [],
                                                "kind": 0,
                                                "parent": [Circular],
                                                "rawValue": "",
                                                "singleQuoted": true,
                                                "startPosition": 216,
                                                "value": "myFunc",
                                              },
                                            },
                                          ],
                                          "parent": [Circular],
                                          "startPosition": 207,
                                        },
                                      },
                                    ],
                                    "parent": Object {
                                      "endPosition": 225,
                                      "errors": Array [],
                                      "items": Array [
                                        [Circular],
                                      ],
                                      "kind": 3,
                                      "parent": Object {
                                        "endPosition": 225,
                                        "errors": Array [],
                                        "key": Object {
                                          "doubleQuoted": false,
                                          "endPosition": 156,
                                          "errors": Array [],
                                          "kind": 0,
                                          "parent": [Circular],
                                          "plainScalar": true,
                                          "rawValue": "actions",
                                          "startPosition": 149,
                                          "value": "actions",
                                        },
                                        "kind": 1,
                                        "parent": Object {
                                          "endPosition": 225,
                                          "errors": Array [],
                                          "kind": 2,
                                          "mappings": Array [
                                            Object {
                                              "endPosition": 110,
                                              "errors": Array [],
                                              "key": Object {
                                                "doubleQuoted": false,
                                                "endPosition": 99,
                                                "errors": Array [],
                                                "kind": 0,
                                                "parent": [Circular],
                                                "plainScalar": true,
                                                "rawValue": "name",
                                                "startPosition": 95,
                                                "value": "name",
                                              },
                                              "kind": 1,
                                              "parent": [Circular],
                                              "startPosition": 95,
                                              "value": Object {
                                                "doubleQuoted": false,
                                                "endPosition": 110,
                                                "errors": Array [],
                                                "kind": 0,
                                                "parent": [Circular],
                                                "plainScalar": true,
                                                "rawValue": "testState",
                                                "startPosition": 101,
                                                "value": "testState",
                                              },
                                            },
                                            Object {
                                              "endPosition": 128,
                                              "errors": Array [],
                                              "key": Object {
                                                "doubleQuoted": false,
                                                "endPosition": 117,
                                                "errors": Array [],
                                                "kind": 0,
                                                "parent": [Circular],
                                                "plainScalar": true,
                                                "rawValue": "type",
                                                "startPosition": 113,
                                                "value": "type",
                                              },
                                              "kind": 1,
                                              "parent": [Circular],
                                              "startPosition": 113,
                                              "value": Object {
                                                "doubleQuoted": false,
                                                "endPosition": 128,
                                                "errors": Array [],
                                                "kind": 0,
                                                "parent": [Circular],
                                                "plainScalar": true,
                                                "rawValue": "operation",
                                                "startPosition": 119,
                                                "value": "operation",
                                              },
                                            },
                                            Object {
                                              "endPosition": 146,
                                              "errors": Array [],
                                              "key": Object {
                                                "doubleQuoted": false,
                                                "endPosition": 141,
                                                "errors": Array [],
                                                "kind": 0,
                                                "parent": [Circular],
                                                "plainScalar": true,
                                                "rawValue": "transition",
                                                "startPosition": 131,
                                                "value": "transition",
                                              },
                                              "kind": 1,
                                              "parent": [Circular],
                                              "startPosition": 131,
                                              "value": Object {
                                                "doubleQuoted": false,
                                                "endPosition": 146,
                                                "errors": Array [],
                                                "kind": 0,
                                                "parent": [Circular],
                                                "plainScalar": true,
                                                "rawValue": "end",
                                                "startPosition": 143,
                                                "value": "end",
                                              },
                                            },
                                            [Circular],
                                          ],
                                          "parent": Object {
                                            "endPosition": 225,
                                            "errors": Array [],
                                            "items": Array [
                                              [Circular],
                                            ],
                                            "kind": 3,
                                            "parent": Object {
                                              "endPosition": 225,
                                              "errors": Array [],
                                              "key": Object {
                                                "doubleQuoted": true,
                                                "endPosition": 91,
                                                "errors": Array [],
                                                "kind": 0,
                                                "parent": [Circular],
                                                "rawValue": "\\"states\\"",
                                                "startPosition": 83,
                                                "value": "states",
                                              },
                                              "kind": 1,
                                              "parent": Object {
                                                "endPosition": 224,
                                                "errors": Array [],
                                                "kind": 2,
                                                "mappings": Array [
                                                  Object {
                                                    "endPosition": 83,
                                                    "errors": Array [],
                                                    "key": Object {
                                                      "doubleQuoted": false,
                                                      "endPosition": 13,
                                                      "errors": Array [],
                                                      "kind": 0,
                                                      "parent": [Circular],
                                                      "plainScalar": true,
                                                      "rawValue": "functions",
                                                      "startPosition": 4,
                                                      "value": "functions",
                                                    },
                                                    "kind": 1,
                                                    "parent": [Circular],
                                                    "startPosition": 4,
                                                    "value": Object {
                                                      "endPosition": 83,
                                                      "errors": Array [],
                                                      "items": Array [
                                                        Object {
                                                          "endPosition": 82,
                                                          "errors": Array [],
                                                          "kind": 2,
                                                          "mappings": Array [
                                                            Object {
                                                              "endPosition": 29,
                                                              "errors": Array [],
                                                              "key": Object {
                                                                "doubleQuoted": false,
                                                                "endPosition": 21,
                                                                "errors": Array [],
                                                                "kind": 0,
                                                                "parent": [Circular],
                                                                "plainScalar": true,
                                                                "rawValue": "name",
                                                                "startPosition": 17,
                                                                "value": "name",
                                                              },
                                                              "kind": 1,
                                                              "parent": [Circular],
                                                              "startPosition": 17,
                                                              "value": Object {
                                                                "doubleQuoted": false,
                                                                "endPosition": 29,
                                                                "errors": Array [],
                                                                "kind": 0,
                                                                "parent": [Circular],
                                                                "plainScalar": true,
                                                                "rawValue": "myFunc",
                                                                "startPosition": 23,
                                                                "value": "myFunc",
                                                              },
                                                            },
                                                            Object {
                                                              "endPosition": 69,
                                                              "errors": Array [],
                                                              "key": Object {
                                                                "doubleQuoted": false,
                                                                "endPosition": 41,
                                                                "errors": Array [],
                                                                "kind": 0,
                                                                "parent": [Circular],
                                                                "plainScalar": true,
                                                                "rawValue": "operation",
                                                                "startPosition": 32,
                                                                "value": "operation",
                                                              },
                                                              "kind": 1,
                                                              "parent": [Circular],
                                                              "startPosition": 32,
                                                              "value": Object {
                                                                "doubleQuoted": true,
                                                                "endPosition": 69,
                                                                "errors": Array [],
                                                                "kind": 0,
                                                                "parent": [Circular],
                                                                "rawValue": "\\"./specs/myService#myFunc\\"",
                                                                "startPosition": 43,
                                                                "value": "./specs/myService#myFunc",
                                                              },
                                                            },
                                                            Object {
                                                              "endPosition": 82,
                                                              "errors": Array [],
                                                              "key": Object {
                                                                "doubleQuoted": false,
                                                                "endPosition": 76,
                                                                "errors": Array [],
                                                                "kind": 0,
                                                                "parent": [Circular],
                                                                "plainScalar": true,
                                                                "rawValue": "type",
                                                                "startPosition": 72,
                                                                "value": "type",
                                                              },
                                                              "kind": 1,
                                                              "parent": [Circular],
                                                              "startPosition": 72,
                                                              "value": Object {
                                                                "doubleQuoted": false,
                                                                "endPosition": 82,
                                                                "errors": Array [],
                                                                "kind": 0,
                                                                "parent": [Circular],
                                                                "plainScalar": true,
                                                                "rawValue": "rest",
                                                                "startPosition": 78,
                                                                "value": "rest",
                                                              },
                                                            },
                                                          ],
                                                          "parent": [Circular],
                                                          "startPosition": 17,
                                                        },
                                                      ],
                                                      "kind": 3,
                                                      "parent": [Circular],
                                                      "startPosition": 15,
                                                    },
                                                  },
                                                  [Circular],
                                                ],
                                                "parent": null,
                                                "startPosition": 4,
                                              },
                                              "startPosition": 83,
                                              "value": [Circular],
                                            },
                                            "startPosition": 93,
                                          },
                                          "startPosition": 95,
                                        },
                                        "startPosition": 149,
                                        "value": [Circular],
                                      },
                                      "startPosition": 160,
                                    },
                                    "startPosition": 162,
                                  },
                                  "startPosition": 162,
                                  "value": [Circular],
                                },
                                "plainScalar": true,
                                "rawValue": "testStateAction",
                                "startPosition": 168,
                                "value": "testStateAction",
                              },
                            },
                            Object {
                              "children": Array [
                                Object {
                                  "length": 11,
                                  "offset": 188,
                                  "parent": [Circular],
                                  "type": "string",
                                  "value": "functionRef",
                                },
                                Object {
                                  "children": Array [
                                    Object {
                                      "children": Array [
                                        Object {
                                          "length": 7,
                                          "offset": 207,
                                          "parent": [Circular],
                                          "type": "string",
                                          "value": "refName",
                                        },
                                        Object {
                                          "length": 8,
                                          "offset": 216,
                                          "parent": [Circular],
                                          "type": "string",
                                          "value": "myFunc",
                                        },
                                      ],
                                      "colonOffset": 214,
                                      "length": 17,
                                      "offset": 207,
                                      "parent": [Circular],
                                      "type": "property",
                                      "value": Object {
                                        "doubleQuoted": false,
                                        "endPosition": 224,
                                        "errors": Array [],
                                        "kind": 0,
                                        "parent": Object {
                                          "endPosition": 224,
                                          "errors": Array [],
                                          "key": Object {
                                            "doubleQuoted": false,
                                            "endPosition": 214,
                                            "errors": Array [],
                                            "kind": 0,
                                            "parent": [Circular],
                                            "plainScalar": true,
                                            "rawValue": "refName",
                                            "startPosition": 207,
                                            "value": "refName",
                                          },
                                          "kind": 1,
                                          "parent": Object {
                                            "endPosition": 224,
                                            "errors": Array [],
                                            "kind": 2,
                                            "mappings": Array [
                                              [Circular],
                                            ],
                                            "parent": Object {
                                              "endPosition": 224,
                                              "errors": Array [],
                                              "key": Object {
                                                "doubleQuoted": false,
                                                "endPosition": 199,
                                                "errors": Array [],
                                                "kind": 0,
                                                "parent": [Circular],
                                                "plainScalar": true,
                                                "rawValue": "functionRef",
                                                "startPosition": 188,
                                                "value": "functionRef",
                                              },
                                              "kind": 1,
                                              "parent": Object {
                                                "endPosition": 224,
                                                "errors": Array [],
                                                "kind": 2,
                                                "mappings": Array [
                                                  Object {
                                                    "endPosition": 183,
                                                    "errors": Array [],
                                                    "key": Object {
                                                      "doubleQuoted": false,
                                                      "endPosition": 166,
                                                      "errors": Array [],
                                                      "kind": 0,
                                                      "parent": [Circular],
                                                      "plainScalar": true,
                                                      "rawValue": "name",
                                                      "startPosition": 162,
                                                      "value": "name",
                                                    },
                                                    "kind": 1,
                                                    "parent": [Circular],
                                                    "startPosition": 162,
                                                    "value": Object {
                                                      "doubleQuoted": false,
                                                      "endPosition": 183,
                                                      "errors": Array [],
                                                      "kind": 0,
                                                      "parent": [Circular],
                                                      "plainScalar": true,
                                                      "rawValue": "testStateAction",
                                                      "startPosition": 168,
                                                      "value": "testStateAction",
                                                    },
                                                  },
                                                  [Circular],
                                                ],
                                                "parent": Object {
                                                  "endPosition": 225,
                                                  "errors": Array [],
                                                  "items": Array [
                                                    [Circular],
                                                  ],
                                                  "kind": 3,
                                                  "parent": Object {
                                                    "endPosition": 225,
                                                    "errors": Array [],
                                                    "key": Object {
                                                      "doubleQuoted": false,
                                                      "endPosition": 156,
                                                      "errors": Array [],
                                                      "kind": 0,
                                                      "parent": [Circular],
                                                      "plainScalar": true,
                                                      "rawValue": "actions",
                                                      "startPosition": 149,
                                                      "value": "actions",
                                                    },
                                                    "kind": 1,
                                                    "parent": Object {
                                                      "endPosition": 225,
                                                      "errors": Array [],
                                                      "kind": 2,
                                                      "mappings": Array [
                                                        Object {
                                                          "endPosition": 110,
                                                          "errors": Array [],
                                                          "key": Object {
                                                            "doubleQuoted": false,
                                                            "endPosition": 99,
                                                            "errors": Array [],
                                                            "kind": 0,
                                                            "parent": [Circular],
                                                            "plainScalar": true,
                                                            "rawValue": "name",
                                                            "startPosition": 95,
                                                            "value": "name",
                                                          },
                                                          "kind": 1,
                                                          "parent": [Circular],
                                                          "startPosition": 95,
                                                          "value": Object {
                                                            "doubleQuoted": false,
                                                            "endPosition": 110,
                                                            "errors": Array [],
                                                            "kind": 0,
                                                            "parent": [Circular],
                                                            "plainScalar": true,
                                                            "rawValue": "testState",
                                                            "startPosition": 101,
                                                            "value": "testState",
                                                          },
                                                        },
                                                        Object {
                                                          "endPosition": 128,
                                                          "errors": Array [],
                                                          "key": Object {
                                                            "doubleQuoted": false,
                                                            "endPosition": 117,
                                                            "errors": Array [],
                                                            "kind": 0,
                                                            "parent": [Circular],
                                                            "plainScalar": true,
                                                            "rawValue": "type",
                                                            "startPosition": 113,
                                                            "value": "type",
                                                          },
                                                          "kind": 1,
                                                          "parent": [Circular],
                                                          "startPosition": 113,
                                                          "value": Object {
                                                            "doubleQuoted": false,
                                                            "endPosition": 128,
                                                            "errors": Array [],
                                                            "kind": 0,
                                                            "parent": [Circular],
                                                            "plainScalar": true,
                                                            "rawValue": "operation",
                                                            "startPosition": 119,
                                                            "value": "operation",
                                                          },
                                                        },
                                                        Object {
                                                          "endPosition": 146,
                                                          "errors": Array [],
                                                          "key": Object {
                                                            "doubleQuoted": false,
                                                            "endPosition": 141,
                                                            "errors": Array [],
                                                            "kind": 0,
                                                            "parent": [Circular],
                                                            "plainScalar": true,
                                                            "rawValue": "transition",
                                                            "startPosition": 131,
                                                            "value": "transition",
                                                          },
                                                          "kind": 1,
                                                          "parent": [Circular],
                                                          "startPosition": 131,
                                                          "value": Object {
                                                            "doubleQuoted": false,
                                                            "endPosition": 146,
                                                            "errors": Array [],
                                                            "kind": 0,
                                                            "parent": [Circular],
                                                            "plainScalar": true,
                                                            "rawValue": "end",
                                                            "startPosition": 143,
                                                            "value": "end",
                                                          },
                                                        },
                                                        [Circular],
                                                      ],
                                                      "parent": Object {
                                                        "endPosition": 225,
                                                        "errors": Array [],
                                                        "items": Array [
                                                          [Circular],
                                                        ],
                                                        "kind": 3,
                                                        "parent": Object {
                                                          "endPosition": 225,
                                                          "errors": Array [],
                                                          "key": Object {
                                                            "doubleQuoted": true,
                                                            "endPosition": 91,
                                                            "errors": Array [],
                                                            "kind": 0,
                                                            "parent": [Circular],
                                                            "rawValue": "\\"states\\"",
                                                            "startPosition": 83,
                                                            "value": "states",
                                                          },
                                                          "kind": 1,
                                                          "parent": Object {
                                                            "endPosition": 224,
                                                            "errors": Array [],
                                                            "kind": 2,
                                                            "mappings": Array [
                                                              Object {
                                                                "endPosition": 83,
                                                                "errors": Array [],
                                                                "key": Object {
                                                                  "doubleQuoted": false,
                                                                  "endPosition": 13,
                                                                  "errors": Array [],
                                                                  "kind": 0,
                                                                  "parent": [Circular],
                                                                  "plainScalar": true,
                                                                  "rawValue": "functions",
                                                                  "startPosition": 4,
                                                                  "value": "functions",
                                                                },
                                                                "kind": 1,
                                                                "parent": [Circular],
                                                                "startPosition": 4,
                                                                "value": Object {
                                                                  "endPosition": 83,
                                                                  "errors": Array [],
                                                                  "items": Array [
                                                                    Object {
                                                                      "endPosition": 82,
                                                                      "errors": Array [],
                                                                      "kind": 2,
                                                                      "mappings": Array [
                                                                        Object {
                                                                          "endPosition": 29,
                                                                          "errors": Array [],
                                                                          "key": Object {
                                                                            "doubleQuoted": false,
                                                                            "endPosition": 21,
                                                                            "errors": Array [],
                                                                            "kind": 0,
                                                                            "parent": [Circular],
                                                                            "plainScalar": true,
                                                                            "rawValue": "name",
                                                                            "startPosition": 17,
                                                                            "value": "name",
                                                                          },
                                                                          "kind": 1,
                                                                          "parent": [Circular],
                                                                          "startPosition": 17,
                                                                          "value": Object {
                                                                            "doubleQuoted": false,
                                                                            "endPosition": 29,
                                                                            "errors": Array [],
                                                                            "kind": 0,
                                                                            "parent": [Circular],
                                                                            "plainScalar": true,
                                                                            "rawValue": "myFunc",
                                                                            "startPosition": 23,
                                                                            "value": "myFunc",
                                                                          },
                                                                        },
                                                                        Object {
                                                                          "endPosition": 69,
                                                                          "errors": Array [],
                                                                          "key": Object {
                                                                            "doubleQuoted": false,
                                                                            "endPosition": 41,
                                                                            "errors": Array [],
                                                                            "kind": 0,
                                                                            "parent": [Circular],
                                                                            "plainScalar": true,
                                                                            "rawValue": "operation",
                                                                            "startPosition": 32,
                                                                            "value": "operation",
                                                                          },
                                                                          "kind": 1,
                                                                          "parent": [Circular],
                                                                          "startPosition": 32,
                                                                          "value": Object {
                                                                            "doubleQuoted": true,
                                                                            "endPosition": 69,
                                                                            "errors": Array [],
                                                                            "kind": 0,
                                                                            "parent": [Circular],
                                                                            "rawValue": "\\"./specs/myService#myFunc\\"",
                                                                            "startPosition": 43,
                                                                            "value": "./specs/myService#myFunc",
                                                                          },
                                                                        },
                                                                        Object {
                                                                          "endPosition": 82,
                                                                          "errors": Array [],
                                                                          "key": Object {
                                                                            "doubleQuoted": false,
                                                                            "endPosition": 76,
                                                                            "errors": Array [],
                                                                            "kind": 0,
                                                                            "parent": [Circular],
                                                                            "plainScalar": true,
                                                                            "rawValue": "type",
                                                                            "startPosition": 72,
                                                                            "value": "type",
                                                                          },
                                                                          "kind": 1,
                                                                          "parent": [Circular],
                                                                          "startPosition": 72,
                                                                          "value": Object {
                                                                            "doubleQuoted": false,
                                                                            "endPosition": 82,
                                                                            "errors": Array [],
                                                                            "kind": 0,
                                                                            "parent": [Circular],
                                                                            "plainScalar": true,
                                                                            "rawValue": "rest",
                                                                            "startPosition": 78,
                                                                            "value": "rest",
                                                                          },
                                                                        },
                                                                      ],
                                                                      "parent": [Circular],
                                                                      "startPosition": 17,
                                                                    },
                                                                  ],
                                                                  "kind": 3,
                                                                  "parent": [Circular],
                                                                  "startPosition": 15,
                                                                },
                                                              },
                                                              [Circular],
                                                            ],
                                                            "parent": null,
                                                            "startPosition": 4,
                                                          },
                                                          "startPosition": 83,
                                                          "value": [Circular],
                                                        },
                                                        "startPosition": 93,
                                                      },
                                                      "startPosition": 95,
                                                    },
                                                    "startPosition": 149,
                                                    "value": [Circular],
                                                  },
                                                  "startPosition": 160,
                                                },
                                                "startPosition": 162,
                                              },
                                              "startPosition": 188,
                                              "value": [Circular],
                                            },
                                            "startPosition": 207,
                                          },
                                          "startPosition": 207,
                                          "value": [Circular],
                                        },
                                        "rawValue": "",
                                        "singleQuoted": true,
                                        "startPosition": 216,
                                        "value": "myFunc",
                                      },
                                    },
                                  ],
                                  "length": 17,
                                  "offset": 207,
                                  "parent": [Circular],
                                  "type": "object",
                                  "value": undefined,
                                },
                              ],
                              "colonOffset": 199,
                              "length": 36,
                              "offset": 188,
                              "parent": [Circular],
                              "type": "property",
                              "value": Object {
                                "endPosition": 224,
                                "errors": Array [],
                                "kind": 2,
                                "mappings": Array [
                                  Object {
                                    "endPosition": 224,
                                    "errors": Array [],
                                    "key": Object {
                                      "doubleQuoted": false,
                                      "endPosition": 214,
                                      "errors": Array [],
                                      "kind": 0,
                                      "parent": [Circular],
                                      "plainScalar": true,
                                      "rawValue": "refName",
                                      "startPosition": 207,
                                      "value": "refName",
                                    },
                                    "kind": 1,
                                    "parent": [Circular],
                                    "startPosition": 207,
                                    "value": Object {
                                      "doubleQuoted": false,
                                      "endPosition": 224,
                                      "errors": Array [],
                                      "kind": 0,
                                      "parent": [Circular],
                                      "rawValue": "",
                                      "singleQuoted": true,
                                      "startPosition": 216,
                                      "value": "myFunc",
                                    },
                                  },
                                ],
                                "parent": Object {
                                  "endPosition": 224,
                                  "errors": Array [],
                                  "key": Object {
                                    "doubleQuoted": false,
                                    "endPosition": 199,
                                    "errors": Array [],
                                    "kind": 0,
                                    "parent": [Circular],
                                    "plainScalar": true,
                                    "rawValue": "functionRef",
                                    "startPosition": 188,
                                    "value": "functionRef",
                                  },
                                  "kind": 1,
                                  "parent": Object {
                                    "endPosition": 224,
                                    "errors": Array [],
                                    "kind": 2,
                                    "mappings": Array [
                                      Object {
                                        "endPosition": 183,
                                        "errors": Array [],
                                        "key": Object {
                                          "doubleQuoted": false,
                                          "endPosition": 166,
                                          "errors": Array [],
                                          "kind": 0,
                                          "parent": [Circular],
                                          "plainScalar": true,
                                          "rawValue": "name",
                                          "startPosition": 162,
                                          "value": "name",
                                        },
                                        "kind": 1,
                                        "parent": [Circular],
                                        "startPosition": 162,
                                        "value": Object {
                                          "doubleQuoted": false,
                                          "endPosition": 183,
                                          "errors": Array [],
                                          "kind": 0,
                                          "parent": [Circular],
                                          "plainScalar": true,
                                          "rawValue": "testStateAction",
                                          "startPosition": 168,
                                          "value": "testStateAction",
                                        },
                                      },
                                      [Circular],
                                    ],
                                    "parent": Object {
                                      "endPosition": 225,
                                      "errors": Array [],
                                      "items": Array [
                                        [Circular],
                                      ],
                                      "kind": 3,
                                      "parent": Object {
                                        "endPosition": 225,
                                        "errors": Array [],
                                        "key": Object {
                                          "doubleQuoted": false,
                                          "endPosition": 156,
                                          "errors": Array [],
                                          "kind": 0,
                                          "parent": [Circular],
                                          "plainScalar": true,
                                          "rawValue": "actions",
                                          "startPosition": 149,
                                          "value": "actions",
                                        },
                                        "kind": 1,
                                        "parent": Object {
                                          "endPosition": 225,
                                          "errors": Array [],
                                          "kind": 2,
                                          "mappings": Array [
                                            Object {
                                              "endPosition": 110,
                                              "errors": Array [],
                                              "key": Object {
                                                "doubleQuoted": false,
                                                "endPosition": 99,
                                                "errors": Array [],
                                                "kind": 0,
                                                "parent": [Circular],
                                                "plainScalar": true,
                                                "rawValue": "name",
                                                "startPosition": 95,
                                                "value": "name",
                                              },
                                              "kind": 1,
                                              "parent": [Circular],
                                              "startPosition": 95,
                                              "value": Object {
                                                "doubleQuoted": false,
                                                "endPosition": 110,
                                                "errors": Array [],
                                                "kind": 0,
                                                "parent": [Circular],
                                                "plainScalar": true,
                                                "rawValue": "testState",
                                                "startPosition": 101,
                                                "value": "testState",
                                              },
                                            },
                                            Object {
                                              "endPosition": 128,
                                              "errors": Array [],
                                              "key": Object {
                                                "doubleQuoted": false,
                                                "endPosition": 117,
                                                "errors": Array [],
                                                "kind": 0,
                                                "parent": [Circular],
                                                "plainScalar": true,
                                                "rawValue": "type",
                                                "startPosition": 113,
                                                "value": "type",
                                              },
                                              "kind": 1,
                                              "parent": [Circular],
                                              "startPosition": 113,
                                              "value": Object {
                                                "doubleQuoted": false,
                                                "endPosition": 128,
                                                "errors": Array [],
                                                "kind": 0,
                                                "parent": [Circular],
                                                "plainScalar": true,
                                                "rawValue": "operation",
                                                "startPosition": 119,
                                                "value": "operation",
                                              },
                                            },
                                            Object {
                                              "endPosition": 146,
                                              "errors": Array [],
                                              "key": Object {
                                                "doubleQuoted": false,
                                                "endPosition": 141,
                                                "errors": Array [],
                                                "kind": 0,
                                                "parent": [Circular],
                                                "plainScalar": true,
                                                "rawValue": "transition",
                                                "startPosition": 131,
                                                "value": "transition",
                                              },
                                              "kind": 1,
                                              "parent": [Circular],
                                              "startPosition": 131,
                                              "value": Object {
                                                "doubleQuoted": false,
                                                "endPosition": 146,
                                                "errors": Array [],
                                                "kind": 0,
                                                "parent": [Circular],
                                                "plainScalar": true,
                                                "rawValue": "end",
                                                "startPosition": 143,
                                                "value": "end",
                                              },
                                            },
                                            [Circular],
                                          ],
                                          "parent": Object {
                                            "endPosition": 225,
                                            "errors": Array [],
                                            "items": Array [
                                              [Circular],
                                            ],
                                            "kind": 3,
                                            "parent": Object {
                                              "endPosition": 225,
                                              "errors": Array [],
                                              "key": Object {
                                                "doubleQuoted": true,
                                                "endPosition": 91,
                                                "errors": Array [],
                                                "kind": 0,
                                                "parent": [Circular],
                                                "rawValue": "\\"states\\"",
                                                "startPosition": 83,
                                                "value": "states",
                                              },
                                              "kind": 1,
                                              "parent": Object {
                                                "endPosition": 224,
                                                "errors": Array [],
                                                "kind": 2,
                                                "mappings": Array [
                                                  Object {
                                                    "endPosition": 83,
                                                    "errors": Array [],
                                                    "key": Object {
                                                      "doubleQuoted": false,
                                                      "endPosition": 13,
                                                      "errors": Array [],
                                                      "kind": 0,
                                                      "parent": [Circular],
                                                      "plainScalar": true,
                                                      "rawValue": "functions",
                                                      "startPosition": 4,
                                                      "value": "functions",
                                                    },
                                                    "kind": 1,
                                                    "parent": [Circular],
                                                    "startPosition": 4,
                                                    "value": Object {
                                                      "endPosition": 83,
                                                      "errors": Array [],
                                                      "items": Array [
                                                        Object {
                                                          "endPosition": 82,
                                                          "errors": Array [],
                                                          "kind": 2,
                                                          "mappings": Array [
                                                            Object {
                                                              "endPosition": 29,
                                                              "errors": Array [],
                                                              "key": Object {
                                                                "doubleQuoted": false,
                                                                "endPosition": 21,
                                                                "errors": Array [],
                                                                "kind": 0,
                                                                "parent": [Circular],
                                                                "plainScalar": true,
                                                                "rawValue": "name",
                                                                "startPosition": 17,
                                                                "value": "name",
                                                              },
                                                              "kind": 1,
                                                              "parent": [Circular],
                                                              "startPosition": 17,
                                                              "value": Object {
                                                                "doubleQuoted": false,
                                                                "endPosition": 29,
                                                                "errors": Array [],
                                                                "kind": 0,
                                                                "parent": [Circular],
                                                                "plainScalar": true,
                                                                "rawValue": "myFunc",
                                                                "startPosition": 23,
                                                                "value": "myFunc",
                                                              },
                                                            },
                                                            Object {
                                                              "endPosition": 69,
                                                              "errors": Array [],
                                                              "key": Object {
                                                                "doubleQuoted": false,
                                                                "endPosition": 41,
                                                                "errors": Array [],
                                                                "kind": 0,
                                                                "parent": [Circular],
                                                                "plainScalar": true,
                                                                "rawValue": "operation",
                                                                "startPosition": 32,
                                                                "value": "operation",
                                                              },
                                                              "kind": 1,
                                                              "parent": [Circular],
                                                              "startPosition": 32,
                                                              "value": Object {
                                                                "doubleQuoted": true,
                                                                "endPosition": 69,
                                                                "errors": Array [],
                                                                "kind": 0,
                                                                "parent": [Circular],
                                                                "rawValue": "\\"./specs/myService#myFunc\\"",
                                                                "startPosition": 43,
                                                                "value": "./specs/myService#myFunc",
                                                              },
                                                            },
                                                            Object {
                                                              "endPosition": 82,
                                                              "errors": Array [],
                                                              "key": Object {
                                                                "doubleQuoted": false,
                                                                "endPosition": 76,
                                                                "errors": Array [],
                                                                "kind": 0,
                                                                "parent": [Circular],
                                                                "plainScalar": true,
                                                                "rawValue": "type",
                                                                "startPosition": 72,
                                                                "value": "type",
                                                              },
                                                              "kind": 1,
                                                              "parent": [Circular],
                                                              "startPosition": 72,
                                                              "value": Object {
                                                                "doubleQuoted": false,
                                                                "endPosition": 82,
                                                                "errors": Array [],
                                                                "kind": 0,
                                                                "parent": [Circular],
                                                                "plainScalar": true,
                                                                "rawValue": "rest",
                                                                "startPosition": 78,
                                                                "value": "rest",
                                                              },
                                                            },
                                                          ],
                                                          "parent": [Circular],
                                                          "startPosition": 17,
                                                        },
                                                      ],
                                                      "kind": 3,
                                                      "parent": [Circular],
                                                      "startPosition": 15,
                                                    },
                                                  },
                                                  [Circular],
                                                ],
                                                "parent": null,
                                                "startPosition": 4,
                                              },
                                              "startPosition": 83,
                                              "value": [Circular],
                                            },
                                            "startPosition": 93,
                                          },
                                          "startPosition": 95,
                                        },
                                        "startPosition": 149,
                                        "value": [Circular],
                                      },
                                      "startPosition": 160,
                                    },
                                    "startPosition": 162,
                                  },
                                  "startPosition": 188,
                                  "value": [Circular],
                                },
                                "startPosition": 207,
                              },
                            },
                          ],
                          "length": 62,
                          "offset": 162,
                          "parent": [Circular],
                          "type": "object",
                          "value": undefined,
                        },
                      ],
                      "length": 65,
                      "offset": 160,
                      "parent": [Circular],
                      "type": "array",
                    },
                  ],
                  "colonOffset": 156,
                  "length": 76,
                  "offset": 149,
                  "parent": [Circular],
                  "type": "property",
                  "value": Object {
                    "endPosition": 225,
                    "errors": Array [],
                    "items": Array [
                      Object {
                        "endPosition": 224,
                        "errors": Array [],
                        "kind": 2,
                        "mappings": Array [
                          Object {
                            "endPosition": 183,
                            "errors": Array [],
                            "key": Object {
                              "doubleQuoted": false,
                              "endPosition": 166,
                              "errors": Array [],
                              "kind": 0,
                              "parent": [Circular],
                              "plainScalar": true,
                              "rawValue": "name",
                              "startPosition": 162,
                              "value": "name",
                            },
                            "kind": 1,
                            "parent": [Circular],
                            "startPosition": 162,
                            "value": Object {
                              "doubleQuoted": false,
                              "endPosition": 183,
                              "errors": Array [],
                              "kind": 0,
                              "parent": [Circular],
                              "plainScalar": true,
                              "rawValue": "testStateAction",
                              "startPosition": 168,
                              "value": "testStateAction",
                            },
                          },
                          Object {
                            "endPosition": 224,
                            "errors": Array [],
                            "key": Object {
                              "doubleQuoted": false,
                              "endPosition": 199,
                              "errors": Array [],
                              "kind": 0,
                              "parent": [Circular],
                              "plainScalar": true,
                              "rawValue": "functionRef",
                              "startPosition": 188,
                              "value": "functionRef",
                            },
                            "kind": 1,
                            "parent": [Circular],
                            "startPosition": 188,
                            "value": Object {
                              "endPosition": 224,
                              "errors": Array [],
                              "kind": 2,
                              "mappings": Array [
                                Object {
                                  "endPosition": 224,
                                  "errors": Array [],
                                  "key": Object {
                                    "doubleQuoted": false,
                                    "endPosition": 214,
                                    "errors": Array [],
                                    "kind": 0,
                                    "parent": [Circular],
                                    "plainScalar": true,
                                    "rawValue": "refName",
                                    "startPosition": 207,
                                    "value": "refName",
                                  },
                                  "kind": 1,
                                  "parent": [Circular],
                                  "startPosition": 207,
                                  "value": Object {
                                    "doubleQuoted": false,
                                    "endPosition": 224,
                                    "errors": Array [],
                                    "kind": 0,
                                    "parent": [Circular],
                                    "rawValue": "",
                                    "singleQuoted": true,
                                    "startPosition": 216,
                                    "value": "myFunc",
                                  },
                                },
                              ],
                              "parent": [Circular],
                              "startPosition": 207,
                            },
                          },
                        ],
                        "parent": [Circular],
                        "startPosition": 162,
                      },
                    ],
                    "kind": 3,
                    "parent": Object {
                      "endPosition": 225,
                      "errors": Array [],
                      "key": Object {
                        "doubleQuoted": false,
                        "endPosition": 156,
                        "errors": Array [],
                        "kind": 0,
                        "parent": [Circular],
                        "plainScalar": true,
                        "rawValue": "actions",
                        "startPosition": 149,
                        "value": "actions",
                      },
                      "kind": 1,
                      "parent": Object {
                        "endPosition": 225,
                        "errors": Array [],
                        "kind": 2,
                        "mappings": Array [
                          Object {
                            "endPosition": 110,
                            "errors": Array [],
                            "key": Object {
                              "doubleQuoted": false,
                              "endPosition": 99,
                              "errors": Array [],
                              "kind": 0,
                              "parent": [Circular],
                              "plainScalar": true,
                              "rawValue": "name",
                              "startPosition": 95,
                              "value": "name",
                            },
                            "kind": 1,
                            "parent": [Circular],
                            "startPosition": 95,
                            "value": Object {
                              "doubleQuoted": false,
                              "endPosition": 110,
                              "errors": Array [],
                              "kind": 0,
                              "parent": [Circular],
                              "plainScalar": true,
                              "rawValue": "testState",
                              "startPosition": 101,
                              "value": "testState",
                            },
                          },
                          Object {
                            "endPosition": 128,
                            "errors": Array [],
                            "key": Object {
                              "doubleQuoted": false,
                              "endPosition": 117,
                              "errors": Array [],
                              "kind": 0,
                              "parent": [Circular],
                              "plainScalar": true,
                              "rawValue": "type",
                              "startPosition": 113,
                              "value": "type",
                            },
                            "kind": 1,
                            "parent": [Circular],
                            "startPosition": 113,
                            "value": Object {
                              "doubleQuoted": false,
                              "endPosition": 128,
                              "errors": Array [],
                              "kind": 0,
                              "parent": [Circular],
                              "plainScalar": true,
                              "rawValue": "operation",
                              "startPosition": 119,
                              "value": "operation",
                            },
                          },
                          Object {
                            "endPosition": 146,
                            "errors": Array [],
                            "key": Object {
                              "doubleQuoted": false,
                              "endPosition": 141,
                              "errors": Array [],
                              "kind": 0,
                              "parent": [Circular],
                              "plainScalar": true,
                              "rawValue": "transition",
                              "startPosition": 131,
                              "value": "transition",
                            },
                            "kind": 1,
                            "parent": [Circular],
                            "startPosition": 131,
                            "value": Object {
                              "doubleQuoted": false,
                              "endPosition": 146,
                              "errors": Array [],
                              "kind": 0,
                              "parent": [Circular],
                              "plainScalar": true,
                              "rawValue": "end",
                              "startPosition": 143,
                              "value": "end",
                            },
                          },
                          [Circular],
                        ],
                        "parent": Object {
                          "endPosition": 225,
                          "errors": Array [],
                          "items": Array [
                            [Circular],
                          ],
                          "kind": 3,
                          "parent": Object {
                            "endPosition": 225,
                            "errors": Array [],
                            "key": Object {
                              "doubleQuoted": true,
                              "endPosition": 91,
                              "errors": Array [],
                              "kind": 0,
                              "parent": [Circular],
                              "rawValue": "\\"states\\"",
                              "startPosition": 83,
                              "value": "states",
                            },
                            "kind": 1,
                            "parent": Object {
                              "endPosition": 224,
                              "errors": Array [],
                              "kind": 2,
                              "mappings": Array [
                                Object {
                                  "endPosition": 83,
                                  "errors": Array [],
                                  "key": Object {
                                    "doubleQuoted": false,
                                    "endPosition": 13,
                                    "errors": Array [],
                                    "kind": 0,
                                    "parent": [Circular],
                                    "plainScalar": true,
                                    "rawValue": "functions",
                                    "startPosition": 4,
                                    "value": "functions",
                                  },
                                  "kind": 1,
                                  "parent": [Circular],
                                  "startPosition": 4,
                                  "value": Object {
                                    "endPosition": 83,
                                    "errors": Array [],
                                    "items": Array [
                                      Object {
                                        "endPosition": 82,
                                        "errors": Array [],
                                        "kind": 2,
                                        "mappings": Array [
                                          Object {
                                            "endPosition": 29,
                                            "errors": Array [],
                                            "key": Object {
                                              "doubleQuoted": false,
                                              "endPosition": 21,
                                              "errors": Array [],
                                              "kind": 0,
                                              "parent": [Circular],
                                              "plainScalar": true,
                                              "rawValue": "name",
                                              "startPosition": 17,
                                              "value": "name",
                                            },
                                            "kind": 1,
                                            "parent": [Circular],
                                            "startPosition": 17,
                                            "value": Object {
                                              "doubleQuoted": false,
                                              "endPosition": 29,
                                              "errors": Array [],
                                              "kind": 0,
                                              "parent": [Circular],
                                              "plainScalar": true,
                                              "rawValue": "myFunc",
                                              "startPosition": 23,
                                              "value": "myFunc",
                                            },
                                          },
                                          Object {
                                            "endPosition": 69,
                                            "errors": Array [],
                                            "key": Object {
                                              "doubleQuoted": false,
                                              "endPosition": 41,
                                              "errors": Array [],
                                              "kind": 0,
                                              "parent": [Circular],
                                              "plainScalar": true,
                                              "rawValue": "operation",
                                              "startPosition": 32,
                                              "value": "operation",
                                            },
                                            "kind": 1,
                                            "parent": [Circular],
                                            "startPosition": 32,
                                            "value": Object {
                                              "doubleQuoted": true,
                                              "endPosition": 69,
                                              "errors": Array [],
                                              "kind": 0,
                                              "parent": [Circular],
                                              "rawValue": "\\"./specs/myService#myFunc\\"",
                                              "startPosition": 43,
                                              "value": "./specs/myService#myFunc",
                                            },
                                          },
                                          Object {
                                            "endPosition": 82,
                                            "errors": Array [],
                                            "key": Object {
                                              "doubleQuoted": false,
                                              "endPosition": 76,
                                              "errors": Array [],
                                              "kind": 0,
                                              "parent": [Circular],
                                              "plainScalar": true,
                                              "rawValue": "type",
                                              "startPosition": 72,
                                              "value": "type",
                                            },
                                            "kind": 1,
                                            "parent": [Circular],
                                            "startPosition": 72,
                                            "value": Object {
                                              "doubleQuoted": false,
                                              "endPosition": 82,
                                              "errors": Array [],
                                              "kind": 0,
                                              "parent": [Circular],
                                              "plainScalar": true,
                                              "rawValue": "rest",
                                              "startPosition": 78,
                                              "value": "rest",
                                            },
                                          },
                                        ],
                                        "parent": [Circular],
                                        "startPosition": 17,
                                      },
                                    ],
                                    "kind": 3,
                                    "parent": [Circular],
                                    "startPosition": 15,
                                  },
                                },
                                [Circular],
                              ],
                              "parent": null,
                              "startPosition": 4,
                            },
                            "startPosition": 83,
                            "value": [Circular],
                          },
                          "startPosition": 93,
                        },
                        "startPosition": 95,
                      },
                      "startPosition": 149,
                      "value": [Circular],
                    },
                    "startPosition": 160,
                  },
                },
              ],
              "length": 130,
              "offset": 95,
              "parent": [Circular],
              "type": "object",
              "value": undefined,
            },
          ],
          "length": 132,
          "offset": 93,
          "parent": [Circular],
          "type": "array",
        },
      ],
      "colonOffset": 91,
      "length": 142,
      "offset": 83,
      "parent": [Circular],
      "type": "property",
      "value": Object {
        "endPosition": 225,
        "errors": Array [],
        "items": Array [
          Object {
            "endPosition": 225,
            "errors": Array [],
            "kind": 2,
            "mappings": Array [
              Object {
                "endPosition": 110,
                "errors": Array [],
                "key": Object {
                  "doubleQuoted": false,
                  "endPosition": 99,
                  "errors": Array [],
                  "kind": 0,
                  "parent": [Circular],
                  "plainScalar": true,
                  "rawValue": "name",
                  "startPosition": 95,
                  "value": "name",
                },
                "kind": 1,
                "parent": [Circular],
                "startPosition": 95,
                "value": Object {
                  "doubleQuoted": false,
                  "endPosition": 110,
                  "errors": Array [],
                  "kind": 0,
                  "parent": [Circular],
                  "plainScalar": true,
                  "rawValue": "testState",
                  "startPosition": 101,
                  "value": "testState",
                },
              },
              Object {
                "endPosition": 128,
                "errors": Array [],
                "key": Object {
                  "doubleQuoted": false,
                  "endPosition": 117,
                  "errors": Array [],
                  "kind": 0,
                  "parent": [Circular],
                  "plainScalar": true,
                  "rawValue": "type",
                  "startPosition": 113,
                  "value": "type",
                },
                "kind": 1,
                "parent": [Circular],
                "startPosition": 113,
                "value": Object {
                  "doubleQuoted": false,
                  "endPosition": 128,
                  "errors": Array [],
                  "kind": 0,
                  "parent": [Circular],
                  "plainScalar": true,
                  "rawValue": "operation",
                  "startPosition": 119,
                  "value": "operation",
                },
              },
              Object {
                "endPosition": 146,
                "errors": Array [],
                "key": Object {
                  "doubleQuoted": false,
                  "endPosition": 141,
                  "errors": Array [],
                  "kind": 0,
                  "parent": [Circular],
                  "plainScalar": true,
                  "rawValue": "transition",
                  "startPosition": 131,
                  "value": "transition",
                },
                "kind": 1,
                "parent": [Circular],
                "startPosition": 131,
                "value": Object {
                  "doubleQuoted": false,
                  "endPosition": 146,
                  "errors": Array [],
                  "kind": 0,
                  "parent": [Circular],
                  "plainScalar": true,
                  "rawValue": "end",
                  "startPosition": 143,
                  "value": "end",
                },
              },
              Object {
                "endPosition": 225,
                "errors": Array [],
                "key": Object {
                  "doubleQuoted": false,
                  "endPosition": 156,
                  "errors": Array [],
                  "kind": 0,
                  "parent": [Circular],
                  "plainScalar": true,
                  "rawValue": "actions",
                  "startPosition": 149,
                  "value": "actions",
                },
                "kind": 1,
                "parent": [Circular],
                "startPosition": 149,
                "value": Object {
                  "endPosition": 225,
                  "errors": Array [],
                  "items": Array [
                    Object {
                      "endPosition": 224,
                      "errors": Array [],
                      "kind": 2,
                      "mappings": Array [
                        Object {
                          "endPosition": 183,
                          "errors": Array [],
                          "key": Object {
                            "doubleQuoted": false,
                            "endPosition": 166,
                            "errors": Array [],
                            "kind": 0,
                            "parent": [Circular],
                            "plainScalar": true,
                            "rawValue": "name",
                            "startPosition": 162,
                            "value": "name",
                          },
                          "kind": 1,
                          "parent": [Circular],
                          "startPosition": 162,
                          "value": Object {
                            "doubleQuoted": false,
                            "endPosition": 183,
                            "errors": Array [],
                            "kind": 0,
                            "parent": [Circular],
                            "plainScalar": true,
                            "rawValue": "testStateAction",
                            "startPosition": 168,
                            "value": "testStateAction",
                          },
                        },
                        Object {
                          "endPosition": 224,
                          "errors": Array [],
                          "key": Object {
                            "doubleQuoted": false,
                            "endPosition": 199,
                            "errors": Array [],
                            "kind": 0,
                            "parent": [Circular],
                            "plainScalar": true,
                            "rawValue": "functionRef",
                            "startPosition": 188,
                            "value": "functionRef",
                          },
                          "kind": 1,
                          "parent": [Circular],
                          "startPosition": 188,
                          "value": Object {
                            "endPosition": 224,
                            "errors": Array [],
                            "kind": 2,
                            "mappings": Array [
                              Object {
                                "endPosition": 224,
                                "errors": Array [],
                                "key": Object {
                                  "doubleQuoted": false,
                                  "endPosition": 214,
                                  "errors": Array [],
                                  "kind": 0,
                                  "parent": [Circular],
                                  "plainScalar": true,
                                  "rawValue": "refName",
                                  "startPosition": 207,
                                  "value": "refName",
                                },
                                "kind": 1,
                                "parent": [Circular],
                                "startPosition": 207,
                                "value": Object {
                                  "doubleQuoted": false,
                                  "endPosition": 224,
                                  "errors": Array [],
                                  "kind": 0,
                                  "parent": [Circular],
                                  "rawValue": "",
                                  "singleQuoted": true,
                                  "startPosition": 216,
                                  "value": "myFunc",
                                },
                              },
                            ],
                            "parent": [Circular],
                            "startPosition": 207,
                          },
                        },
                      ],
                      "parent": [Circular],
                      "startPosition": 162,
                    },
                  ],
                  "kind": 3,
                  "parent": [Circular],
                  "startPosition": 160,
                },
              },
            ],
            "parent": [Circular],
            "startPosition": 95,
          },
        ],
        "kind": 3,
        "parent": Object {
          "endPosition": 225,
          "errors": Array [],
          "key": Object {
            "doubleQuoted": true,
            "endPosition": 91,
            "errors": Array [],
            "kind": 0,
            "parent": [Circular],
            "rawValue": "\\"states\\"",
            "startPosition": 83,
            "value": "states",
          },
          "kind": 1,
          "parent": Object {
            "endPosition": 224,
            "errors": Array [],
            "kind": 2,
            "mappings": Array [
              Object {
                "endPosition": 83,
                "errors": Array [],
                "key": Object {
                  "doubleQuoted": false,
                  "endPosition": 13,
                  "errors": Array [],
                  "kind": 0,
                  "parent": [Circular],
                  "plainScalar": true,
                  "rawValue": "functions",
                  "startPosition": 4,
                  "value": "functions",
                },
                "kind": 1,
                "parent": [Circular],
                "startPosition": 4,
                "value": Object {
                  "endPosition": 83,
                  "errors": Array [],
                  "items": Array [
                    Object {
                      "endPosition": 82,
                      "errors": Array [],
                      "kind": 2,
                      "mappings": Array [
                        Object {
                          "endPosition": 29,
                          "errors": Array [],
                          "key": Object {
                            "doubleQuoted": false,
                            "endPosition": 21,
                            "errors": Array [],
                            "kind": 0,
                            "parent": [Circular],
                            "plainScalar": true,
                            "rawValue": "name",
                            "startPosition": 17,
                            "value": "name",
                          },
                          "kind": 1,
                          "parent": [Circular],
                          "startPosition": 17,
                          "value": Object {
                            "doubleQuoted": false,
                            "endPosition": 29,
                            "errors": Array [],
                            "kind": 0,
                            "parent": [Circular],
                            "plainScalar": true,
                            "rawValue": "myFunc",
                            "startPosition": 23,
                            "value": "myFunc",
                          },
                        },
                        Object {
                          "endPosition": 69,
                          "errors": Array [],
                          "key": Object {
                            "doubleQuoted": false,
                            "endPosition": 41,
                            "errors": Array [],
                            "kind": 0,
                            "parent": [Circular],
                            "plainScalar": true,
                            "rawValue": "operation",
                            "startPosition": 32,
                            "value": "operation",
                          },
                          "kind": 1,
                          "parent": [Circular],
                          "startPosition": 32,
                          "value": Object {
                            "doubleQuoted": true,
                            "endPosition": 69,
                            "errors": Array [],
                            "kind": 0,
                            "parent": [Circular],
                            "rawValue": "\\"./specs/myService#myFunc\\"",
                            "startPosition": 43,
                            "value": "./specs/myService#myFunc",
                          },
                        },
                        Object {
                          "endPosition": 82,
                          "errors": Array [],
                          "key": Object {
                            "doubleQuoted": false,
                            "endPosition": 76,
                            "errors": Array [],
                            "kind": 0,
                            "parent": [Circular],
                            "plainScalar": true,
                            "rawValue": "type",
                            "startPosition": 72,
                            "value": "type",
                          },
                          "kind": 1,
                          "parent": [Circular],
                          "startPosition": 72,
                          "value": Object {
                            "doubleQuoted": false,
                            "endPosition": 82,
                            "errors": Array [],
                            "kind": 0,
                            "parent": [Circular],
                            "plainScalar": true,
                            "rawValue": "rest",
                            "startPosition": 78,
                            "value": "rest",
                          },
                        },
                      ],
                      "parent": [Circular],
                      "startPosition": 17,
                    },
                  ],
                  "kind": 3,
                  "parent": [Circular],
                  "startPosition": 15,
                },
              },
              [Circular],
            ],
            "parent": null,
            "startPosition": 4,
          },
          "startPosition": 83,
          "value": [Circular],
        },
        "startPosition": 93,
      },
    },
  ],
  "length": 220,
  "offset": 4,
  "parent": undefined,
  "type": "object",
  "value": undefined,
}
`;
