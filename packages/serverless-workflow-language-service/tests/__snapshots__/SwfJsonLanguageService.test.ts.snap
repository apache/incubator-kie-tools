// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`SWF LS JSON code completion function completion add at the beginning 1`] = `1`;

exports[`SWF LS JSON code completion function completion add at the beginning 2`] = `
Array [
  Object {
    "command": Object {
      "arguments": Array [
        Object {
          "containingService": Object {
            "functions": Array [
              Object {
                "arguments": Object {
                  "argBoolean": "boolean",
                  "argNumber": "number",
                  "argString": "string",
                },
                "name": "testRelativeFunction1",
                "operation": "specs/testRelativeService1.yml#testRelativeFunction1",
                "source": Object {
                  "serviceFileAbsolutePath": "/Users/tiago/Desktop/testRelativeService1.yml",
                  "type": 1,
                },
                "type": "rest",
              },
            ],
            "name": "testRelativeService1",
            "rawContent": "",
            "source": Object {
              "absoluteFilePath": "/Users/tiago/Desktop/testRelativeService1.yml",
              "type": 1,
            },
            "type": "rest",
          },
          "documentUri": "test.sw.json",
        },
      ],
      "command": "swf.ls.commands.ImportFunctionFromCompletionItem",
      "title": "Import function from completion item",
    },
    "detail": "specs/testRelativeService1.yml#testRelativeFunction1",
    "filterText": "specs»testRelativeService1.yml#testRelativeFunction1",
    "insertTextFormat": 2,
    "kind": 18,
    "label": "specs»testRelativeService1.yml#testRelativeFunction1",
    "snippet": true,
    "sortText": "100_specs»testRelativeService1.yml#testRelativeFunction1",
    "textEdit": Object {
      "newText": "{
  \\"name\\": \\"\${1:testRelativeFunction1}\\",
  \\"operation\\": \\"specs/testRelativeService1.yml#testRelativeFunction1\\",
  \\"type\\": \\"rest\\"
},",
      "range": Object {
        "end": Object {
          "character": 16,
          "line": 1,
        },
        "start": Object {
          "character": 16,
          "line": 1,
        },
      },
    },
  },
]
`;

exports[`SWF LS JSON code completion function completion add at the end 1`] = `1`;

exports[`SWF LS JSON code completion function completion add at the end 2`] = `
Array [
  Object {
    "command": Object {
      "arguments": Array [
        Object {
          "containingService": Object {
            "functions": Array [
              Object {
                "arguments": Object {
                  "argBoolean": "boolean",
                  "argNumber": "number",
                  "argString": "string",
                },
                "name": "testRelativeFunction1",
                "operation": "specs/testRelativeService1.yml#testRelativeFunction1",
                "source": Object {
                  "serviceFileAbsolutePath": "/Users/tiago/Desktop/testRelativeService1.yml",
                  "type": 1,
                },
                "type": "rest",
              },
            ],
            "name": "testRelativeService1",
            "rawContent": "",
            "source": Object {
              "absoluteFilePath": "/Users/tiago/Desktop/testRelativeService1.yml",
              "type": 1,
            },
            "type": "rest",
          },
          "documentUri": "test.sw.json",
        },
      ],
      "command": "swf.ls.commands.ImportFunctionFromCompletionItem",
      "title": "Import function from completion item",
    },
    "detail": "specs/testRelativeService1.yml#testRelativeFunction1",
    "filterText": "specs»testRelativeService1.yml#testRelativeFunction1",
    "insertTextFormat": 2,
    "kind": 18,
    "label": "specs»testRelativeService1.yml#testRelativeFunction1",
    "snippet": true,
    "sortText": "100_specs»testRelativeService1.yml#testRelativeFunction1",
    "textEdit": Object {
      "newText": "{
  \\"name\\": \\"\${1:testRelativeFunction1}\\",
  \\"operation\\": \\"specs/testRelativeService1.yml#testRelativeFunction1\\",
  \\"type\\": \\"rest\\"
}",
      "range": Object {
        "end": Object {
          "character": 22,
          "line": 1,
        },
        "start": Object {
          "character": 22,
          "line": 1,
        },
      },
    },
  },
]
`;

exports[`SWF LS JSON code completion function completion add in a new line 1`] = `1`;

exports[`SWF LS JSON code completion function completion add in a new line 2`] = `
Array [
  Object {
    "command": Object {
      "arguments": Array [
        Object {
          "containingService": Object {
            "functions": Array [
              Object {
                "arguments": Object {
                  "argBoolean": "boolean",
                  "argNumber": "number",
                  "argString": "string",
                },
                "name": "testRelativeFunction1",
                "operation": "specs/testRelativeService1.yml#testRelativeFunction1",
                "source": Object {
                  "serviceFileAbsolutePath": "/Users/tiago/Desktop/testRelativeService1.yml",
                  "type": 1,
                },
                "type": "rest",
              },
            ],
            "name": "testRelativeService1",
            "rawContent": "",
            "source": Object {
              "absoluteFilePath": "/Users/tiago/Desktop/testRelativeService1.yml",
              "type": 1,
            },
            "type": "rest",
          },
          "documentUri": "test.sw.json",
        },
      ],
      "command": "swf.ls.commands.ImportFunctionFromCompletionItem",
      "title": "Import function from completion item",
    },
    "detail": "specs/testRelativeService1.yml#testRelativeFunction1",
    "filterText": "specs»testRelativeService1.yml#testRelativeFunction1",
    "insertTextFormat": 2,
    "kind": 18,
    "label": "specs»testRelativeService1.yml#testRelativeFunction1",
    "snippet": true,
    "sortText": "100_specs»testRelativeService1.yml#testRelativeFunction1",
    "textEdit": Object {
      "newText": "{
  \\"name\\": \\"\${1:testRelativeFunction1}\\",
  \\"operation\\": \\"specs/testRelativeService1.yml#testRelativeFunction1\\",
  \\"type\\": \\"rest\\"
}",
      "range": Object {
        "end": Object {
          "character": 4,
          "line": 2,
        },
        "start": Object {
          "character": 4,
          "line": 2,
        },
      },
    },
  },
]
`;

exports[`SWF LS JSON code completion function completion add in the middle 1`] = `1`;

exports[`SWF LS JSON code completion function completion add in the middle 2`] = `
Array [
  Object {
    "command": Object {
      "arguments": Array [
        Object {
          "containingService": Object {
            "functions": Array [
              Object {
                "arguments": Object {
                  "argBoolean": "boolean",
                  "argNumber": "number",
                  "argString": "string",
                },
                "name": "testRelativeFunction1",
                "operation": "specs/testRelativeService1.yml#testRelativeFunction1",
                "source": Object {
                  "serviceFileAbsolutePath": "/Users/tiago/Desktop/testRelativeService1.yml",
                  "type": 1,
                },
                "type": "rest",
              },
            ],
            "name": "testRelativeService1",
            "rawContent": "",
            "source": Object {
              "absoluteFilePath": "/Users/tiago/Desktop/testRelativeService1.yml",
              "type": 1,
            },
            "type": "rest",
          },
          "documentUri": "test.sw.json",
        },
      ],
      "command": "swf.ls.commands.ImportFunctionFromCompletionItem",
      "title": "Import function from completion item",
    },
    "detail": "specs/testRelativeService1.yml#testRelativeFunction1",
    "filterText": "specs»testRelativeService1.yml#testRelativeFunction1",
    "insertTextFormat": 2,
    "kind": 18,
    "label": "specs»testRelativeService1.yml#testRelativeFunction1",
    "snippet": true,
    "sortText": "100_specs»testRelativeService1.yml#testRelativeFunction1",
    "textEdit": Object {
      "newText": "{
  \\"name\\": \\"\${1:testRelativeFunction1}\\",
  \\"operation\\": \\"specs/testRelativeService1.yml#testRelativeFunction1\\",
  \\"type\\": \\"rest\\"
},",
      "range": Object {
        "end": Object {
          "character": 22,
          "line": 1,
        },
        "start": Object {
          "character": 22,
          "line": 1,
        },
      },
    },
  },
]
`;

exports[`SWF LS JSON code completion function completion add into empty functions array 1`] = `1`;

exports[`SWF LS JSON code completion function completion add into empty functions array 2`] = `
Array [
  Object {
    "command": Object {
      "arguments": Array [
        Object {
          "containingService": Object {
            "functions": Array [
              Object {
                "arguments": Object {
                  "argBoolean": "boolean",
                  "argNumber": "number",
                  "argString": "string",
                },
                "name": "testRelativeFunction1",
                "operation": "specs/testRelativeService1.yml#testRelativeFunction1",
                "source": Object {
                  "serviceFileAbsolutePath": "/Users/tiago/Desktop/testRelativeService1.yml",
                  "type": 1,
                },
                "type": "rest",
              },
            ],
            "name": "testRelativeService1",
            "rawContent": "",
            "source": Object {
              "absoluteFilePath": "/Users/tiago/Desktop/testRelativeService1.yml",
              "type": 1,
            },
            "type": "rest",
          },
          "documentUri": "test.sw.json",
        },
      ],
      "command": "swf.ls.commands.ImportFunctionFromCompletionItem",
      "title": "Import function from completion item",
    },
    "detail": "specs/testRelativeService1.yml#testRelativeFunction1",
    "filterText": "specs»testRelativeService1.yml#testRelativeFunction1",
    "insertTextFormat": 2,
    "kind": 18,
    "label": "specs»testRelativeService1.yml#testRelativeFunction1",
    "snippet": true,
    "sortText": "100_specs»testRelativeService1.yml#testRelativeFunction1",
    "textEdit": Object {
      "newText": "{
  \\"name\\": \\"\${1:testRelativeFunction1}\\",
  \\"operation\\": \\"specs/testRelativeService1.yml#testRelativeFunction1\\",
  \\"type\\": \\"rest\\"
}",
      "range": Object {
        "end": Object {
          "character": 16,
          "line": 1,
        },
        "start": Object {
          "character": 16,
          "line": 1,
        },
      },
    },
  },
]
`;

exports[`SWF LS JSON code completion functionRef arguments completion with same level content after 1`] = `1`;

exports[`SWF LS JSON code completion functionRef arguments completion with same level content after 2`] = `
Array [
  Object {
    "detail": "specs/testRelativeService1.yml#testRelativeFunction1",
    "filterText": "'testRelativeFunction1' arguments",
    "insertTextFormat": 2,
    "kind": 9,
    "label": "'testRelativeFunction1' arguments",
    "sortText": "100_'testRelativeFunction1' arguments",
    "textEdit": Object {
      "newText": "{
  \\"argString\\": \\"\${1:}\\",
  \\"argNumber\\": \\"\${2:}\\",
  \\"argBoolean\\": \\"\${3:}\\"
}",
      "range": Object {
        "end": Object {
          "character": 37,
          "line": 17,
        },
        "start": Object {
          "character": 37,
          "line": 17,
        },
      },
    },
  },
]
`;

exports[`SWF LS JSON code completion functionRef arguments completion without same level content after 1`] = `1`;

exports[`SWF LS JSON code completion functionRef arguments completion without same level content after 2`] = `
Array [
  Object {
    "detail": "specs/testRelativeService1.yml#testRelativeFunction1",
    "filterText": "'testRelativeFunction1' arguments",
    "insertTextFormat": 2,
    "kind": 9,
    "label": "'testRelativeFunction1' arguments",
    "sortText": "100_'testRelativeFunction1' arguments",
    "textEdit": Object {
      "newText": "{
  \\"argString\\": \\"\${1:}\\",
  \\"argNumber\\": \\"\${2:}\\",
  \\"argBoolean\\": \\"\${3:}\\"
}",
      "range": Object {
        "end": Object {
          "character": 25,
          "line": 18,
        },
        "start": Object {
          "character": 25,
          "line": 18,
        },
      },
    },
  },
]
`;

exports[`SWF LS JSON code completion functionRef completion with same level content after 1`] = `1`;

exports[`SWF LS JSON code completion functionRef completion with same level content after 2`] = `
Array [
  Object {
    "detail": "specs/testRelativeService1.yml#testRelativeFunction1",
    "filterText": "testRelativeFunction1",
    "insertTextFormat": 2,
    "kind": 9,
    "label": "testRelativeFunction1",
    "sortText": "100_testRelativeFunction1",
    "textEdit": Object {
      "newText": "{
  \\"refName\\": \\"testRelativeFunction1\\",
  \\"arguments\\": {
    \\"argString\\": \\"\${1:}\\",
    \\"argNumber\\": \\"\${2:}\\",
    \\"argBoolean\\": \\"\${3:}\\"
  }
}",
      "range": Object {
        "end": Object {
          "character": 25,
          "line": 15,
        },
        "start": Object {
          "character": 25,
          "line": 15,
        },
      },
    },
  },
]
`;

exports[`SWF LS JSON code completion functionRef completion without same level content after 1`] = `1`;

exports[`SWF LS JSON code completion functionRef completion without same level content after 2`] = `
Array [
  Object {
    "detail": "specs/testRelativeService1.yml#testRelativeFunction1",
    "filterText": "testRelativeFunction1",
    "insertTextFormat": 2,
    "kind": 9,
    "label": "testRelativeFunction1",
    "sortText": "100_testRelativeFunction1",
    "textEdit": Object {
      "newText": "{
  \\"refName\\": \\"testRelativeFunction1\\",
  \\"arguments\\": {
    \\"argString\\": \\"\${1:}\\",
    \\"argNumber\\": \\"\${2:}\\",
    \\"argBoolean\\": \\"\${3:}\\"
  }
}",
      "range": Object {
        "end": Object {
          "character": 25,
          "line": 16,
        },
        "start": Object {
          "character": 25,
          "line": 16,
        },
      },
    },
  },
]
`;

exports[`SWF LS JSON code completion functionRef refName completion inside double quotes / with same level content after 1`] = `1`;

exports[`SWF LS JSON code completion functionRef refName completion inside double quotes / with same level content after 2`] = `
Array [
  Object {
    "detail": "\\"myFunc\\"",
    "filterText": "\\"myFunc\\"",
    "insertTextFormat": 2,
    "kind": 12,
    "label": "\\"myFunc\\"",
    "sortText": "100_\\"myFunc\\"",
    "textEdit": Object {
      "newText": "\\"myFunc\\"",
      "range": Object {
        "end": Object {
          "character": 25,
          "line": 17,
        },
        "start": Object {
          "character": 23,
          "line": 17,
        },
      },
    },
  },
]
`;

exports[`SWF LS JSON code completion functionRef refName completion inside double quotes / without same level content after 1`] = `1`;

exports[`SWF LS JSON code completion functionRef refName completion inside double quotes / without same level content after 2`] = `
Array [
  Object {
    "detail": "\\"myFunc\\"",
    "filterText": "\\"myFunc\\"",
    "insertTextFormat": 2,
    "kind": 12,
    "label": "\\"myFunc\\"",
    "sortText": "100_\\"myFunc\\"",
    "textEdit": Object {
      "newText": "\\"myFunc\\"",
      "range": Object {
        "end": Object {
          "character": 25,
          "line": 17,
        },
        "start": Object {
          "character": 23,
          "line": 17,
        },
      },
    },
  },
]
`;

exports[`SWF LS JSON code completion functionRef refName completion not in quotes / with same level content after 1`] = `1`;

exports[`SWF LS JSON code completion functionRef refName completion not in quotes / with same level content after 2`] = `
Array [
  Object {
    "detail": "\\"myFunc\\"",
    "filterText": "\\"myFunc\\"",
    "insertTextFormat": 2,
    "kind": 12,
    "label": "\\"myFunc\\"",
    "sortText": "100_\\"myFunc\\"",
    "textEdit": Object {
      "newText": "\\"myFunc\\"",
      "range": Object {
        "end": Object {
          "character": 23,
          "line": 17,
        },
        "start": Object {
          "character": 23,
          "line": 17,
        },
      },
    },
  },
]
`;

exports[`SWF LS JSON code completion functionRef refName completion not in quotes / without same level content after 1`] = `1`;

exports[`SWF LS JSON code completion functionRef refName completion not in quotes / without same level content after 2`] = `
Array [
  Object {
    "detail": "\\"myFunc\\"",
    "filterText": "\\"myFunc\\"",
    "insertTextFormat": 2,
    "kind": 12,
    "label": "\\"myFunc\\"",
    "sortText": "100_\\"myFunc\\"",
    "textEdit": Object {
      "newText": "\\"myFunc\\"",
      "range": Object {
        "end": Object {
          "character": 23,
          "line": 17,
        },
        "start": Object {
          "character": 23,
          "line": 17,
        },
      },
    },
  },
]
`;

exports[`SWF LS JSON code completion operation completion inside double quotes / with same level content after 1`] = `1`;

exports[`SWF LS JSON code completion operation completion inside double quotes / with same level content after 2`] = `
Array [
  Object {
    "detail": "\\"specs/testRelativeService1.yml#testRelativeFunction1\\"",
    "filterText": "\\"specs/testRelativeService1.yml#testRelativeFunction1\\"",
    "insertTextFormat": 2,
    "kind": 19,
    "label": "\\"specs/testRelativeService1.yml#testRelativeFunction1\\"",
    "sortText": "100_\\"specs/testRelativeService1.yml#testRelativeFunction1\\"",
    "textEdit": Object {
      "newText": "\\"specs/testRelativeService1.yml#testRelativeFunction1\\"",
      "range": Object {
        "end": Object {
          "character": 21,
          "line": 4,
        },
        "start": Object {
          "character": 19,
          "line": 4,
        },
      },
    },
  },
]
`;

exports[`SWF LS JSON code completion operation completion inside double quotes / without same level content after 1`] = `1`;

exports[`SWF LS JSON code completion operation completion inside double quotes / without same level content after 2`] = `
Array [
  Object {
    "detail": "\\"specs/testRelativeService1.yml#testRelativeFunction1\\"",
    "filterText": "\\"specs/testRelativeService1.yml#testRelativeFunction1\\"",
    "insertTextFormat": 2,
    "kind": 19,
    "label": "\\"specs/testRelativeService1.yml#testRelativeFunction1\\"",
    "sortText": "100_\\"specs/testRelativeService1.yml#testRelativeFunction1\\"",
    "textEdit": Object {
      "newText": "\\"specs/testRelativeService1.yml#testRelativeFunction1\\"",
      "range": Object {
        "end": Object {
          "character": 21,
          "line": 4,
        },
        "start": Object {
          "character": 19,
          "line": 4,
        },
      },
    },
  },
]
`;

exports[`SWF LS JSON code completion operation completion not in quotes / with same level content after 1`] = `1`;

exports[`SWF LS JSON code completion operation completion not in quotes / with same level content after 2`] = `
Array [
  Object {
    "detail": "\\"specs/testRelativeService1.yml#testRelativeFunction1\\"",
    "filterText": "\\"specs/testRelativeService1.yml#testRelativeFunction1\\"",
    "insertTextFormat": 2,
    "kind": 19,
    "label": "\\"specs/testRelativeService1.yml#testRelativeFunction1\\"",
    "sortText": "100_\\"specs/testRelativeService1.yml#testRelativeFunction1\\"",
    "textEdit": Object {
      "newText": "\\"specs/testRelativeService1.yml#testRelativeFunction1\\"",
      "range": Object {
        "end": Object {
          "character": 19,
          "line": 4,
        },
        "start": Object {
          "character": 19,
          "line": 4,
        },
      },
    },
  },
]
`;

exports[`SWF LS JSON code completion operation completion not in quotes / without same level content after 1`] = `1`;

exports[`SWF LS JSON code completion operation completion not in quotes / without same level content after 2`] = `
Array [
  Object {
    "detail": "\\"specs/testRelativeService1.yml#testRelativeFunction1\\"",
    "filterText": "\\"specs/testRelativeService1.yml#testRelativeFunction1\\"",
    "insertTextFormat": 2,
    "kind": 19,
    "label": "\\"specs/testRelativeService1.yml#testRelativeFunction1\\"",
    "sortText": "100_\\"specs/testRelativeService1.yml#testRelativeFunction1\\"",
    "textEdit": Object {
      "newText": "\\"specs/testRelativeService1.yml#testRelativeFunction1\\"",
      "range": Object {
        "end": Object {
          "character": 19,
          "line": 4,
        },
        "start": Object {
          "character": 19,
          "line": 4,
        },
      },
    },
  },
]
`;

exports[`SWF LS JSON code completion state completion add at the beginning of the array 1`] = `4`;

exports[`SWF LS JSON code completion state completion add at the beginning of the array 2`] = `
Array [
  Object {
    "detail": "Add a new operation state",
    "filterText": "New operation state",
    "insertTextFormat": 2,
    "kind": 8,
    "label": "New operation state",
    "sortText": "100_New operation state",
    "textEdit": Object {
      "newText": "{
  \\"name\\": \\"\${1:Unique State name}\\",
  \\"type\\": \\"operation\\",
  \\"actions\\": [
    {
      \\"name\\": \\"\${5:Unique Action name}\\",
      \\"functionRef\\": {}
    }
  ],
  \\"transition\\": \\"\${10:Next transition of the workflow}\\",
  \\"end\\": false
}",
      "range": Object {
        "end": Object {
          "character": 13,
          "line": 0,
        },
        "start": Object {
          "character": 13,
          "line": 0,
        },
      },
    },
  },
  Object {
    "detail": "Add a new event state",
    "filterText": "New event state",
    "insertTextFormat": 2,
    "kind": 8,
    "label": "New event state",
    "sortText": "100_New event state",
    "textEdit": Object {
      "newText": "{
  \\"name\\": \\"\${1:Unique State name}\\",
  \\"type\\": \\"event\\",
  \\"onEvents\\": [
    {
      \\"eventRefs\\": [
        \\"\${5:Unique event names}\\"
      ]
    }
  ],
  \\"transition\\": \\"\${10:Next transition of the workflow}\\",
  \\"end\\": false
}",
      "range": Object {
        "end": Object {
          "character": 13,
          "line": 0,
        },
        "start": Object {
          "character": 13,
          "line": 0,
        },
      },
    },
  },
  Object {
    "detail": "Add a new switch state",
    "filterText": "New switch state",
    "insertTextFormat": 2,
    "kind": 8,
    "label": "New switch state",
    "sortText": "100_New switch state",
    "textEdit": Object {
      "newText": "{
  \\"name\\": \\"\${1:Unique State name}\\",
  \\"type\\": \\"switch\\",
  \\"dataConditions\\": [
    {
      \\"condition\\": \\"\${5:Workflow expression evaluated against state data}\\",
      \\"transition\\": \\"\${6:Transition to another state if condition is true}\\"
    }
  ],
  \\"defaultCondition\\": {
    \\"transition\\": \\"\${7:Default transition of the workflow}\\"
  }
}",
      "range": Object {
        "end": Object {
          "character": 13,
          "line": 0,
        },
        "start": Object {
          "character": 13,
          "line": 0,
        },
      },
    },
  },
  Object {
    "detail": "Add a new inject state",
    "filterText": "New inject state",
    "insertTextFormat": 2,
    "kind": 8,
    "label": "New inject state",
    "sortText": "100_New inject state",
    "textEdit": Object {
      "newText": "{
  \\"name\\": \\"\${1:Unique State name}\\",
  \\"type\\": \\"inject\\",
  \\"data\\": [],
  \\"transition\\": \\"\${10:Next transition of the workflow}\\",
  \\"end\\": false
}",
      "range": Object {
        "end": Object {
          "character": 13,
          "line": 0,
        },
        "start": Object {
          "character": 13,
          "line": 0,
        },
      },
    },
  },
]
`;

exports[`SWF LS JSON code completion state completion add at the end of the array 1`] = `4`;

exports[`SWF LS JSON code completion state completion add at the end of the array 2`] = `
Array [
  Object {
    "detail": "Add a new operation state",
    "filterText": "New operation state",
    "insertTextFormat": 2,
    "kind": 8,
    "label": "New operation state",
    "sortText": "100_New operation state",
    "textEdit": Object {
      "newText": "{
  \\"name\\": \\"\${1:Unique State name}\\",
  \\"type\\": \\"operation\\",
  \\"actions\\": [
    {
      \\"name\\": \\"\${5:Unique Action name}\\",
      \\"functionRef\\": {}
    }
  ],
  \\"transition\\": \\"\${10:Next transition of the workflow}\\",
  \\"end\\": false
}",
      "range": Object {
        "end": Object {
          "character": 17,
          "line": 0,
        },
        "start": Object {
          "character": 17,
          "line": 0,
        },
      },
    },
  },
  Object {
    "detail": "Add a new event state",
    "filterText": "New event state",
    "insertTextFormat": 2,
    "kind": 8,
    "label": "New event state",
    "sortText": "100_New event state",
    "textEdit": Object {
      "newText": "{
  \\"name\\": \\"\${1:Unique State name}\\",
  \\"type\\": \\"event\\",
  \\"onEvents\\": [
    {
      \\"eventRefs\\": [
        \\"\${5:Unique event names}\\"
      ]
    }
  ],
  \\"transition\\": \\"\${10:Next transition of the workflow}\\",
  \\"end\\": false
}",
      "range": Object {
        "end": Object {
          "character": 17,
          "line": 0,
        },
        "start": Object {
          "character": 17,
          "line": 0,
        },
      },
    },
  },
  Object {
    "detail": "Add a new switch state",
    "filterText": "New switch state",
    "insertTextFormat": 2,
    "kind": 8,
    "label": "New switch state",
    "sortText": "100_New switch state",
    "textEdit": Object {
      "newText": "{
  \\"name\\": \\"\${1:Unique State name}\\",
  \\"type\\": \\"switch\\",
  \\"dataConditions\\": [
    {
      \\"condition\\": \\"\${5:Workflow expression evaluated against state data}\\",
      \\"transition\\": \\"\${6:Transition to another state if condition is true}\\"
    }
  ],
  \\"defaultCondition\\": {
    \\"transition\\": \\"\${7:Default transition of the workflow}\\"
  }
}",
      "range": Object {
        "end": Object {
          "character": 17,
          "line": 0,
        },
        "start": Object {
          "character": 17,
          "line": 0,
        },
      },
    },
  },
  Object {
    "detail": "Add a new inject state",
    "filterText": "New inject state",
    "insertTextFormat": 2,
    "kind": 8,
    "label": "New inject state",
    "sortText": "100_New inject state",
    "textEdit": Object {
      "newText": "{
  \\"name\\": \\"\${1:Unique State name}\\",
  \\"type\\": \\"inject\\",
  \\"data\\": [],
  \\"transition\\": \\"\${10:Next transition of the workflow}\\",
  \\"end\\": false
}",
      "range": Object {
        "end": Object {
          "character": 17,
          "line": 0,
        },
        "start": Object {
          "character": 17,
          "line": 0,
        },
      },
    },
  },
]
`;

exports[`SWF LS JSON code completion state completion add into empty array 1`] = `4`;

exports[`SWF LS JSON code completion state completion add into empty array 2`] = `
Array [
  Object {
    "detail": "Add a new operation state",
    "filterText": "New operation state",
    "insertTextFormat": 2,
    "kind": 8,
    "label": "New operation state",
    "sortText": "100_New operation state",
    "textEdit": Object {
      "newText": "{
  \\"name\\": \\"\${1:Unique State name}\\",
  \\"type\\": \\"operation\\",
  \\"actions\\": [
    {
      \\"name\\": \\"\${5:Unique Action name}\\",
      \\"functionRef\\": {}
    }
  ],
  \\"transition\\": \\"\${10:Next transition of the workflow}\\",
  \\"end\\": false
}",
      "range": Object {
        "end": Object {
          "character": 13,
          "line": 0,
        },
        "start": Object {
          "character": 13,
          "line": 0,
        },
      },
    },
  },
  Object {
    "detail": "Add a new event state",
    "filterText": "New event state",
    "insertTextFormat": 2,
    "kind": 8,
    "label": "New event state",
    "sortText": "100_New event state",
    "textEdit": Object {
      "newText": "{
  \\"name\\": \\"\${1:Unique State name}\\",
  \\"type\\": \\"event\\",
  \\"onEvents\\": [
    {
      \\"eventRefs\\": [
        \\"\${5:Unique event names}\\"
      ]
    }
  ],
  \\"transition\\": \\"\${10:Next transition of the workflow}\\",
  \\"end\\": false
}",
      "range": Object {
        "end": Object {
          "character": 13,
          "line": 0,
        },
        "start": Object {
          "character": 13,
          "line": 0,
        },
      },
    },
  },
  Object {
    "detail": "Add a new switch state",
    "filterText": "New switch state",
    "insertTextFormat": 2,
    "kind": 8,
    "label": "New switch state",
    "sortText": "100_New switch state",
    "textEdit": Object {
      "newText": "{
  \\"name\\": \\"\${1:Unique State name}\\",
  \\"type\\": \\"switch\\",
  \\"dataConditions\\": [
    {
      \\"condition\\": \\"\${5:Workflow expression evaluated against state data}\\",
      \\"transition\\": \\"\${6:Transition to another state if condition is true}\\"
    }
  ],
  \\"defaultCondition\\": {
    \\"transition\\": \\"\${7:Default transition of the workflow}\\"
  }
}",
      "range": Object {
        "end": Object {
          "character": 13,
          "line": 0,
        },
        "start": Object {
          "character": 13,
          "line": 0,
        },
      },
    },
  },
  Object {
    "detail": "Add a new inject state",
    "filterText": "New inject state",
    "insertTextFormat": 2,
    "kind": 8,
    "label": "New inject state",
    "sortText": "100_New inject state",
    "textEdit": Object {
      "newText": "{
  \\"name\\": \\"\${1:Unique State name}\\",
  \\"type\\": \\"inject\\",
  \\"data\\": [],
  \\"transition\\": \\"\${10:Next transition of the workflow}\\",
  \\"end\\": false
}",
      "range": Object {
        "end": Object {
          "character": 13,
          "line": 0,
        },
        "start": Object {
          "character": 13,
          "line": 0,
        },
      },
    },
  },
]
`;

exports[`SWF LS JSON code completion state completion pointing after the array 1`] = `0`;

exports[`SWF LS JSON code completion state completion pointing after the array 2`] = `Array []`;

exports[`SWF LS JSON code completion state completion pointing before the array 1`] = `0`;

exports[`SWF LS JSON code completion state completion pointing before the array 2`] = `Array []`;

exports[`SWF LS JSON code completion state completion pointing before the array 3`] = `0`;

exports[`SWF LS JSON code completion state completion pointing before the array 4`] = `Array []`;

exports[`SWF LS JSON code completion state completion pointing inside an object of the array 1`] = `0`;

exports[`SWF LS JSON code completion state completion pointing inside an object of the array 2`] = `Array []`;
