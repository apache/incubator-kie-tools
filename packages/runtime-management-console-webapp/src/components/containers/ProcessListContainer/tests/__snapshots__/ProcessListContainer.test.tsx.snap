// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`ProcessListContainer tests Snapshot 1`] = `
<ProcessListContainer
  initialState={Object {}}
>
  <ForwardRef
    driver={
      ProcessListGatewayApiImpl {
        "_ProcessListState": Object {
          "filters": Object {
            "businessKey": Array [],
            "status": Array [],
          },
          "sortBy": Object {},
        },
        "applyFilter": [Function],
        "applySorting": [Function],
        "handleProcessAbort": [Function],
        "handleProcessMultipleAction": [Function],
        "handleProcessRetry": [Function],
        "handleProcessSkip": [Function],
        "initialLoad": [Function],
        "listeners": Array [
          Object {
            "onOpen": [Function],
          },
        ],
        "openProcess": [Function],
        "queries": Object {
          "getChildProcessInstances": [MockFunction],
          "getProcessInstances": [MockFunction],
          "handleProcessAbort": [MockFunction],
          "handleProcessMultipleAction": [MockFunction],
          "handleProcessRetry": [MockFunction],
          "handleProcessSkip": [MockFunction],
        },
      }
    }
    initialState={Object {}}
    isWorkflow={false}
    pluralProcessLabel="Processes"
    singularProcessLabel="Process"
    targetOrigin="http://localhost"
  >
    <ForwardRef(RefForwardingEmbeddedEnvelope)
      apiImpl={
        ProcessListChannelApiImpl {
          "driver": ProcessListGatewayApiImpl {
            "_ProcessListState": Object {
              "filters": Object {
                "businessKey": Array [],
                "status": Array [],
              },
              "sortBy": Object {},
            },
            "applyFilter": [Function],
            "applySorting": [Function],
            "handleProcessAbort": [Function],
            "handleProcessMultipleAction": [Function],
            "handleProcessRetry": [Function],
            "handleProcessSkip": [Function],
            "initialLoad": [Function],
            "listeners": Array [
              Object {
                "onOpen": [Function],
              },
            ],
            "openProcess": [Function],
            "queries": Object {
              "getChildProcessInstances": [MockFunction],
              "getProcessInstances": [MockFunction],
              "handleProcessAbort": [MockFunction],
              "handleProcessMultipleAction": [MockFunction],
              "handleProcessRetry": [MockFunction],
              "handleProcessSkip": [MockFunction],
            },
          },
        }
      }
      config={
        Object {
          "containerType": "div",
        }
      }
      origin="http://localhost"
      pollInit={[Function]}
      refDelegate={[Function]}
    >
      <div />
    </ForwardRef(RefForwardingEmbeddedEnvelope)>
  </ForwardRef>
</ProcessListContainer>
`;
