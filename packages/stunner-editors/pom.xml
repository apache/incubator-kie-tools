<?xml version="1.0" encoding="UTF-8"?>
<!--
  ~ Copyright 2021 Red Hat, Inc. and/or its affiliates.
  ~
  ~ Licensed under the Apache License, Version 2.0 (the "License");
  ~ you may not use this file except in compliance with the License.
  ~ You may obtain a copy of the License at
  ~
  ~       http://www.apache.org/licenses/LICENSE-2.0
  ~
  ~ Unless required by applicable law or agreed to in writing, software
  ~ distributed under the License is distributed on an "AS IS" BASIS,
  ~ WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  ~ See the License for the specific language governing permissions and
  ~ limitations under the License.
  -->

<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">

  <parent>
    <groupId>org.kie</groupId>
    <artifactId>kie-parent</artifactId>
    <version>7.58.0.Final</version>
  </parent>

  <modelVersion>4.0.0</modelVersion>
  <groupId>org.kie.kogito.stunner.editors</groupId>
  <artifactId>stunner-editors-parent</artifactId>
  <version>0.0.0</version>
  <packaging>pom</packaging>

  <name>Kogito Editors Java - Parent</name>
  <description>Kogito Editors Java - Parent</description>

  <url>http://kogito.kie.org</url>
  <inceptionYear>2021</inceptionYear>
  <organization>
    <name>JBoss by Red Hat</name>
    <url>http://www.jboss.org/</url>
  </organization>

  <licenses>
    <license>
      <name>Apache Software License, Version 2.0</name>
      <url>http://www.apache.org/licenses/LICENSE-2.0.txt</url>
      <distribution>repo</distribution>
    </license>
  </licenses>

  <scm>
    <connection>scm:git:git@github.com:kiegroup/kie-tools.git</connection>
    <developerConnection>scm:git:git@github.com:kiegroup/kie-tools.git</developerConnection>
    <url>scm:git:git@github.com:kiegroup/kie-tools.git</url>
  </scm>

  <developers>
    <developer>
      <name>All developers are listed in the KIE GitHub organization</name>
      <url>https://github.com/orgs/kiegroup/people</url>
    </developer>
  </developers>

  <issueManagement>
    <system>jira</system>
    <url>https://issues.redhat.com/browse/KOGITO</url>
  </issueManagement>

  <repositories>
    <repository>
      <id>jboss</id>
      <name>JBoss Public Repo</name>
      <url>https://repository.jboss.org/nexus/content/groups/public</url>
    </repository>
    <repository>
      <id>sonatype-public</id>
      <name>Sonatype Public Snapshots Repo</name>
      <url>https://oss.sonatype.org/content/repositories/public</url>
    </repository>
  </repositories>

  <modules>
    <!-- ERRAI -->
    <module>errai-bom</module>
    <module>errai-common</module>
    <module>errai-javax-enterprise</module>
    <module>errai-ioc</module>
    <module>errai-codegen</module>
    <module>errai-cdi</module>
    <module>errai-ui</module>
    <module>errai-data-binding</module>
    <module>errai-validation</module>
    <module>errai-reflections</module>
    <module>errai-config</module>
    <module>errai-codegen-gwt</module>
    <module>errai-api</module>

    <!-- APPFORMER -->
    <module>appformer-bom</module>
    <module>appformer-client-api</module>
    <module>appformer-kogito-bridge</module>
    <module>appformer-js-monaco</module>
    <module>uberfire-api</module>
    <module>uberfire-client-api</module>
    <module>uberfire-workbench</module>
    <module>uberfire-extensions</module>

    <!-- KIE-WB-COMMON -->
    <module>kie-wb-common-bom</module>
    <module>kie-wb-common-widgets</module>
    <module>kie-wb-common-forms</module>
    <module>kie-wb-common-stunner</module>
    <module>kie-wb-common-dmn</module>
    <module>kie-wb-common-kogito</module>

    <!-- DROOLS-WB -->
    <module>drools-wb-bom</module>
    <module>drools-wb-screens</module>

    <!-- LIENZO -->
    <module>lienzo-core</module>
    <module>lienzo-tests</module>
    <module>lienzo-webapp</module>

  </modules>

  <pluginRepositories>
    <pluginRepository>
      <id>jboss</id>
      <name>JBoss Public Repo</name>
      <url>https://repository.jboss.org/nexus/content/groups/public</url>
    </pluginRepository>
    <pluginRepository>
      <id>public-snapshots-repo</id>
      <url>https://oss.sonatype.org/content/repositories/public/</url>
      <releases>
        <enabled>true</enabled>
      </releases>
      <snapshots>
        <enabled>true</enabled>
      </snapshots>
    </pluginRepository>
  </pluginRepositories>

  <dependencies>
    <dependency>
      <groupId>junit</groupId>
      <artifactId>junit</artifactId>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.assertj</groupId>
      <artifactId>assertj-core</artifactId>
      <scope>test</scope>
    </dependency>
  </dependencies>

  <properties>
    <!-- Overriding version that comes from kie-parent to enable the 'npx' goal. -->
    <version.frontend-maven-plugin>1.12.0</version.frontend-maven-plugin>

    <!-- For kie-parent and modules in kie-bom, kie-soup-bom, drools-bom, jbpm-bom and kie-dmn-bom -->
    <version.org.kie>7.58.0.Final</version.org.kie>

    <!-- 3.18+ breaks GWT compilation -->
    <version.org.eclipse.jdt>3.17.0</version.org.eclipse.jdt>

    <!-- Properties from ERRAI parent POM -->
    <!-- The version from kie-parent is not compatible with errai-validation -->
    <version.javax.validation>1.0.0.GA</version.javax.validation>
    <gwtArgs></gwtArgs>
    <argLine>-Dgwt.args="${gwtArgs}"</argLine>
    <illegaltransitivereportonly>false</illegaltransitivereportonly>

    <!-- Properties from APPFORMER parent POM -->
    <version.org.webjars.bower.org.patternfly>3.18.1</version.org.webjars.bower.org.patternfly>
    <version.org.webjars.bower.bootstrap-select>1.10.0</version.org.webjars.bower.bootstrap-select>
    <version.org.webjars.bower.moment>2.14.1</version.org.webjars.bower.moment>
    <version.org.webjars.bower.moment-timezone>0.5.17</version.org.webjars.bower.moment-timezone>
    <version.org.webjars.bower.bootstrap-daterangepicker>2.1.25</version.org.webjars.bower.bootstrap-daterangepicker>
    <version.org.webjars.bower.filesaver>1.3.3</version.org.webjars.bower.filesaver>
    <!-- Notice actually there exists a 1.3.3 version for jsPDF, but using this one
        produces a conflict with the UF ace js plugin once trying to create a new jsPDF
        instance.-->
    <version.org.webjars.bower.jspdf>1.2.61</version.org.webjars.bower.jspdf>
    <version.org.webjars.bowergithub.gliffy.canvas2svg>0.1</version.org.webjars.bowergithub.gliffy.canvas2svg>
    <version.org.webjars.bower.mustachejs>3.0.1</version.org.webjars.bower.mustachejs>
    <version.org.webjars.bower.jqueryui>1.12.1</version.org.webjars.bower.jqueryui>
    <version.bundle.plugin>3.3.0</version.bundle.plugin><!-- 3.2.0 sometimes fails with NPE during parallel build-->
    <!-- Make OSGi happy -->
    <osgi.snapshot.qualifier>${maven.build.timestamp}</osgi.snapshot.qualifier>
    <jboss.releases.repo.url>https://repository.jboss.org/nexus/service/local/staging/deploy/maven2/</jboss.releases.repo.url>
    <jboss.snapshots.repo.url>https://repository.jboss.org/nexus/content/repositories/snapshots/</jboss.snapshots.repo.url>
    <!-- Newer version in kie-parent causes ServiceLoader error -->
    <version.ch.qos.logback>1.1.3</version.ch.qos.logback>
    <!-- Synchronized with GWT 2.9.0 -->
    <version.org.eclipse.jetty>9.2.14.v20151106</version.org.eclipse.jetty>
    <version.org.uberfire.latestFinal.release>1.4.0.Final</version.org.uberfire.latestFinal.release>
    <revapi.oldUberFireVersion>${version.org.uberfire.latestFinal.release}</revapi.oldUberFireVersion>
    <revapi.newUberFireVersion>${project.version}</revapi.newUberFireVersion>
    <version.com.googlecode.jsonsimple>1.1.1</version.com.googlecode.jsonsimple>
    <version.com.googlecode.jtype>0.1.1</version.com.googlecode.jtype>

    <version.org.kie.kogito.lienzo>${project.version}</version.org.kie.kogito.lienzo>

    <!-- Properties from KIE-WB-COMMON parent POM -->
    <version.powermock.api.mockito2>2.0.9</version.powermock.api.mockito2>
    <spotbugs.failOnViolation>true</spotbugs.failOnViolation>
    <checkstyle.header.template><![CDATA[
^\/\*$\n^
\* Copyright \d\d\d\d Red Hat, Inc\. and\/or its affiliates\.$\n^
\*$\n^
\* Licensed under the Apache License, Version 2\.0 \(the &quot;License&quot;\);$\n^
\* you may not use this file except in compliance with the License\.$\n^
\* You may obtain a copy of the License at$\n^
\*$\n^
\*     http:\/\/www\.apache\.org\/licenses\/LICENSE-2\.0$\n^
\*$\n^
\* Unless required by applicable law or agreed to in writing, software$\n^
\* distributed under the License is distributed on an &quot;AS IS&quot; BASIS,$\n^
\* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied\.$\n^
\* See the License for the specific language governing permissions and$\n^
\* limitations under the License\.$\n^
\*\/$
]]>
    </checkstyle.header.template>

    <!-- Properties from DROOLS-WB parent POM -->
    <!-- TODO: Enable these flags after fixing all checkstyle issues -->
    <checkstyle.failOnViolation>false</checkstyle.failOnViolation>
    <checkstyle.logViolationsToConsole>false</checkstyle.logViolationsToConsole>

    <jacoco.haltOnFailure>false</jacoco.haltOnFailure>
    <code.coverage.disabled>false</code.coverage.disabled>
    <version.org.kogito.gwt-jsonix-schema-compiler>1.3.0</version.org.kogito.gwt-jsonix-schema-compiler>
  </properties>

  <dependencyManagement>
    <dependencies>
      <!-- Common BOMs -->
      <dependency>
        <groupId>org.kie</groupId>
        <artifactId>kie-bom</artifactId>
        <version>${version.org.kie}</version>
        <type>pom</type>
        <scope>import</scope>
      </dependency>

      <dependency>
        <groupId>org.kie.soup</groupId>
        <artifactId>kie-soup-bom</artifactId>
        <version>${version.org.kie}</version>
        <type>pom</type>
        <scope>import</scope>
      </dependency>

      <dependency>
        <groupId>org.drools</groupId>
        <artifactId>drools-bom</artifactId>
        <version>${version.org.kie}</version>
        <type>pom</type>
        <scope>import</scope>
      </dependency>

      <dependency>
        <groupId>org.kie</groupId>
        <artifactId>kie-dmn-bom</artifactId>
        <version>${version.org.kie}</version>
        <type>pom</type>
        <scope>import</scope>
      </dependency>

      <dependency>
        <groupId>org.jbpm</groupId>
        <artifactId>jbpm-bom</artifactId>
        <version>${version.org.kie}</version>
        <type>pom</type>
        <scope>import</scope>
      </dependency>

      <dependency>
        <groupId>com.google.elemental2</groupId>
        <artifactId>elemental2-dom</artifactId>
        <version>${version.com.google.elemental2}</version>
        <type>pom</type>
        <scope>import</scope>
      </dependency>

      <!-- All errai's modules and third-party versions are defined in this POM -->
      <dependency>
        <groupId>org.kie.kogito.stunner.editors</groupId>
        <artifactId>errai-bom</artifactId>
        <version>${project.version}</version>
        <type>pom</type>
        <scope>import</scope>
      </dependency>

      <!-- All appformer's modules and third-party versions are defined in this POM -->
      <dependency>
        <groupId>org.kie.kogito.stunner.editors</groupId>
        <artifactId>appformer-bom</artifactId>
        <version>${project.version}</version>
        <type>pom</type>
        <scope>import</scope>
      </dependency>

      <!-- All kie-wb-common's modules and third-party versions are defined in this POM -->
      <dependency>
        <groupId>org.kie.kogito.stunner.editors</groupId>
        <artifactId>kie-wb-common-bom</artifactId>
        <version>${project.version}</version>
        <type>pom</type>
        <scope>import</scope>
      </dependency>

      <!-- All drools-wb's modules and third-party versions are defined in this POM -->
      <dependency>
        <groupId>org.kie.kogito.stunner.editors</groupId>
        <artifactId>drools-wb-bom</artifactId>
        <version>${project.version}</version>
        <type>pom</type>
        <scope>import</scope>
      </dependency>

      <!-- Lienzo artifacts for kogito stream -->
      <dependency>
        <groupId>org.kie.kogito.stunner.editors</groupId>
        <artifactId>lienzo-core</artifactId>
        <version>${version.org.kie.kogito.lienzo}</version>
      </dependency>
      <dependency>
        <groupId>org.kie.kogito.stunner.editors</groupId>
        <artifactId>lienzo-core</artifactId>
        <version>${version.org.kie.kogito.lienzo}</version>
        <classifier>sources</classifier>
      </dependency>
      <dependency>
        <groupId>org.kie.kogito.stunner.editors</groupId>
        <artifactId>lienzo-tests</artifactId>
        <version>${version.org.kie.kogito.lienzo}</version>
      </dependency>
      <dependency>
        <groupId>org.kie.kogito.stunner.editors</groupId>
        <artifactId>lienzo-tests</artifactId>
        <version>${version.org.kie.kogito.lienzo}</version>
        <classifier>sources</classifier>
      </dependency>

      <!-- log4j-to-slf4j -->
      <dependency>
        <groupId>org.apache.logging.log4j</groupId>
        <artifactId>log4j-to-slf4j</artifactId>
        <version>${version.org.apache.logging.log4j}</version>
      </dependency>
    </dependencies>
  </dependencyManagement>

  <build>
    <!-- include module descriptors from src/main/java in order not to break the Intellij GWT plugin -->
    <resources>
      <resource>
        <directory>src/main/java</directory>
        <filtering>true</filtering>
        <excludes>
          <!-- Only errai needs to include java sources -->
          <exclude>org/appformer/**/*.java</exclude>
          <exclude>org/uberfire/**/*.java</exclude>
          <exclude>org/kie/workbench/**/*.java</exclude>
          <exclude>org/drools/workbench/**/*.java</exclude>
        </excludes>
      </resource>
      <resource>
        <directory>src/main/resources</directory>
      </resource>
    </resources>

    <plugins>
      <plugin>
        <!-- Entry needed to provide parsed version properties -->
        <groupId>org.codehaus.mojo</groupId>
        <artifactId>build-helper-maven-plugin</artifactId>
      </plugin>

      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-failsafe-plugin</artifactId>
      </plugin>

      <plugin>
        <artifactId>maven-jar-plugin</artifactId>
        <configuration>
          <archive>
            <manifest>
              <addDefaultImplementationEntries>true</addDefaultImplementationEntries>
            </manifest>
          </archive>
        </configuration>
      </plugin>

      <plugin>
        <artifactId>maven-source-plugin</artifactId>
        <executions>
          <execution>
            <id>attach-sources</id>
            <goals>
              <goal>jar-no-fork</goal>
            </goals>
          </execution>
        </executions>
      </plugin>

      <plugin>
        <artifactId>maven-clean-plugin</artifactId>
        <configuration>
          <filesets>
            <fileset>
              <directory>${basedir}</directory>
              <includes>
                <include>www-test/**</include>
                <include>.gwt/**</include>
                <include>.errai/**</include>
                <include>war/WEB-INF/deploy/**</include>
                <include>war/WEB-INF/lib/**</include>
                <include>war/WEB-INF/classes/**</include>
                <include>src/main/webapp/WEB-INF/deploy/**</include>
                <include>src/main/webapp/WEB-INF/lib/**</include>
                <include>src/main/webapp/WEB-INF/classes/**</include>
                <include>**/*.JUnit/**</include>
              </includes>
            </fileset>
          </filesets>
        </configuration>
      </plugin>

      <!--Fix translations from Zanata -->
      <plugin>
        <groupId>com.google.code.maven-replacer-plugin</groupId>
        <artifactId>replacer</artifactId>
        <version>1.5.2</version>
        <configuration>
          <includes>
            <include>**/*Constants_de.properties</include>
            <include>**/*Constants_es.properties</include>
            <include>**/*Constants_fr.properties</include>
            <include>**/*Constants_ja.properties</include>
            <include>**/*Constants_pt_BR.properties</include>
            <include>**/*Constants_zh_CN.properties</include>
            <include>**/*Constants_ru.properties</include>
          </includes>
          <excludes>
            <exclude>**/ErraiApp.properties</exclude>
          </excludes>
          <replacements>
            <replacement>
              <token>''</token>
              <value>'</value>
            </replacement>
            <replacement>
              <token>'</token>
              <value>''</value>
            </replacement>
          </replacements>
        </configuration>
      </plugin>

      <!-- Zanata - translations -->
      <plugin>
        <groupId>org.zanata</groupId>
        <artifactId>zanata-maven-plugin</artifactId>
        <version>2.3.0</version>
        <configuration>
          <excludes>**/ErraiApp.properties</excludes>
          <projectConfig>${session.executionRootDirectory}/src/main/config/zanata.xml</projectConfig>
          <srcDir>src/main/resources/</srcDir>
          <transDir>src/main/resources/</transDir>
          <includes>**/*Constants.properties</includes>
        </configuration>
      </plugin>

      <plugin>
        <artifactId>maven-antrun-plugin</artifactId>
        <executions>
          <!-- Temporary workaround for https://issues.jboss.org/browse/ERRAI-1101. Needs to stay here until
          we find a general solution (e.g. moving all localized code to Errai TranslationService. -->
          <execution>
            <id>create-default-i18n-resource</id>
            <phase>process-resources</phase>
            <configuration>
              <target>
                <copy todir="${project.build.directory}/classes"
                      includeemptydirs="false" failonerror="false" quiet="true">
                  <fileset dir="${project.build.directory}/classes"/>
                  <globmapper from="*Constants.properties" to="*Constants_default.properties"/>
                </copy>
              </target>
            </configuration>
            <goals>
              <goal>run</goal>
            </goals>
          </execution>
        </executions>
      </plugin>

      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-enforcer-plugin</artifactId>
      </plugin>
    </plugins>

    <pluginManagement>
      <plugins>
        <plugin>
          <artifactId>maven-shade-plugin</artifactId>
          <version>3.2.1</version>
        </plugin>

        <plugin>
          <groupId>org.codehaus.gmaven</groupId>
          <artifactId>gmaven-plugin</artifactId>
          <version>1.5</version>
        </plugin>

        <plugin>
          <groupId>org.codehaus.mojo</groupId>
          <artifactId>gwt-maven-plugin</artifactId>
          <version>${version.com.google.gwt}</version>
          <executions>
            <execution>
              <goals>
                <goal>resources</goal>
                <goal>compile</goal>
              </goals>
            </execution>
            <execution>
              <id>clean</id>
              <phase>clean</phase>
              <goals>
                <goal>clean</goal>
              </goals>
            </execution>
          </executions>
        </plugin>

        <plugin>
          <groupId>org.jboss.maven.plugins</groupId>
          <artifactId>maven-jdocbook-plugin</artifactId>
          <version>2.3.5</version>
          <extensions>true</extensions>
          <dependencies>
            <dependency>
              <groupId>org.jboss.pressgang</groupId>
              <artifactId>pressgang-jdocbook-style</artifactId>
              <type>jdocbook-style</type>
              <version>2.0.0</version>
            </dependency>
            <dependency>
              <groupId>org.jboss.pressgang</groupId>
              <!--Non-namespaced version for DocBook 4.5 compatibility. For XSD namespaced version, use pressgang-xslt-ns -->
              <artifactId>pressgang-xslt</artifactId>
              <version>2.0.0</version>
            </dependency>
          </dependencies>
        </plugin>

        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-failsafe-plugin</artifactId>
          <configuration>
            <includes>
              <!-- Include integration tests from appformer and uberfire -->
              <include>org/appformer/**/*IntegrationTest.java</include>
              <include>org/uberfire/**/*IntegrationTest.java</include>
              <!-- Include integration tests from kie-wb-common -->
              <include>org/kie/workbench/**/*IntegrationTest.java</include>
              <include>org/kie/workbench/**/*IT.java</include>
              <!-- Include integration tests from drools-wb -->
              <include>org/drools/workbench/**/*IntegrationTest.java</include>
              <include>org/drools/workbench/**/*IT.java</include>
            </includes>
            <argLine>-Xmx1024m -Dfile.encoding=UTF-8</argLine>
          </configuration>
        </plugin>

        <plugin>
          <groupId>org.sonatype.plugins</groupId>
          <artifactId>jarjar-maven-plugin</artifactId>
          <version>1.5</version>
        </plugin>

        <plugin>
          <groupId>org.eclipse.m2e</groupId>
          <artifactId>lifecycle-mapping</artifactId>
          <configuration>
            <lifecycleMappingMetadata>
              <pluginExecutions>
                <pluginExecution>
                  <pluginExecutionFilter>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-antrun-plugin</artifactId>
                    <versionRange>[1.3,)</versionRange>
                    <goals>
                      <goal>run</goal>
                    </goals>
                  </pluginExecutionFilter>
                  <action>
                    <ignore/>
                  </action>
                </pluginExecution>
                <pluginExecution>
                  <pluginExecutionFilter>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-dependency-plugin</artifactId>
                    <versionRange>[1.0,)</versionRange>
                    <goals>
                      <goal>copy-dependencies</goal>
                      <goal>unpack</goal>
                    </goals>
                  </pluginExecutionFilter>
                  <action>
                    <ignore/>
                  </action>
                </pluginExecution>
                <pluginExecution>
                  <pluginExecutionFilter>
                    <groupId>org.codehaus.mojo</groupId>
                    <artifactId>exec-maven-plugin</artifactId>
                    <versionRange>[1.2.1,)</versionRange>
                    <goals>
                      <goal>java</goal>
                    </goals>
                  </pluginExecutionFilter>
                  <action>
                    <ignore/>
                  </action>
                </pluginExecution>
                <pluginExecution>
                  <pluginExecutionFilter>
                    <groupId>org.codehaus.mojo</groupId>
                    <artifactId>gwt-maven-plugin</artifactId>
                    <versionRange>[2.6.0,)</versionRange>
                    <goals>
                      <goal>resources</goal>
                    </goals>
                  </pluginExecutionFilter>
                  <action>
                    <execute/>
                  </action>
                </pluginExecution>
                <pluginExecution>
                  <pluginExecutionFilter>
                    <groupId>org.codehaus.mojo</groupId>
                    <artifactId>xml-maven-plugin</artifactId>
                    <versionRange>[1.0,)</versionRange>
                    <goals>
                      <goal>transform</goal>
                    </goals>
                  </pluginExecutionFilter>
                  <action>
                    <ignore/>
                  </action>
                </pluginExecution>
                <pluginExecution>
                  <pluginExecutionFilter>
                    <groupId>org.jboss.maven.plugins</groupId>
                    <artifactId>maven-jdocbook-plugin</artifactId>
                    <versionRange>[2.3.5,)</versionRange>
                    <goals>
                      <goal>generate</goal>
                      <goal>resources</goal>
                    </goals>
                  </pluginExecutionFilter>
                  <action>
                    <ignore/>
                  </action>
                </pluginExecution>
                <pluginExecution>
                  <pluginExecutionFilter>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-enforcer-plugin</artifactId>
                    <versionRange>[0.0.0,)</versionRange>
                    <goals>
                      <goal>enforce</goal>
                    </goals>
                  </pluginExecutionFilter>
                  <action>
                    <ignore/>
                  </action>
                </pluginExecution>
                <pluginExecution>
                  <pluginExecutionFilter>
                    <groupId>org.codehaus.gmaven</groupId>
                    <artifactId>gmaven-plugin</artifactId>
                    <versionRange>[1.5,)</versionRange>
                    <goals>
                      <goal>testCompile</goal>
                      <goal>generateStubs</goal>
                      <goal>compile</goal>
                      <goal>generateTestStubs</goal>
                    </goals>
                  </pluginExecutionFilter>
                  <action>
                    <ignore/>
                  </action>
                </pluginExecution>
                <pluginExecution>
                  <pluginExecutionFilter>
                    <groupId>org.codehaus.mojo</groupId>
                    <artifactId>build-helper-maven-plugin</artifactId>
                    <versionRange>[1.7,)</versionRange>
                    <goals>
                      <goal>parse-version</goal>
                    </goals>
                  </pluginExecutionFilter>
                  <action>
                    <ignore/>
                  </action>
                </pluginExecution>
              </pluginExecutions>
            </lifecycleMappingMetadata>
          </configuration>
        </plugin>

        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-enforcer-plugin</artifactId>
          <version>${version.enforcer.plugin}</version>
          <dependencies>
            <dependency>
              <groupId>org.codehaus.mojo</groupId>
              <artifactId>extra-enforcer-rules</artifactId>
              <version>1.0</version>
            </dependency>
          </dependencies>
          <executions>
            <execution>
              <id>ban-unwanted-deps</id>
              <goals>
                <goal>enforce</goal>
              </goals>
              <phase>validate</phase>
              <configuration>
                <rules>
                  <bannedDependencies>
                    <excludes>
                      <!-- Ban unwanted logging deps -->
                      <!-- In case of transitive dependency, exclude it and use jcl-over-slf4j instead -->
                      <exclude>commons-logging:commons-log*</exclude>
                      <!-- In case of transitive dependency, exclude it and use log4j-over-slf4j instead -->
                      <exclude>log4j:log4j</exclude>

                      <!-- Ban 'javassist:javassist' in favor of 'org.javassist:javassist' -->
                      <exclude>javassist:javassist</exclude>
                    </excludes>
                  </bannedDependencies>
                </rules>
              </configuration>
            </execution>
            <execution>
              <id>ban-duplicated-classes</id>
              <goals>
                <goal>enforce</goal>
              </goals>
              <phase>validate</phase>
              <configuration>
                <rules>
                  <banDuplicateClasses>
                    <ignoreClasses>
                      <!-- Ban 'org.elasticsearch:elasticsearch' internal classes, as the artifact contains
                        some duplicated classes for Joda time ones and it has the joda artifact
                        as transitive dependency as well. -->
                      <ignoreClass>org.joda.time.*</ignoreClass>
                      <!-- Classes bundled in errai-javax-enterprise which are GWT friendly.
                           See https://github.com/kiegroup/kie-tools/blob/main/packages/stunner-editors/errai-javax-enterprise/README -->
                      <ignoreClass>javax.interceptor.InvocationContext</ignoreClass>
                      <ignoreClass>javax.inject.Provider</ignoreClass>
                      <ignoreClass>javax.inject.Named</ignoreClass>
                      <ignoreClass>javax.inject.Scope</ignoreClass>
                      <ignoreClass>javax.inject.Qualifier</ignoreClass>
                      <ignoreClass>javax.inject.Singleton</ignoreClass>
                      <ignoreClass>javax.enterprise.*</ignoreClass>

                      <!-- TODO: Fix and remove these ignores -->
                      <ignoreClass>org.kie.dmn.feel.*</ignoreClass>
                      <ignoreClass>org.dominokit.domino.logger.ConsoleLoggerAdapter</ignoreClass>
                      <ignoreClass>org.slf4j.*</ignoreClass>
                      <ignoreClass>org.antlr.v4.runtime.*</ignoreClass>

                      <!-- Classes from gwt-user duplicated in errai-uibinder -->
                      <ignoreClass>com.google.gwt.uibinder.rebind.UiBinderWriter</ignoreClass>
                      <ignoreClass>com.google.gwt.uibinder.rebind.UiBinderGenerator</ignoreClass>
                      <!-- Duplicated by XStream's transitive deps, with very little chance to get properly fixed -->
                      <ignoreClass>org.xmlpull.v1.XmlPullParserException</ignoreClass>
                      <ignoreClass>org.xmlpull.v1.XmlPullParser</ignoreClass>
                      <!-- Duplicated in xml-apis:xml-apis:jar:1.4.01 and xerces:xercesImpl:jar:2.11.0.SP4. The class is identical
                           and there is very little chance this will get ever fixed. -->
                      <ignoreClass>org.w3c.dom.ElementTraversal</ignoreClass>
                      <ignoreClass>org.w3c.dom.UserDataHandler</ignoreClass>
                    </ignoreClasses>
                    <dependencies>
                      <!-- gwt-user bundles javax.servlet classes which usually conflicts with the servlet dependencies
                           in -webapp modules. -->
                      <dependency>
                        <groupId>com.google.gwt</groupId>
                        <artifactId>gwt-user</artifactId>
                        <type>jar</type>
                        <ignoreClasses>
                          <ignoreClass>javax.servlet.*</ignoreClass>
                        </ignoreClasses>
                      </dependency>
                      <!-- gwt-dev bundles dozens of different 3rd party dependencies, but can not be usually excluded
                           as e.g. GWT Mockito tests are using the com.google.gwt classes inside. Ignoring it for the
                           duplicate classes check seems to be the only way. -->
                      <dependency>
                        <groupId>com.google.gwt</groupId>
                        <artifactId>gwt-dev</artifactId>
                        <type>jar</type>
                        <ignoreClasses>
                          <ignoreClass>*</ignoreClass>
                        </ignoreClasses>
                      </dependency>
                      <!-- netty-all duplicates many netty-* jars but they are managed to the same version -->
                      <dependency>
                        <groupId>io.netty</groupId>
                        <artifactId>netty-all</artifactId>
                        <type>jar</type>
                        <ignoreClasses>
                          <ignoreClass>*</ignoreClass>
                        </ignoreClasses>
                      </dependency>
                      <dependency>
                        <groupId>org.apache.xmlbeans</groupId>
                        <artifactId>xmlbeans</artifactId>
                        <type>jar</type>
                        <ignoreClasses>
                          <!-- Classes duplicated by the jar itself (bug), see https://issues.apache.org/jira/browse/XMLBEANS-499 -->
                          <ignoreClass>org.apache.xmlbeans.xml.stream.XMLName</ignoreClass>
                          <ignoreClass>org.apache.xmlbeans.xml.stream.XMLInputStream</ignoreClass>
                          <ignoreClass>org.apache.xmlbeans.xml.stream.utils.NestedThrowable</ignoreClass>
                          <ignoreClass>org.apache.xmlbeans.xml.stream.utils.NestedThrowable$Util</ignoreClass>
                          <ignoreClass>org.apache.xmlbeans.xml.stream.XMLStreamException</ignoreClass>
                          <ignoreClass>org.apache.xmlbeans.xml.stream.ReferenceResolver</ignoreClass>
                          <ignoreClass>org.apache.xmlbeans.xml.stream.XMLEvent</ignoreClass>
                          <ignoreClass>org.apache.xmlbeans.xml.stream.Location</ignoreClass>
                        </ignoreClasses>
                      </dependency>
                      <dependency>
                        <groupId>org.wildfly.security</groupId>
                        <artifactId>wildfly-elytron</artifactId>
                        <type>jar</type>
                        <ignoreClasses>
                          <ignoreClass>*</ignoreClass>
                        </ignoreClasses>
                      </dependency>
                    </dependencies>
                    <findAllDuplicates>true</findAllDuplicates>
                  </banDuplicateClasses>
                </rules>
                <fail>true</fail>
              </configuration>
            </execution>
          </executions>
        </plugin>

        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-resources-plugin</artifactId>
          <configuration>
            <encoding>UTF-8</encoding>
          </configuration>
        </plugin>

        <plugin>
          <groupId>org.codehaus.mojo</groupId>
          <artifactId>build-helper-maven-plugin</artifactId>
          <executions>
            <execution>
              <goals>
                <goal>parse-version</goal>
              </goals>
            </execution>
            <execution>
              <id>add-source</id>
              <phase>generate-sources</phase>
              <goals>
                <goal>add-source</goal>
              </goals>
              <configuration>
                <sources>
                  <source>target/generated-sources/annotations</source>
                </sources>
              </configuration>
            </execution>
          </executions>
        </plugin>

        <plugin>
          <groupId>org.apache.felix</groupId>
          <artifactId>maven-bundle-plugin</artifactId>
          <extensions>true</extensions>
          <configuration>
            <!-- Split packages in combination with <Export-Package> causes bloated jars otherwise -->
            <excludeDependencies>true</excludeDependencies>
            <instructions>
              <_removeheaders>Ignore-Package</_removeheaders>
              <_nouses>true</_nouses>
              <_snapshot>${osgi.snapshot.qualifier}</_snapshot>
              <Bundle-Version>
                ${parsedVersion.majorVersion}.${parsedVersion.minorVersion}.${parsedVersion.incrementalVersion}.${osgi.snapshot.qualifier}
              </Bundle-Version>
            </instructions>
            <obrRepository>NONE</obrRepository>
          </configuration>
        </plugin>

        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-surefire-plugin</artifactId>
          <configuration>
            <includes>
              <!-- Include all from appformer and uberfire -->
              <include>org/appformer/**/*Test.java</include>
              <include>org/uberfire/**/*Test.java</include>
              <!-- Include all from kie-wb-common -->
              <include>org/kie/workbench/**/*Test.java</include>
              <!-- Include all from drools-wb -->
              <include>org/drools/workbench/**/*Test.java</include>
            </includes>
            <excludes>
              <!-- Exclude all from errai as each module has its own configuration -->
              <exclude>org/jboss/errai/**/*.java</exclude>
              <!-- Exclude integration tests from appformer and uberfire -->
              <exclude>org/appformer/**/*IntegrationTest.java</exclude>
              <exclude>org/uberfire/**/*IntegrationTest.java</exclude>
              <!-- Exclude integration tests from kie-wb-common -->
              <exclude>org/kie/workbench/**/*IntegrationTest.java</exclude>
              <exclude>org/kie/workbench/**/*IT.java</exclude>
              <!-- Exclude integration tests from drools-wb -->
              <exclude>org/drools/workbench/**/*IntegrationTest.java</exclude>
              <exclude>org/drools/workbench/**/*IT.java</exclude>
            </excludes>
            <argLine>-Xmx1024m -Dfile.encoding=UTF-8</argLine>
          </configuration>
        </plugin>

        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-source-plugin</artifactId>
          <executions>
            <execution>
              <id>attach-sources</id>
              <goals>
                <goal>jar-no-fork</goal>
              </goals>
              <configuration>
                <archive>
                  <manifestEntries>
                    <Bundle-ManifestVersion>2</Bundle-ManifestVersion>
                    <Bundle-SymbolicName>${project.artifactId}.source</Bundle-SymbolicName>
                    <Bundle-Version>
                      ${parsedVersion.majorVersion}.${parsedVersion.minorVersion}.${parsedVersion.incrementalVersion}.${osgi.snapshot.qualifier}
                    </Bundle-Version>
                    <Bundle-Name>${project.name}</Bundle-Name>
                    <Bundle-Vendor>${project.organization.name}</Bundle-Vendor>
                    <Eclipse-SourceBundle>
                      ${project.artifactId};version="${parsedVersion.majorVersion}.${parsedVersion.minorVersion}.${parsedVersion.incrementalVersion}.${osgi.snapshot.qualifier}";roots:="."
                    </Eclipse-SourceBundle>
                  </manifestEntries>
                </archive>
              </configuration>
            </execution>
            <execution>
              <id>attach-test-sources</id>
              <goals>
                <goal>test-jar-no-fork</goal>
              </goals>
              <configuration>
                <archive>
                  <manifestEntries>
                    <Bundle-ManifestVersion>2</Bundle-ManifestVersion>
                    <Bundle-SymbolicName>${project.artifactId}.tests.source</Bundle-SymbolicName>
                    <Bundle-Version>
                      ${parsedVersion.majorVersion}.${parsedVersion.minorVersion}.${parsedVersion.incrementalVersion}.${osgi.snapshot.qualifier}
                    </Bundle-Version>
                    <Bundle-Name>${project.name}</Bundle-Name>
                    <Bundle-Vendor>${project.organization.name}</Bundle-Vendor>
                    <Eclipse-SourceBundle>
                      ${project.artifactId}.tests;version="${parsedVersion.majorVersion}.${parsedVersion.minorVersion}.${parsedVersion.incrementalVersion}.${osgi.snapshot.qualifier}";roots:="."
                    </Eclipse-SourceBundle>
                  </manifestEntries>
                </archive>
              </configuration>
            </execution>
          </executions>
        </plugin>

        <plugin>
          <groupId>org.commonjava.maven.plugins</groupId>
          <artifactId>project-sources-maven-plugin</artifactId>
          <version>1.0</version>
          <executions>
            <execution>
              <id>project-sources-archive</id>
              <phase>initialize</phase>
              <goals>
                <goal>archive</goal>
              </goals>
            </execution>
          </executions>
        </plugin>

        <plugin>
          <groupId>org.codehaus.mojo</groupId>
          <artifactId>versions-maven-plugin</artifactId>
          <version>2.2</version>
        </plugin>

        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-javadoc-plugin</artifactId>
          <configuration>
            <links>
              <link>http://docs.oracle.com/javase/8/docs/api</link>
            </links>
            <minmemory>128m</minmemory>
            <maxmemory>512m</maxmemory>
            <author>false</author>
            <breakiterator>true</breakiterator>
            <quiet>true</quiet>
          </configuration>
        </plugin>

        <plugin>
          <groupId>org.codehaus.mojo</groupId>
          <artifactId>jaxb2-maven-plugin</artifactId>
          <version>1.3</version>
        </plugin>

        <plugin>
          <groupId>org.codehaus.mojo</groupId>
          <artifactId>selenium-maven-plugin</artifactId>
          <version>2.3</version>
        </plugin>
      </plugins>
    </pluginManagement>
  </build>

  <reporting>
    <plugins>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-javadoc-plugin</artifactId>
        <configuration>
          <links>
            <link>http://docs.oracle.com/javase/8/docs/api</link>
          </links>
          <minmemory>128m</minmemory>
          <maxmemory>512m</maxmemory>
          <author>false</author>
          <breakiterator>true</breakiterator>
          <quiet>true</quiet>
        </configuration>
      </plugin>
    </plugins>
  </reporting>

  <profiles>
    <!-- ERRAI profiles -->
    <profile>
      <id>macJvm6Settings</id>
      <activation>
        <os>
          <family>mac</family>
        </os>
      </activation>
      <!-- If we could limit this profile to JDK <=6 on Mac, we'd include -d32 in argLine. But we can't, because profile activation settings are ORed rather than ANDed together. See http://jira.codehaus.org/browse/MNG-4565 -->
      <properties>
        <argLine>-XX:CompileThreshold=1000 -Djava.awt.headless=true</argLine>
      </properties>
    </profile>

    <profile>
      <id>firefox-test</id>
      <properties>
        <gwtArgs>-prod -userAgents gecko1_8 -runStyle Selenium:127.0.0.1:4444/*firefox</gwtArgs>
        <argLine>-Dgwt.args="${gwtArgs}"</argLine>
      </properties>
      <build>
        <plugins>
          <plugin>
            <groupId>org.codehaus.mojo</groupId>
            <artifactId>selenium-maven-plugin</artifactId>
            <executions>
              <execution>
                <id>start</id>
                <phase>pre-integration-test</phase>
                <goals>
                  <goal>start-server</goal>
                </goals>
                <configuration>
                  <background>true</background>
                </configuration>
              </execution>

              <execution>
                <id>stop</id>
                <phase>post-integration-test</phase>
                <goals>
                  <goal>stop-server</goal>
                </goals>
              </execution>
            </executions>
          </plugin>
        </plugins>
      </build>
      <dependencies>
        <dependency>
          <groupId>org.seleniumhq.selenium</groupId>
          <artifactId>selenium-firefox-driver</artifactId>
          <scope>test</scope>
          <exclusions>
            <exclusion>
              <groupId>commons-logging</groupId>
              <artifactId>commons-logging</artifactId>
            </exclusion>
            <exclusion>
              <groupId>com.squareup.okio</groupId>
              <artifactId>okio</artifactId>
            </exclusion>
          </exclusions>
        </dependency>
        <dependency>
          <groupId>org.seleniumhq.selenium</groupId>
          <artifactId>selenium-java</artifactId>
          <scope>test</scope>
          <exclusions>
            <exclusion>
              <groupId>commons-logging</groupId>
              <artifactId>commons-logging</artifactId>
            </exclusion>
            <exclusion>
              <groupId>com.squareup.okio</groupId>
              <artifactId>okio</artifactId>
            </exclusion>
          </exclusions>
        </dependency>
      </dependencies>
    </profile>

    <profile>
      <id>integration-test</id>
      <build>
        <plugins>
          <plugin>
            <artifactId>maven-failsafe-plugin</artifactId>
            <configuration>
              <skipTests>false</skipTests>
              <useSystemClassLoader>false</useSystemClassLoader>
              <useManifestOnlyJar>false</useManifestOnlyJar>
              <!--               <forkMode>pertest</forkMode> this is the same as below -->
              <!-- http://maven.apache.org/surefire/maven-surefire-plugin/examples/fork-options-and-parallel-execution.html#Migrating_the_Deprecated_forkMode_Parameter_to_forkCount_and_reuseForks -->
              <forkCount>1</forkCount>
              <reuseForks>false</reuseForks>
              <argLine>${argLine}</argLine>
              <additionalClasspathElements>
                <additionalClasspathElement>${basedir}/target/classes/</additionalClasspathElement>
                <additionalClasspathElement>${basedir}/test-classes/</additionalClasspathElement>
                <additionalClasspathElement>${basedir}/src/main/java/</additionalClasspathElement>
                <additionalClasspathElement>${basedir}/src/test/java/</additionalClasspathElement>
              </additionalClasspathElements>
              <systemProperties>
                <!-- Must disable long polling for automated tests to succeed -->
                <property>
                  <name>errai.hosted_mode_testing</name>
                  <value>true</value>
                </property>
              </systemProperties>
              <includes>
                <include>**/*Test.java</include>
                <include>**/*Tests.java</include>
              </includes>
            </configuration>
            <executions>
              <execution>
                <goals>
                  <goal>integration-test</goal>
                  <goal>verify</goal>
                </goals>
              </execution>
            </executions>
          </plugin>
        </plugins>
      </build>
    </profile>

    <profile>
      <id>quick-hosted-mode</id>
      <activation>
        <property>
          <name>hosted</name>
        </property>
      </activation>
      <properties>
        <google.webtoolkit.compileSkip>true</google.webtoolkit.compileSkip>
        <o>true</o>
        <!-- offline -->
      </properties>
    </profile>

    <!-- APPFORMER profiles -->
    <profile>
      <id>graph</id>
      <build>
        <plugins>
          <!-- Important: you need to have Graphviz installed on your system to make the plugin work! -->
          <plugin>
            <groupId>org.fusesource.mvnplugins</groupId>
            <artifactId>maven-graph-plugin</artifactId>
            <version>1.38</version>
            <executions>
              <execution>
                <id>dependency-graph-reactor</id>
                <phase>install</phase>
                <goals>
                  <goal>reactor</goal>
                </goals>
              </execution>
            </executions>
            <configuration>
              <hideExternal>true</hideExternal>
            </configuration>
          </plugin>
          <!-- Copied from kie-parent -->
          <plugin>
            <groupId>org.revapi</groupId>
            <artifactId>revapi-maven-plugin</artifactId>
            <version>0.8.1</version>
            <dependencies>
              <dependency>
                <groupId>org.revapi</groupId>
                <artifactId>revapi-java</artifactId>
                <version>0.13.1</version>
              </dependency>
            </dependencies>
            <configuration>
              <oldArtifacts>
                <artifact>${project.groupId}:${project.artifactId}:${revapi.oldUberFireVersion}</artifact>
              </oldArtifacts>
              <newArtifacts>
                <artifact>${project.groupId}:${project.artifactId}:${revapi.newUberFireVersion}</artifact>
              </newArtifacts>
              <!-- By default revapi will check the oldArtifact against the currently executed build -->
              <analysisConfigurationFiles>
                <configurationFile>
                  <path>src/build/revapi-config.json</path>
                  <roots>
                    <root>filters</root>
                    <root>ignores</root>
                  </roots>
                </configurationFile>
              </analysisConfigurationFiles>
              <!-- By default, revapi will only fail the build if there are potentially breaking or breaking changes. However, in the report
                   we want even non breaking changes to be present. -->
              <reportSeverity>nonBreaking</reportSeverity>
              <failSeverity>potentiallyBreaking</failSeverity>
            </configuration>
            <!-- Running two executions is a workaround to make sure we get a HTML report in case revapi finds
                 some incompatible changes. The "check" goal will simply fail the whole build before it could get
                 to the report. To make sure we always get a HTML report, the "report" goal needs to be executed
                 before the "check" goal.
                 Once https://github.com/revapi/revapi/issues/11 is fixed it should be possible to use single execution. -->
            <executions>
              <execution>
                <id>check</id>
                <goals>
                  <goal>check</goal>
                </goals>
                <phase>verify</phase>
              </execution>
              <execution>
                <!-- report can be found in ${build.directory}/site/revapi-report.html -->
                <id>report</id>
                <goals>
                  <goal>report</goal>
                </goals>
                <phase>package</phase>
              </execution>
            </executions>
          </plugin>
        </plugins>
      </build>
    </profile>

    <profile>
      <id>run-code-coverage</id>
      <properties>
        <jacoco.excludes>*Lexer</jacoco.excludes>
        <code.coverage.disabled>false</code.coverage.disabled>
        <gwt.compiler.skip>true</gwt.compiler.skip> <!-- org.codehaus.mojo:gwt-maven-plugin -->
        <gwt.skipCompilation>true</gwt.skipCompilation> <!-- net.ltgt.gwt.maven:gwt-maven-plugin -->
      </properties>

      <dependencyManagement>
        <dependencies>
          <dependency>
            <groupId>org.jacoco</groupId>
            <artifactId>org.jacoco.agent</artifactId>
            <classifier>runtime</classifier>
            <version>${version.jacoco.plugin}</version>
            <scope>test</scope>
          </dependency>
        </dependencies>
      </dependencyManagement>
      <dependencies>
        <dependency>
          <groupId>org.jacoco</groupId>
          <artifactId>org.jacoco.agent</artifactId>
          <classifier>runtime</classifier>
          <scope>test</scope>
        </dependency>
      </dependencies>
      <build>
        <pluginManagement>
          <plugins>
            <plugin>
              <groupId>org.jacoco</groupId>
              <artifactId>jacoco-maven-plugin</artifactId>
              <version>${version.jacoco.plugin}</version>
              <configuration>
                <append>true</append>
                <dataFile>${jacoco.exec.file}</dataFile>
                <excludes>
                  <exclude>${jacoco.excludes}</exclude>
                </excludes>
              </configuration>
              <executions>
                <execution>
                  <id>default-instrument</id>
                  <goals>
                    <goal>instrument</goal>
                  </goals>
                </execution>
                <execution>
                  <id>default-restore-instrumented-classes</id>
                  <goals>
                    <goal>restore-instrumented-classes</goal>
                  </goals>
                </execution>
              </executions>
            </plugin>
            <plugin>
              <artifactId>maven-surefire-plugin</artifactId>
              <configuration>
                <systemPropertyVariables>
                  <jacoco-agent.destfile>${jacoco.exec.file}</jacoco-agent.destfile>
                </systemPropertyVariables>
              </configuration>
            </plugin>
          </plugins>
        </pluginManagement>
        <plugins>
          <plugin>
            <groupId>org.jacoco</groupId>
            <artifactId>jacoco-maven-plugin</artifactId>
            <configuration>
              <skip>${code.coverage.disabled}</skip>
            </configuration>
          </plugin>
        </plugins>
      </build>
    </profile>
  </profiles>
</project>
