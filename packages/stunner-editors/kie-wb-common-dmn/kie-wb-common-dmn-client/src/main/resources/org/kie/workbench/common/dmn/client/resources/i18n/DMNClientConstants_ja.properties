#
# Copyright 2017 Red Hat, Inc. and/or its affiliates.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#
ExpressionEditor.ReturnToLink={0} に戻る
ExpressionEditor.ExpressionTypeText=({0})
ExpressionEditor.UndefinedExpressionType=未定義
ExpressionEditor.LiteralExpressionType=文字式
ExpressionEditor.ContextExpressionType=コンテキスト
ExpressionEditor.DecisionTableExpressionType=デシジョンテーブル
ExpressionEditor.RelationType=関連
ExpressionEditor.FunctionType=関数
ExpressionEditor.PMMLFunctionType=PMML 関数
ExpressionEditor.JavaFunctionType=Java 関数
ExpressionEditor.InvocationType=呼び出し
ExpressionEditor.ListType=リスト
ExpressionEditor.Clear=消去
LiteralExpression.EditExpression=式の編集
ContextEditor.Header=コンテキストエントリー
ContextEditor.InsertContextEntry=挿入
ContextEditor.InsertContextEntryAbove=上に挿入
ContextEditor.InsertContextEntryBelow=下に挿入
ContextEditor.DeleteContextEntry=削除
ContextEditor.EditExpression=式の編集
ContextEditor.EditContextEntry=コンテキストエントリーの編集
RelationEditor.HeaderRows=行
RelationEditor.InsertRowAbove=上に挿入
RelationEditor.InsertRowBelow=下に挿入
RelationEditor.DeleteRow=削除
RelationEditor.HeaderColumns=カラム
RelationEditor.InsertColumnLeft=左に挿入
RelationEditor.InsertColumnRight=右に挿入
RelationEditor.DeleteColumn=削除
RelationEditor.EditRelation=関連の編集
InvocationEditor.Header=パラメーター
InvocationEditor.InsertParameter=挿入
InvocationEditor.InsertParameterAbove=上に挿入
InvocationEditor.InsertParameterBelow=下に挿入
InvocationEditor.DeleteParameter=削除
InvocationEditor.EditExpression=式の編集
InvocationEditor.EditParameter=パラメーターの編集
InvocationEditor.EnterFunction=関数を入力
ListEditor.HeaderRows=行
ListEditor.InsertRowAbove=上に挿入
ListEditor.InsertRowBelow=下に挿入
ListEditor.DeleteRow=削除
ListEditor.EditExpression=リストの編集
FunctionEditor.FEEL=FEEL
FunctionEditor.JAVA=JAVA
FunctionEditor.PMML=PMML
FunctionEditor.Undefined=<Undefined>
FunctionEditor.EditExpression=式の編集
FunctionEditor.EditParameters=パラメーターの編集
FunctionEditor.EditParametersTitle=パラメーターの編集
FunctionEditor.SelectFunctionKind=関数の種類を選択
ParametersPopoverViewImpl.addParameter=パラメーターの追加
DecisionTableEditor.InsertRuleAnnotationClauseLeft=左に挿入
DecisionTableEditor.InsertRuleAnnotationClauseRight=右に挿入
DecisionTableEditor.DeleteRuleAnnotationClause=削除
DecisionTableEditor.RuleAnnotationClauseHeader=ルールの注釈
DecisionTableEditor.SelectRuleAnnotationName=ルールの注釈名
DecisionTableEditor.DescriptionColumnHeader=説明
DecisionTableEditor.InputClauseHeader=Input 句
DecisionTableEditor.InsertInputClauseLeft=左に挿入
DecisionTableEditor.InsertInputClauseRight=右に挿入
DecisionTableEditor.DeleteInputClause=削除
DecisionTableEditor.OutputClauseHeader=Output 句
DecisionTableEditor.InsertOutputClauseLeft=左に挿入
DecisionTableEditor.InsertOutputClauseRight=右に挿入
DecisionTableEditor.DeleteOutputClause=削除
DecisionTableEditor.DecisionRuleHeader=デシジョンルール
DecisionTableEditor.InsertDecisionRuleAbove=上に挿入
DecisionTableEditor.InsertDecisionRuleBelow=下に挿入
DecisionTableEditor.DeleteDecisionRule=削除
DecisionTableEditor.DuplicateDecisionRule=複製
DecisionTableEditor.NullBuiltinAggregator=<None>
DecisionTableEditor.EditHitPolicy=ヒットポリシーの編集
DecisionTableEditor.EditInputClause=Input 句の編集
DecisionTableEditor.EditOutputClause=Output 句の編集
DecisionTableEditor.HitPolicyLabel=ヒットポリシー
DecisionTableEditor.BuiltinAggregatorLabel=ビルドインアグリゲーター
DecisionTableEditor.EnterAnnotation=テキストの入力
DecisionTableEditor.InputClauseColumnHeaderMetaData.ValueLabel=式
UndefinedExpressionEditor.SelectorTitle=論理タイプの選択
UndefinedExpressionEditor.SelectExpression=式の選択
DecisionNavigatorPresenter.DecisionNavigator=Decision Navigator
DecisionNavigatorBaseItemFactory.NoName=- 名前なし -
TypePickerWidget.Choose=選択…
TypePickerWidget.Manage=管理
DataTypeManager.None=名前を挿入
DataTypeManager.Structure=Structure
DataTypeModalView.Header=カスタムデータタイプの管理
DataTypeModalView.Cancel=キャンセル
DataTypeModalView.Save=保存
DataTypeSelectView.DefaultTitle=デフォルト
DataTypeSelectView.CustomTitle=カスタム
DataTypeTreeGridView.AttributeName=属性名
DataTypeTreeGridView.Type=タイプ
DataTypeTreeGridView.Required=(* 必須)
DataTypeListItemView.Name=名前
DataTypeListItemView.Type=タイプ
DataTypeListItemView.ArrowKeysTooltip=矢印を使ってデータタイプに移動します
DataTypeListView.Title=カスタムデータタイプ
DataTypeListView.NoCustomDataTitle=定義されたカスタムデータタイプはありません。
DataTypeListView.NoCustomData1=データタイプは、デシジョンテーブルの入力および出力値から参照されます。カスタムデータタイプを使用すると、単純な「デフォルト」タイプだけでなく、より複雑なデータタイプを参照できます。
DataTypeListView.NoCustomData2=現在、表示または編集可能なカスタムデータタイプはありません。開始するには、カスタムデータタイプを追加してください。
DataTypeListView.AddACustomDataType=カスタムデータ型を追加
DataTypeListView.NoCustomDataTypesFound1=カスタムデータタイプが見つかりませんでした。
DataTypeListView.NoCustomDataTypesFound2=別のデータタイプの名前を試してください。
DataTypeListView.NewDataType=新規データタイプ
DataTypeListView.ExpandAll=すべてを展開
DataTypeListView.CollapseAll=すべてを折りたたむ
DataTypeListView.ReadOnlyMessage1=このリストには読み取り専用モードのデータタイプが含まれています。
DataTypeListView.ReadOnlyMessage2=元のファイルを開いて編集できます。
DataTypeListView.ImportDataObject=データオブジェクトのインポート
NameAndDataTypePopover.NameLabel=名前
NameAndDataTypePopover.DataTypeLabel=データ型
DataTypeNameIsBlankErrorMessage.StrongMessage=データタイプの名前は空白にできません。
DataTypeNameIsBlankErrorMessage.RegularMessage=データタイプの名前を入力してください。
DataTypeNameIsInvalidErrorMessage.StrongMessage=データタイプの名前は、文字、クエスチョンマーク「?」またはアンダースコア「_」 で始める必要があり、「and」や「true」または「every」といった言語のキーワードで始めることはできません。
DataTypeNameIsInvalidErrorMessage.RegularMessage=別のデータタイプの名前を使用してください。
DataTypeNameIsNotUniqueErrorMessage.StrongMessage=データタイプ "{0}" はすでに存在しています。
DataTypeNameIsNotUniqueErrorMessage.RegularMessage=別のデータタイプの名前を使用してください。
DataTypeWithFieldsWarningMessage.StrongMessage=この変更により、この構造の一部であるフィールドはすべて削除されます。
DataTypeWithFieldsWarningMessage.RegularMessage=このデータタイプを変更してもよろしいですか?
ReferencedDataTypeWarningMessage.StrongMessage="{0}" タイプのデータタイプはすべて削除されます。
ReferencedDataTypeWarningMessage.RegularMessage=このデータタイプを削除してもよろしいですか?
DataTypeNameIsDefaultTypeMessage.StrongMessage=データタイプの名前はデフォルトタイプにできません。
DataTypeNameIsDefaultTypeMessage.RegularMessage=別のデータタイプの名前を使用してください。
DataTypeSuccessfullyImportedMessage.RegularMessage=データオブジェクト (Java クラス) は DMN データタイプに正常に変換され、インポートされました。
FlashMessagesView.Ok=OK
FlashMessagesView.Cancel=キャンセル
DataTypeListItemView.Constraints=制約: {0}
DataTypeListItemView.List=リスト
DataTypeListItemView.Yes=はい
DataTypeListItemView.Edit=編集 (Ctrl + E)
DataTypeListItemView.Save=保存 (Ctrl + S)
DataTypeListItemView.AddRowBelow=下に行を追加 (Ctrl + B)
DataTypeListItemView.Remove=削除 (Ctrl +バックスペース)
DataTypeListItemView.Cancel=キャンセル (Esc)
DataTypesPage.Title=データタイプ
IncludedModelsPage.Title=含まれるモデル
DataTypeSearchBarView.Search=データタイプの検索
DataTypeConstraintView.AddConstraints=制約を追加
DataTypeConstraintView.ConstraintsTooltip=データタイプに有効な入力を制限し、定義するための制約を追加します。
DataTypeConstraintModalView.BodyParagraph1=このデータタイプに有効な入力を制限し、定義するための 
DataTypeConstraintModalView.BodyParagraph2=データタイプ。
DataTypeConstraintModalView.BodyParagraph3=制約タイプを選択
DataTypeConstraintModalView.Header=データタイプの制約
DataTypeConstraintModalView.Select=選択
DataTypeConstraintModalView.Enumeration=列挙
DataTypeConstraintModalView.Expression=式
DataTypeConstraintModalView.Range=範囲
DataTypeConstraintModalView.ClearAll=すべて消去
DataTypeConstraintModalView.Ok=OK
DataTypeConstraintModalView.Cancel=キャンセル
DataTypeConstraintModalView.SelectConstraintType=制約タイプを選択
DataTypeConstraintExpressionView.ForSyntaxRequirements=制限式の構文要件については、以下を参照してください。
DataTypeConstraintExpressionView.DMNSpecification=DMN 仕様
DataTypeConstraintExpressionView.Placeholder=有効な式を入力
DataTypeConstraintEnumerationView.Add=追加
DataTypeConstraintEnumerationItemView.Edit=編集
DataTypeConstraintEnumerationItemView.Remove=削除
DataTypeConstraintEnumerationItemView.MoveUp=上に移動
DataTypeConstraintEnumerationItemView.MoveDown=下に移動
DataTypeConstraintEnumerationItemView.None=- なし -
DataTypeConstraintModalView.StrongWarningParserMessage=現在の制約は解析できませんでした。
DataTypeConstraintModalView.RegularWarningParserMessage=有効な制約を設定します。
DataTypeConstraintRangeView.StartValue=開始値
DataTypeConstraintRangeView.EndValue=終了値
DataTypeConstraintRangeView.IncludeStartValue=開始値を含める
DataTypeConstraintRangeView.IncludeEndValue=終了値を含める
DataTypeConstraintRangeView.RequiredValue=* 範囲には開始値と終了値があり、両方のフィールドの値が必要です。
DataTypeConstraintRangeView.ProTip=範囲の両端の値は、範囲の定義に含むことも、除外することもできます。チェックボックスがオフの場合、開始値または終了値は除外されます。
ConstraintPlaceholderHelper.SentenceDate="date" データタイプの式の例: (date("2019-02-01")..date("2019-02-28"))
ConstraintPlaceholderHelper.SentenceNumber="number" データ型の式の例: (1..10)
ConstraintPlaceholderHelper.SentenceString="string" データタイプの式の例: "apple","orange","pineapple"
ConstraintPlaceholderHelper.SentenceDayTimeDuration="days and time duration" データタイプの式の例 (PT10S は 10 秒を表し、PT30M は 30 分を表します): (duration("PT10S")..duration("PT30M"))
ConstraintPlaceholderHelper.SentenceYearMonthDuration="years and months duration" データタイプの式の例 (P2M は 2 カ月を表し、P2Y は 2 年 を表します): (duration("P2M")..duration("P2Y"))
ConstraintPlaceholderHelper.SentenceTime="time" データタイプの式の例: (time("16:00")..time("16:30"))
ConstraintPlaceholderHelper.SentenceDateTime="date and time" データタイプの式の例: (date and time("2019-02-01T16:00")..date and time("2019-02-28T17:00"))
ConstraintPlaceholderHelper.SentenceDefault=有効な式を入力
ConstraintPlaceholderHelper.SampleDate=日付けの選択
ConstraintPlaceholderHelper.SampleNumber=数字を入力
ConstraintPlaceholderHelper.SampleString=文字列を入力
ConstraintPlaceholderHelper.SampleDayTimeDuration=期間("PT10S")
ConstraintPlaceholderHelper.SampleYearMonthDuration=値を入力
ConstraintPlaceholderHelper.SampleTime=時間を入力
ConstraintPlaceholderHelper.SampleDateTime=時間("2019-02-28T17:00")
ConstraintPlaceholderHelper.SampleDefault=値を入力する
IncludedModelsPageView.Title=含まれるモデル
IncludedModelsPageView.Description=含まれるモデルは、この DMN ファイルに追加された外部定義モデルです。外部 DMN モデルには、この DMN ファイルで利用できるデシジョン要件ダイアグラムまたはグラフコンポーネントがあります。外部 PMML モデルは、DMN 関数を介して呼び出すことができます。
IncludedModelsPageView.IncludeModel=モデルを追加
DMNCardComponentContentView.Remove=削除
PMMLCardComponentContentView.Remove=削除
DefaultCardComponentContentView.Remove=削除
IncludedModelNameIsNotUniqueErrorMessage.StrongMessage=モデル "{0}" はすでに存在します。
IncludedModelNameIsNotUniqueErrorMessage.RegularMessage=別のモデル名を使用してください。
IncludedModelNameIsBlankErrorMessage.StrongMessage=モデル名は空白にできません。
IncludedModelNameIsBlankErrorMessage.RegularMessage=モデル名を入力してください
DMNCardsEmptyStateView.Title=外部 DMN モデルは含まれていません。
DMNCardsEmptyStateView.Subtitle=外部モデルをこの DMN ファイルに追加するには、Include Model をクリックします。
YearsMonthsSelectorView.Months=月
YearsMonthsSelectorView.Years=年
YearsMonthsSelectorView.MonthsAbbreviated=月
YearsMonthsSelectorView.YearsAbbreviated=年
DayTimeValueConverter.Days=日
DayTimeValueConverter.Hours=時間
DayTimeValueConverter.Minutes=分
DayTimeValueConverter.Seconds=秒
DayTimeValueConverter.Day=日
DayTimeValueConverter.Hour=時間
DayTimeValueConverter.Minute=分
DayTimeValueConverter.Second=秒
DayTimeSelectorView.Days=日
DayTimeSelectorView.Hours=時間
DayTimeSelectorView.Minutes=分
DayTimeSelectorView.Seconds=秒
TimeSelectorView.None=なし
TimeSelectorView.SelectTimeZone=タイムゾーンの選択
TimeSelectorView.SelectUTCOffset=UTC オフセットの選択
IncludedModelModalView.Header=モデルを追加
IncludedModelModalView.Description=プロジェクトディレクトリーに追加されたモデルは、この DMN ファイルに含まれている場合があります。含まれている DMN モデルのデシジョン要件ダイアグラムコンポーネントは、この DMN ファイルで利用可能となります。PMML モデルは、DMN 関数を介して呼び出すことができます。
IncludedModelModalView.DMNModelsLabel=モデル
IncludedModelModalView.UniqueNameLabel=一意名を指定
IncludedModelModalView.Include=含める
IncludedModelModalView.Cancel=キャンセル
DecisionComponentsView.FilterBy=フィルター条件
DecisionComponentsView.Decision=デシジョン
DecisionComponentsView.BusinessKnowledgeModel=ビジネスナレッジモデル
DecisionComponentsView.InputData=入力データ
DecisionComponentsView.DecisionService=デシジョンサービス
DecisionComponentsView.KnowledgeSource=ナレッジソース
DecisionComponentsView.AllIncludedComponents=含まれているコンポーネントすべて
DecisionComponentsView.EnterText=テキストの入力
DecisionComponentsView.EmptyStateTitle=外部 DMN モデルは含まれていません。
DecisionComponentsView.EmptyStateDescription=この DMN ファイルに外部モデルを追加するには、「Include Models」タブに移動して、モデルを追加します。
DecisionNavigatorView.DecisionGraphs=デシジョングラフ
DecisionNavigatorView.DecisionComponents=デシジョンコンポーネント
DecisionComponentsItemView.DuplicatedNode=外部コンポーネントがすでに DMN ファイルに存在しており、再度追加できません。
LiteralExpressionPMMLDocumentEditorDefinition.Placeholder=まず PMML ドキュメントを選択します
LiteralExpressionPMMLDocumentModelEditorDefinition.Placeholder=2 番目に PMML モデルを選択します
DMNDocumentationI18n.DmnModelDocumentation=DMN モデルのドキュメント
DMNDocumentationI18n.GeneratedOn=生成日:
DMNDocumentationI18n.GeneratedBy=生成者:
DMNDocumentationI18n.GeneratedFrom=生成元:
DMNDocumentationI18n.Namespace=名前空間:
DMNDocumentationI18n.TableOfContents=目次
DMNDocumentationI18n.DmnModel=DMN モデル
DMNDocumentationI18n.DataTypes=データタイプ
DMNDocumentationI18n.DrdComponents=DRD コンポーネント
DMNDocumentationI18n.NoDataTypes=データタイプがありません。
DMNDocumentationI18n.NoExternalLinks=関連リンクがありません。
DMNDocumentationI18n.ExternalLinks=関連リンク:
DMNDocumentationI18n.NoDRDs=DRD コンポーネントがありません。
DMNDocumentationI18n.DiagramDoesNotHaveElements=ダイアグラムには要素がありません。
DMNDocumentationI18n.Add=追加
DMNDocumentationI18n.None=なし
DMNDocumentationI18n.Name=名前の添付
DMNDocumentationI18n.URL=URL
DMNDocumentationI18n.NamePlaceholder=入力
DMNDocumentationI18n.URLPlaceholder=https://
DMNDocumentationI18n.Ok=OK
DMNDocumentationI18n.Cancel=キャンセル
DMNDocumentationI18n.AttachmentTip=.pdf。.doc、.jpeg、.xls
DMNDocumentationFactory.Constraints=制約:
DMNDocumentationFactory.ListYes=制限: Yes
DMNDocumentationFactory.Structure=Structure
DMNDocumentationView.Print=印刷
DMNPreviewDiagramDock.Title=エクスプローラーダイアグラム
DMNDocumentationView.DownloadHtmlFile=.HTML ファイルのダウンロード
ImportDataObjectModalView.Header=データオブジェクトのインポート
ImportDataObjectModalView.Note=注記:
ImportDataObjectModalView.NoteText=このアクションは 1 回限りのインポートです。データオブジェクトが更新された場合、変更をそれぞれのデータタイプに反映させるために再インポートする必要があります。
ImportDataObjectModalView.Cancel=キャンセル
ImportDataObjectModalView.Import=インポート
ImportDataObjectModalView.ClearSelection=選択のクリア
ImportDataObjectModalView.ProjectDataObjects=プロジェクトデータオブジェクト
ImportDataObjectModalView.DataTypeWithSameNameFound=同じ名前の DMN データタイプがすでに存在します。続行すると、上書きされます。
DRDActions.ContextMenu.Title=DRD アクション
DRDActions.ContextMenu.Actions.Create=作成
DRDActions.ContextMenu.Actions.AddTo=追加先
DRDActions.ContextMenu.Actions.Remove=削除
DRDNameChangerView.ReturnToDRGMessage=DRG の表示
DRDNameChangerView.DRDDescriptionMessage=(意思決定要件ダイアグラム)
DecisionServiceParameters.Inputs=入力データ
DecisionServiceParameters.Outputs=出力決定
DecisionServiceParameters.EncapsulatedDecisions=カプセル化された決定
ParameterGroup.None=なし

