#
# Copyright 2018 Red Hat, Inc. and/or its affiliates.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#       http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#
newScenarioSimulationDescription=テストシナリオ
selectImportFile=インポートするファイルを選択します。
importLabel=インポート
removeCollectionMainTitle=コレクションを削除
collectionError=コレクションのエラー
removeCollectionMainQuestion=コレクションを削除しますか?
factColumnHeader=ファクト
fieldColumnHeader=フィールド
contextColumnHeader=コンテキスト
addScenarioSimulation=テストシナリオを作成
scenarioSimulationEditorTitle=テストシナリオ
scenarioSimulationResourceTypeDescription=テストシナリオ
remove=削除
currentlyNotAvailable=現在ご利用いただけません
invalidDefinitionDisabled=無効な定義です。編集は無効となりました。
testTools=テストツール
testEditor=テストエディター
testReport=テストレポート
testToolsAddButton=データオブジェクトの挿入
testToolsAddButtonLabel=* データオブジェクトを選択するには、列全体の式の値が必要です。
scenarioCheatSheet=シナリオのチートシート
ruleCheatSheet1=はじめにテーブル内のセルを右クリックし、コンテキストメニューを使って新たなコラムと行を挿入します。
ruleCheatSheet2=個別のテストシナリオを定義する前に、各列のインスタンスとフィールドマッピングを設定します。ヘッダーセルを選択し、
ruleCheatSheet3=タブで必要なフィールドを選択します。クリック
ruleCheatSheet4=追加
ruleCheatSheet5=マッピングを選択します。
ruleCheatSheet6=続いて、テストシナリオを定義します。テーブルの各セルには、有効な式が含まれている必要があります。
ruleCheatSheet7=ルールベースのシナリオでは、以下の式がサポートされています。
ruleCheatSheet8=(または記号なし) 値が等しいことを指定します。これは各列のデフォルトのオペレーターで、テーブルの GIVEN セクションでサポートされている唯一のオペレーターです。
ruleCheatSheet9=値が等しくないことを指定します。このオペレーターは他のオペレーターと組み合わせることが可能です。
ruleCheatSheet10=比較を指定します: より小さい、より大きい、以下、以上。
ruleCheatSheet11=値1、値2、値3
ruleCheatSheet12=値のリストを指定します。もし
ruleCheatSheet13=1 つ以上の値が有効な場合は、
ruleCheatSheet14=シナリオの定義が true と評価されます。
ruleCheatSheet15=式1; 式2; 式3
ruleCheatSheet16=式のリストを指定します。もし
ruleCheatSheet17=すべての式が有効な場合は、
ruleCheatSheet18=シナリオの定義が true と評価されます。
ruleCheatSheet19=空の文字列を定義するには、以下を使用します
ruleCheatSheet20=null 値を定義するには、以下を使用します
ruleCheatSheet21=空のセルは評価が省略されます。
ruleCheatSheet22=式の例:
dmnCheatSheet1=はじめにテーブル内のセルを右クリックし、コンテキストメニューを使って、必要に応じて生成されたテーブルを修正します。
dmnCheatSheet2=個別のテストシナリオを定義する前に、各列のインスタンスとフィールドマッピングを確認します。変更が必要な場合は、 
dmnCheatSheet3=変更が必要な場合は、タブを使ってマッピングを更新します。
dmnCheatSheet4=続いて、テストシナリオを定義します。テーブルの各セルには、有効な式が含まれている必要があります。
dmnCheatSheet5=テーブルの GIVEN 部分にある値はリテラル式として評価されますが、EXPECT セクションの値は単項式として評価されます。これらの単項テストの正確性は、DMN 評価の結果を使用して確認されます。
dmnCheatSheet6=DMN ベースのシナリオでは、FEEL 式言語を使用します。サポートされるデータタイプは以下の通りです。
dmnCheatSheet7=数字
dmnCheatSheet8=文字列
dmnCheatSheet9=(文字列は引用符で区切る必要があります)、たとえば
dmnCheatSheet10=ブール値
dmnCheatSheet11=日付
dmnCheatSheet12=時間
dmnCheatSheet13=関数
dmnCheatSheet14=コンテキスト
dmnCheatSheet15=範囲
dmnCheatSheet16=一覧
dmnCheatSheet17=空のセルは評価が省略されます。
dmnCheatSheet18=EXPECT セクションでは、型は単にアサーションの結果としてのブール値である場合があり、? 識別子を使用してチェックする値にアクセスできます。
dmnCheatSheet19=期間 (日時)
dmnCheatSheet20=期間 (月日)
dmnCheatSheet21=ISO 8601 に従って表現
and=and
or=または
forExample=たとえば、
runScenarioSimulation=テストを実行する
insertValue=値を入力する
insertExpression=式を挿入する
defineValidType=有効なタイプを定義する
# Menus
expect=期待値
given=指定
scenario=シナリオ
background=背景セット
insertColumnLeft=左に列を挿入
insertLeftmostColumn=左端に列を挿入
insertColumnRight=右に列を挿入
insertRightmostColumn=右端に列を挿入
deleteColumn=列の削除
deleteInstance=インスタンスの削除
duplicateInstance=インスタンスを複製
prependRow=上端に行を挿入
appendRow=下端に行を挿入
insertRowAbove=行を上に挿入
insertRowBelow=行を下に挿入
deleteRow=行の削除
duplicateRow=行の重複
runSingleScenario=シナリオを実行
description=説明
# DeletePropertyConfirmPopup
deleteValues=値の削除
deleteScenarioMainTitle=シナリオの値を削除
deleteScenarioMainQuestion=シナリオの値を削除しますか?
deleteScenarioText1=このコラムには、この変更後にテストステートメントと一致しなくなり、削除されることになるシナリオ入力値が含まれています。
deleteScenarioTextQuestion=このコラムの全シナリオ値を本当に削除しますか?
deleteScenarioTextDanger=警告: この操作は元に戻せません。
# PreserveDeletePropertyConfirmPopup
preserveDeleteScenarioMainTitle=シナリオ値の保持または削除
preserveDeleteScenarioMainQuestion=シナリオの値を保持または削除しますか?
preserveDeleteScenarioText1=このコラムには、この変更後にテストステートメントと一致しなくなる可能性のあるシナリオ入力値が含まれています。
preserveDeleteScenarioTextQuestion=続行方法を選択してください:
preserveDeleteScenarioTextOption1=このコラムの既存のシナリオ値を保持する。
preserveDeleteScenarioTextOption2=この列のすべてのシナリオ値を削除します。
preserveValues=値の保持
# ChangeInstanceTypeConfirmPopup
changeType=タイプの変更
changeTypeMainTitle=インスタンスタイプの変更
changeTypeMainQuestion=インスタンスタイプを変更しますか?
changeTypeText1=このコラムは、この変更後にテストステートメントと一致しなくなり、削除されることになるプロパティーにマッピングされています。
changeTypeTextQuestion=このコラムを本当に削除しますか?
changeTypeTextDanger=警告: この操作は元に戻せません。
#
undo=元に戻す
redo=やり直す
#
sourceType=ソースタイプ
chooseDMN=DMN アセットを選択
chooseValidDMNAsset=リストから有効な DMN アセットを選択します
removeCollectionText1=このアクションでは、コレクション自体とコレクションからすべてのアイテムが削除されます。
removeCollectionQuestion=続行してコレクションを削除しますか?
removeCollectionWarningText=このアクションは取り消せません。
#
settings=設定
name=名前
type=タイプ
dmnPathErrorLabel=''{0}'' ファイルを見つけることができません。1 つ選択してください。
dmnPathErrorDetailedLabel=参照する DMN ファイル ''{0}'' は無効です。右側に、有効な DMN ファイルを指定して設定を更新してください。メッセージ: ''{1}''
missingSelectedType=選択したタイプがありません
missingDmnPath=DMN パスがありません
coverageReport=カバレッジレポート
uploadWarning=選択した CSV ファイルのヘッダーが変更されていないことを確認してください。そうしないと、スプレッドシートが正常にインポートされない場合があります。
chooseFile=アップロードするファイルを選択してください
importFailedMessage=誤ったヘッダーレイアウトの CSV ファイルがインポートされました。インポートされた CSV ファイルのヘッダーが変更されていないことを確認してください。
importErrorTitle=インポート時のエラー
executed=実行済み
notCovered=省略
decisionsEvaluated=テストシナリオ用に評価されたデシジョン
coverageNotSupportedForRule=カバレッジレポートは現在、ルールベースのテストシナリオではサポートされていません。
runATestToSeeCoverageReport=先にテストシナリオを実行してカバレッジレポートを表示してください。
running=実行中...
#
testToolsDescription=テストテンプレートを作成するには、以下の式エディターを使用して "Given" と "Expect" の各列を定義します。
testToolObjectSelectionTitle=データオブジェクトの選択
testToolObjectSelectionTooltip=データオブジェクトは、プロジェクトの指定されたパッケージ内の Java オブジェクトです。
testToolClearSelection=選択のクリア
simpleTypes=シンプルな型
complexTypes=複雑な型
complexCustomInstances=複雑なカスタムインスタンス
simpleCustomInstances=シンプルなカスタムインスタンス
dataObjectInstances=データオブジェクトインスタンス
reportAvailableLabel=利用可能なデシジョン:
reportExecutedLabel=テスト済みのデシジョン:
reportCoverageLabel=テスト済みのデシジョンの割合:
numberOfTimesDecisionEvaluated=各デシジョンが評価された回数
skipSimulation=テスト中にこのシミュレーションをスキップ
downloadReportLabel=レポートをダウンロード
#
export=エクスポート
errorReason=エラーの理由
keep=保持
close=閉じる
apply=適用
errorPopoverMessageFailedWithError=想定される値は {0} ですが、実際の値は {1} となっています。
errorPopoverMessageFailedWithException=エラーメッセージ: {0}
errorPopoverGenericCollectionErrorMessage=コレクションでこの条件を満たす要素を見つけることができません。
errorPopoverCollectionHTMLFailureMessage=失敗: {0}
errorPopoverCollectionHTMLField=フィールド: {0}
errorPopoverCollectionHTMLValue=値: {0}
dateFormatPlaceholder=日付を yyyy-mm-dd 形式で入力してください
dateTimeFormatPlaceholder=日時を yyyy-mm-ddThh:mm:ss として挿入します
timeFormatPlaceholder=時間を hh:mm:ss として挿入します
dmnDateFormatPlaceholder=日付を入力してください ("yyyy-mm-dd" 形式)
rulesFired=テストシナリオに対して実行されたルール
numberOfTimesRulesFired=各ルールが実行された回数
reportAvailableRuleLabel=利用可能なルール:
reportExecutedRuleLabel=実行されたルール:
reportCoverageRuleLabel=実行されたルールの割合:
noDecisionsAvailable=利用可能なデシジョンがない場合、カバレッジレポートを生成できません。
noRulesAvailable=利用可能なルールがない場合、カバレッジレポートを生成できません。

headerTitleEmptyError=空のタイトルを割り当てることはできません!
instanceTitleAssignedError=タイトル ''{0}'' のインスタンスは、現在のグループ内ですでに使用されています
instanceTitleWithPeriodsError=インスタンスエイリアスには、ピリオドを含めることはできません!
propertyTitleAssignedError=タイトル ''{0}'' のプロパティーは、現在のインスタンス内ですでに使用されています
propertyTitleWithPeriodsError=プロパティーエイリアスには、ピリオドを含めることはできません!
validationErrorMessage=これらの列の背後のデータ構造は変更されており、修正する必要があります
validationErrorTitle=間違った列のマッピング
validationFailedNotification=検証することができません。プロジェクトビルドのコンパイルエラーを確認してください
validationSucceed=検証が正常に行われました
loadContentFailedNotification=ファイルを読み込めません。エラー:

backgroundTabTitle=背景セット
backgroundErrorNotification=背景データにエラーがあります。確認してください。
ruleCheatSheet23=MVEL 式を指定する (または Java メソッドを呼び出す) には、式の先頭に # を入力します。GIVEN セクションでは、式の戻り値の型は列の型と同じでなければなりません。EXPECT セクションでは、型は単にアサーションの結果としてのブール値である場合があり、actualValue 識別子を使用してチェックする値にアクセスできます。
commonCheatSheetBackground=同じ GIVEN データが複数のテストシナリオで共有されている場合、{0} タブを使用してそれらを一度だけ定義できます。{0} タブで列を作成する方法は、{1} タブの場合と同じです。

ruleScenarioNotSupportedNotification=RULE テストシナリオは現在サポートされていません

createButton=作成
saveButton=保存
removeButton=削除
cancelButton=キャンセル
item=アイテム
collectionEditorAddNewItem=新規アイテムの追加
addNewListItem=リスト値の追加
addNewMapItem=マップ値の追加
createLabelList=リストの作成
createLabelMap=マップの作成
defineLabelList=リストの定義
defineLabelMap=マップの定義
collectionListCreation=このデータオブジェクトのリスト値の定義
collectionMapCreation=このデータオブジェクトのマップ値の定義
createLabelListDescription= - ガイド付きフォームを使用してリストを作成する
defineLabelListDescription= - 式を使用してリストを定義する
defineLabelMapDescription= - 式を使用してマップを定義する
createLabelMapDescription= - ガイド付きフォームを使用してマップを作成する

scenarioValidationNodeChangedError=ノードタイプが変更されました: old ''{0}'', current ''{1}''
scenarioValidationFieldChangedError=フィールドタイプが変更されました: old ''{0}'', current ''{1}''
scenarioValidationFieldAddedConstraintError=このタイプに制約が追加されました。これには、関連する列を再定義する必要があります。
scenarioValidationFieldRemovedConstraintError=このタイプの制約が削除されました。これには、関連する列を再定義する必要があります。