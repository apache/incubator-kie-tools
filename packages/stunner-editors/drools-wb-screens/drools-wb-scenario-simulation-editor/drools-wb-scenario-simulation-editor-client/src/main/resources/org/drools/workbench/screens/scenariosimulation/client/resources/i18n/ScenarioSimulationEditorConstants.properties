#
# Copyright 2018 Red Hat, Inc. and/or its affiliates.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#       http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#
newScenarioSimulationDescription=Test Scenario
selectImportFile=Select file to import.
importLabel=Import
removeCollectionMainTitle=Remove collection
collectionError=Collection Error
removeCollectionMainQuestion=Remove the collection?
factColumnHeader=Fact
fieldColumnHeader=Field
contextColumnHeader=Context
addScenarioSimulation=Create Test Scenario
scenarioSimulationEditorTitle=Test Scenarios
scenarioSimulationResourceTypeDescription=Test Scenarios
remove=Remove
currentlyNotAvailable=Currently not available
invalidDefinitionDisabled=Invalid definition. Editing is disabled.
testTools=Test Tools
testEditor=Test Editor
testReport=Test Report
testToolsAddButton=Insert Data Object
testToolsAddButtonLabel=* Selecting a Data Object will require an expression value for the entire column.
scenarioCheatSheet=Scenario Cheatsheet
ruleCheatSheet1=To start off, right-click a cell in the table and use the contextual menus to insert new columns and rows.
ruleCheatSheet2=Before defining the individual test scenarios, set the instance and field mappings for each column. Select a header cell and in the
ruleCheatSheet3=tab, choose the required field. Click
ruleCheatSheet4=Add
ruleCheatSheet5=to set the mapping.
ruleCheatSheet6=Now, define the test scenarios. Each cell of the table must contain a valid expression.
ruleCheatSheet7=In rule-based scenarios, the following expressions are supported:
ruleCheatSheet8=(or no symbol) specifies equality of a value. This is the default operator of each column and the only operator that is supported in the GIVEN section of the table.
ruleCheatSheet9=specify inequality of a value. This operator can be combined with other operators.
ruleCheatSheet10=specify a comparison: less than, greater than, less or equals than, and greater or equals than.
ruleCheatSheet11=value1, value2, value3
ruleCheatSheet12=specifies a list of values. If
ruleCheatSheet13=one or more
ruleCheatSheet14=values are valid, the scenario definition is evaluated as true.
ruleCheatSheet15=expression1; expression2; expression3
ruleCheatSheet16=specifies a list of expressions. If
ruleCheatSheet17=all
ruleCheatSheet18=expressions are valid, the scenario definition is evaluated as true.
ruleCheatSheet19=To define an empty string, use
ruleCheatSheet20=To define a null value, use
ruleCheatSheet21=An empty cell is skipped from the evaluation.
ruleCheatSheet22=Example expressions:
dmnCheatSheet1=To start off, right-click a cell in the table and use the contextual menus to modify the generated table as required.
dmnCheatSheet2=Before defining the individual test scenarios, verify the instance and field mappings for each column. If any changes are necessary, use the 
dmnCheatSheet3=tab to update the mapping.
dmnCheatSheet4=Now, define the test scenarios. Each cell of the table must contain a valid expression.
dmnCheatSheet5=Values in the GIVEN part of the table are evaluated as literal expressions, whereas values in the EXPECT section are evaluated as unary expressions. The correctness of these unary tests is verified using the results from a DMN evaluation.
dmnCheatSheet6=DMN-based scenarios use the FEEL expression language. Supported data types are:
dmnCheatSheet7=numbers
dmnCheatSheet8=strings
dmnCheatSheet9=(strings must be delimited by quotation marks), for example
dmnCheatSheet10=boolean values
dmnCheatSheet11=dates
dmnCheatSheet12=time
dmnCheatSheet13=functions
dmnCheatSheet14=contexts
dmnCheatSheet15=ranges
dmnCheatSheet16=lists
dmnCheatSheet17=An empty cell is skipped from the evaluation.
dmnCheatSheet18=In EXPECT section the type could also just a boolean with the result of the assertion and you can use ? identifier to access value to check.
dmnCheatSheet19=Days and time duration
dmnCheatSheet20=Years and months duration
dmnCheatSheet21=expressed according to ISO 8601
and=and
or=or
forExample=, for example
runScenarioSimulation=Run Test
insertValue=Insert value
insertExpression=Insert expression
defineValidType=Define valid type
# Menus
expect=Expect
given=Given
scenario=Scenario
background=Background
insertColumnLeft=Insert column left
insertLeftmostColumn=Insert leftmost column
insertColumnRight=Insert column right
insertRightmostColumn=Insert rightmost column
deleteColumn=Delete column
deleteInstance=Delete Instance
duplicateInstance=Duplicate instance
prependRow=Insert top row
appendRow=Insert bottom row
insertRowAbove=Insert row above
insertRowBelow=Insert row below
deleteRow=Delete row
duplicateRow=Duplicate row
runSingleScenario=Run scenario
description=Description
# DeletePropertyConfirmPopup
deleteValues=Delete Values
deleteScenarioMainTitle=Delete scenario values
deleteScenarioMainQuestion=Delete scenario values?
deleteScenarioText1=This column contains scenario input values that will not correspond with the test statement after this change and will therefore be deleted.
deleteScenarioTextQuestion=Do you want to continue and delete all scenario values in this column?
deleteScenarioTextDanger=Warning: This action cannot be undone.
# PreserveDeletePropertyConfirmPopup
preserveDeleteScenarioMainTitle=Preserve or delete scenario values
preserveDeleteScenarioMainQuestion=Preserve or delete scenario values?
preserveDeleteScenarioText1=This column contains scenario input values that might not correspond with the test statement after this change.
preserveDeleteScenarioTextQuestion=Select how you want to continue:
preserveDeleteScenarioTextOption1=Preserve existing scenario values in this column.
preserveDeleteScenarioTextOption2=Delete all scenario values in this column.
preserveValues=Preserve Values
# ChangeInstanceTypeConfirmPopup
changeType=Change Type
changeTypeMainTitle=Change instance type
changeTypeMainQuestion=Change instance type?
changeTypeText1=This column is mapped to a property that will not correspond with the test statement after this change and will therefore be deleted.
changeTypeTextQuestion=Do you want to continue and delete this column?
changeTypeTextDanger=Warning: This action cannot be undone.
#
undo=Undo
redo=Redo
#
sourceType=Source type
chooseDMN=Choose a DMN asset
chooseValidDMNAsset=Choose a valid DMN asset from the list
removeCollectionText1=This action will remove all items from the collection and the collection itself.
removeCollectionQuestion=Do you want to continue and remove the collection?
removeCollectionWarningText=This action cannot be undone.
#
settings=Settings
name=Name
type=Type
dmnPathErrorLabel=Impossible to find ''{0}'' file. Please select one.
dmnPathErrorDetailedLabel=Referred DMN file ''{0}'' is invalid or not present. Please provide a valid DMN file and update Settings dock in the right. Message: ''{1}''
missingSelectedType=Missing selected type
missingDmnPath=Missing DMN path
coverageReport=Coverage Report
uploadWarning=Make sure the headers in the selected CSV file have not been modified. Otherwise, the spreadsheet may not be successfully imported.
chooseFile=Please select file to upload
importFailedMessage=A CSV file with an incorrect header layout has been imported. Make sure the imported CSV file has unmodified headers.
importErrorTitle=Error during import
executed=Executed
notCovered=Omitted
decisionsEvaluated=Decisions evaluated for test scenario
coverageNotSupportedForRule=The coverage report is currently not supported for rule-based test scenarios.
runATestToSeeCoverageReport=Execute the test scenarios first to see the coverage report.
running=Running...
#
testToolsDescription=To create a test template, define the "Given" and "Expect" columns by using the expression editor below.
testToolObjectSelectionTitle=Select Data Object
testToolObjectSelectionTooltip=Data objects are the java objects in specified packages of your project.
testToolClearSelection=Clear selection
simpleTypes=Simple Types
complexTypes=Complex Types
complexCustomInstances=Complex Custom Instances
simpleCustomInstances=Simple Custom Instances
dataObjectInstances=Data Object Instances
reportAvailableLabel=Available decisions:
reportExecutedLabel=Tested decisions:
reportCoverageLabel=Percentage of decisions tested:
numberOfTimesDecisionEvaluated=A number of times each decision has been evaluated:
skipSimulation=Skip this simulation during the test
downloadReportLabel=Download report
#
export=Export
errorReason=Error reason
keep=Keep
close=Close
apply=Apply
errorPopoverMessageFailedWithError=The expected value is {0} but the actual one is {1}.
errorPopoverMessageFailedWithException=Error message: {0}
errorPopoverGenericCollectionErrorMessage=Impossible to find elements in the collection to satisfy the conditions.
errorPopoverCollectionHTMLFailureMessage=Failed in: {0}
errorPopoverCollectionHTMLField=Field: {0}
errorPopoverCollectionHTMLValue=Value: {0}
dateFormatPlaceholder=Insert date as yyyy-mm-dd
dateTimeFormatPlaceholder=Insert datetime as yyyy-mm-ddThh:mm:ss
timeFormatPlaceholder=Insert time as hh:mm:ss
dmnDateFormatPlaceholder=Insert date as date("yyyy-mm-dd")
rulesFired=Rules fired for test scenario
numberOfTimesRulesFired=A number of times each rule has been fired:
reportAvailableRuleLabel=Available rules:
reportExecutedRuleLabel=Fired rules:
reportCoverageRuleLabel=Percentage of rules fired:
noDecisionsAvailable=A coverage report cannot be generated when no decisions are available.
noRulesAvailable=A coverage report cannot be generated when no rules are available.

headerTitleEmptyError=Not possible to assign an empty title!
instanceTitleAssignedError=An instance with title ''{0}'' has already been used inside the current group
instanceTitleWithPeriodsError=An instance alias cannot contain periods!
propertyTitleAssignedError=A property with title ''{0}'' has already been used inside the current instance
propertyTitleWithPeriodsError=A property alias cannot contain periods!
validationErrorMessage=The data structure behind these columns has changed and need to be fixed
validationErrorTitle=Wrong column mapping
validationFailedNotification=Impossible to validate. Please verify project build compilation errors
validationSucceed=Validation Succeed
loadContentFailedNotification=Impossible to load file. Error: 

backgroundTabTitle=Background
backgroundErrorNotification=There are errors in Background data, please have a look
ruleCheatSheet23=To specify a MVEL expression (or invoke a Java method) just put # at the beginning of the expression. In GIVEN section, return type of the expression has to be the same one of type of the column. In EXPECT section the type could also just a boolean with the result of the assertion and you can use actualValue identifier to access value to check.
commonCheatSheetBackground=If the same GIVEN data is shared with the multiple test scenarios, you can use the {0} tab to define them only once. The way to create a column in the {0} tab is the same as of the {1} tab.

ruleScenarioNotSupportedNotification=RULE Test Scenario is currently not supported

createButton=Create
saveButton=Save
removeButton=Remove
cancelButton=Cancel
item=Item
collectionEditorAddNewItem=Add new item
addNewListItem=Add list value
addNewMapItem=Add map value
createLabelList=Create List
createLabelMap=Create Map
defineLabelList=Define List
defineLabelMap=Define Map
collectionListCreation=Define the list values for this data object
collectionMapCreation=Define the map values for this data object
createLabelListDescription= - create a list using a guided form
defineLabelListDescription= - define a list using an expression
defineLabelMapDescription= - define a map using an expression
createLabelMapDescription= - create a map using a guided form

scenarioValidationNodeChangedError=Node type has changed: old ''{0}'', current ''{1}''
scenarioValidationFieldChangedError=Field type has changed: old ''{0}'', current ''{1}''
scenarioValidationFieldAddedConstraintError=A constraint has been added for this type. This requires to redefine its related column.
scenarioValidationFieldRemovedConstraintError=A constraint has been removed for this type. This requires to redefine its related column.
