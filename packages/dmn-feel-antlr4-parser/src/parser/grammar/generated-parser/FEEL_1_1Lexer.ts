/*
 * Licensed to the Apache Software Foundation (ASF) under one
 * or more contributor license agreements.  See the NOTICE file
 * distributed with this work for additional information
 * regarding copyright ownership.  The ASF licenses this file
 * to you under the Apache License, Version 2.0 (the
 * "License"); you may not use this file except in compliance
 * with the License.  You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing,
 * software distributed under the License is distributed on an
 * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
 * KIND, either express or implied.  See the License for the
 * specific language governing permissions and limitations
 * under the License.
 */

// Generated from FEEL_1_1.g4 by ANTLR 4.13.0
// noinspection ES6UnusedImports,JSUnusedGlobalSymbols,JSUnusedLocalSymbols
import {
  ATN,
  ATNDeserializer,
  CharStream,
  DecisionState,
  DFA,
  Lexer,
  LexerATNSimulator,
  RuleContext,
  PredictionContextCache,
  Token,
} from "antlr4";
export default class FEEL_1_1Lexer extends Lexer {
  public static readonly BooleanLiteral = 1;
  public static readonly FOR = 2;
  public static readonly RETURN = 3;
  public static readonly IN = 4;
  public static readonly IF = 5;
  public static readonly THEN = 6;
  public static readonly ELSE = 7;
  public static readonly SOME = 8;
  public static readonly EVERY = 9;
  public static readonly SATISFIES = 10;
  public static readonly INSTANCE = 11;
  public static readonly OF = 12;
  public static readonly FUNCTION = 13;
  public static readonly EXTERNAL = 14;
  public static readonly OR = 15;
  public static readonly AND = 16;
  public static readonly BETWEEN = 17;
  public static readonly NULL = 18;
  public static readonly TRUE = 19;
  public static readonly FALSE = 20;
  public static readonly QUOTE = 21;
  public static readonly IntegerLiteral = 22;
  public static readonly FloatingPointLiteral = 23;
  public static readonly StringLiteral = 24;
  public static readonly LPAREN = 25;
  public static readonly RPAREN = 26;
  public static readonly LBRACE = 27;
  public static readonly RBRACE = 28;
  public static readonly LBRACK = 29;
  public static readonly RBRACK = 30;
  public static readonly COMMA = 31;
  public static readonly ELIPSIS = 32;
  public static readonly DOT = 33;
  public static readonly EQUAL = 34;
  public static readonly GT = 35;
  public static readonly LT = 36;
  public static readonly LE = 37;
  public static readonly GE = 38;
  public static readonly NOTEQUAL = 39;
  public static readonly COLON = 40;
  public static readonly RARROW = 41;
  public static readonly POW = 42;
  public static readonly ADD = 43;
  public static readonly SUB = 44;
  public static readonly MUL = 45;
  public static readonly DIV = 46;
  public static readonly BANG = 47;
  public static readonly NOT = 48;
  public static readonly AT = 49;
  public static readonly Identifier = 50;
  public static readonly WS = 51;
  public static readonly COMMENT = 52;
  public static readonly LINE_COMMENT = 53;
  public static readonly ANY_OTHER_CHAR = 54;
  public static readonly EOF = Token.EOF;

  public static readonly channelNames: string[] = ["DEFAULT_TOKEN_CHANNEL", "HIDDEN"];
  public static readonly literalNames: (string | null)[] = [
    null,
    null,
    "'for'",
    "'return'",
    "'in'",
    "'if'",
    "'then'",
    "'else'",
    "'some'",
    "'every'",
    "'satisfies'",
    "'instance'",
    "'of'",
    "'function'",
    "'external'",
    "'or'",
    "'and'",
    "'between'",
    "'null'",
    "'true'",
    "'false'",
    "'''",
    null,
    null,
    null,
    "'('",
    "')'",
    "'{'",
    "'}'",
    "'['",
    "']'",
    "','",
    "'..'",
    "'.'",
    "'='",
    "'>'",
    "'<'",
    "'<='",
    "'>='",
    "'!='",
    "':'",
    "'->'",
    "'**'",
    "'+'",
    "'-'",
    "'*'",
    "'/'",
    "'!'",
    "'not'",
    "'@'",
  ];
  public static readonly symbolicNames: (string | null)[] = [
    null,
    "BooleanLiteral",
    "FOR",
    "RETURN",
    "IN",
    "IF",
    "THEN",
    "ELSE",
    "SOME",
    "EVERY",
    "SATISFIES",
    "INSTANCE",
    "OF",
    "FUNCTION",
    "EXTERNAL",
    "OR",
    "AND",
    "BETWEEN",
    "NULL",
    "TRUE",
    "FALSE",
    "QUOTE",
    "IntegerLiteral",
    "FloatingPointLiteral",
    "StringLiteral",
    "LPAREN",
    "RPAREN",
    "LBRACE",
    "RBRACE",
    "LBRACK",
    "RBRACK",
    "COMMA",
    "ELIPSIS",
    "DOT",
    "EQUAL",
    "GT",
    "LT",
    "LE",
    "GE",
    "NOTEQUAL",
    "COLON",
    "RARROW",
    "POW",
    "ADD",
    "SUB",
    "MUL",
    "DIV",
    "BANG",
    "NOT",
    "AT",
    "Identifier",
    "WS",
    "COMMENT",
    "LINE_COMMENT",
    "ANY_OTHER_CHAR",
  ];
  public static readonly modeNames: string[] = ["DEFAULT_MODE"];

  public static readonly ruleNames: string[] = [
    "BooleanLiteral",
    "FOR",
    "RETURN",
    "IN",
    "IF",
    "THEN",
    "ELSE",
    "SOME",
    "EVERY",
    "SATISFIES",
    "INSTANCE",
    "OF",
    "FUNCTION",
    "EXTERNAL",
    "OR",
    "AND",
    "BETWEEN",
    "NULL",
    "TRUE",
    "FALSE",
    "QUOTE",
    "IntegerLiteral",
    "DecimalIntegerLiteral",
    "HexIntegerLiteral",
    "IntegerTypeSuffix",
    "DecimalNumeral",
    "Digits",
    "Digit",
    "NonZeroDigit",
    "DigitsAndUnderscores",
    "DigitOrUnderscore",
    "Underscores",
    "HexNumeral",
    "HexDigits",
    "HexDigit",
    "HexDigitsAndUnderscores",
    "HexDigitOrUnderscore",
    "FloatingPointLiteral",
    "DecimalFloatingPointLiteral",
    "ExponentPart",
    "ExponentIndicator",
    "SignedInteger",
    "Sign",
    "FloatTypeSuffix",
    "HexadecimalFloatingPointLiteral",
    "HexSignificand",
    "BinaryExponent",
    "BinaryExponentIndicator",
    "StringLiteral",
    "StringCharacters",
    "StringCharacter",
    "EscapeSequence",
    "ZeroToThree",
    "UnicodeEscape",
    "LPAREN",
    "RPAREN",
    "LBRACE",
    "RBRACE",
    "LBRACK",
    "RBRACK",
    "COMMA",
    "ELIPSIS",
    "DOT",
    "EQUAL",
    "GT",
    "LT",
    "LE",
    "GE",
    "NOTEQUAL",
    "COLON",
    "RARROW",
    "POW",
    "ADD",
    "SUB",
    "MUL",
    "DIV",
    "BANG",
    "NOT",
    "AT",
    "Identifier",
    "NameStartChar",
    "NameStartCharOrPart",
    "WS",
    "COMMENT",
    "LINE_COMMENT",
    "ANY_OTHER_CHAR",
  ];

  constructor(input: CharStream) {
    super(input);
    this._interp = new LexerATNSimulator(
      this,
      FEEL_1_1Lexer._ATN,
      FEEL_1_1Lexer.DecisionsToDFA,
      new PredictionContextCache()
    );
  }

  public get grammarFileName(): string {
    return "FEEL_1_1.g4";
  }

  public get literalNames(): (string | null)[] {
    return FEEL_1_1Lexer.literalNames;
  }
  public get symbolicNames(): (string | null)[] {
    return FEEL_1_1Lexer.symbolicNames;
  }
  public get ruleNames(): string[] {
    return FEEL_1_1Lexer.ruleNames;
  }

  public get serializedATN(): number[] {
    return FEEL_1_1Lexer._serializedATN;
  }

  public get channelNames(): string[] {
    return FEEL_1_1Lexer.channelNames;
  }

  public get modeNames(): string[] {
    return FEEL_1_1Lexer.modeNames;
  }

  public static readonly _serializedATN: number[] = [
    4, 0, 54, 571, 6, -1, 2, 0, 7, 0, 2, 1, 7, 1, 2, 2, 7, 2, 2, 3, 7, 3, 2, 4, 7, 4, 2, 5, 7, 5, 2, 6, 7, 6, 2, 7, 7,
    7, 2, 8, 7, 8, 2, 9, 7, 9, 2, 10, 7, 10, 2, 11, 7, 11, 2, 12, 7, 12, 2, 13, 7, 13, 2, 14, 7, 14, 2, 15, 7, 15, 2,
    16, 7, 16, 2, 17, 7, 17, 2, 18, 7, 18, 2, 19, 7, 19, 2, 20, 7, 20, 2, 21, 7, 21, 2, 22, 7, 22, 2, 23, 7, 23, 2, 24,
    7, 24, 2, 25, 7, 25, 2, 26, 7, 26, 2, 27, 7, 27, 2, 28, 7, 28, 2, 29, 7, 29, 2, 30, 7, 30, 2, 31, 7, 31, 2, 32, 7,
    32, 2, 33, 7, 33, 2, 34, 7, 34, 2, 35, 7, 35, 2, 36, 7, 36, 2, 37, 7, 37, 2, 38, 7, 38, 2, 39, 7, 39, 2, 40, 7, 40,
    2, 41, 7, 41, 2, 42, 7, 42, 2, 43, 7, 43, 2, 44, 7, 44, 2, 45, 7, 45, 2, 46, 7, 46, 2, 47, 7, 47, 2, 48, 7, 48, 2,
    49, 7, 49, 2, 50, 7, 50, 2, 51, 7, 51, 2, 52, 7, 52, 2, 53, 7, 53, 2, 54, 7, 54, 2, 55, 7, 55, 2, 56, 7, 56, 2, 57,
    7, 57, 2, 58, 7, 58, 2, 59, 7, 59, 2, 60, 7, 60, 2, 61, 7, 61, 2, 62, 7, 62, 2, 63, 7, 63, 2, 64, 7, 64, 2, 65, 7,
    65, 2, 66, 7, 66, 2, 67, 7, 67, 2, 68, 7, 68, 2, 69, 7, 69, 2, 70, 7, 70, 2, 71, 7, 71, 2, 72, 7, 72, 2, 73, 7, 73,
    2, 74, 7, 74, 2, 75, 7, 75, 2, 76, 7, 76, 2, 77, 7, 77, 2, 78, 7, 78, 2, 79, 7, 79, 2, 80, 7, 80, 2, 81, 7, 81, 2,
    82, 7, 82, 2, 83, 7, 83, 2, 84, 7, 84, 2, 85, 7, 85, 1, 0, 1, 0, 3, 0, 176, 8, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 1,
    2, 1, 2, 1, 2, 1, 2, 1, 2, 1, 2, 1, 3, 1, 3, 1, 3, 1, 4, 1, 4, 1, 4, 1, 5, 1, 5, 1, 5, 1, 5, 1, 5, 1, 6, 1, 6, 1, 6,
    1, 6, 1, 6, 1, 7, 1, 7, 1, 7, 1, 7, 1, 7, 1, 8, 1, 8, 1, 8, 1, 8, 1, 8, 1, 8, 1, 9, 1, 9, 1, 9, 1, 9, 1, 9, 1, 9, 1,
    9, 1, 9, 1, 9, 1, 9, 1, 10, 1, 10, 1, 10, 1, 10, 1, 10, 1, 10, 1, 10, 1, 10, 1, 10, 1, 11, 1, 11, 1, 11, 1, 12, 1,
    12, 1, 12, 1, 12, 1, 12, 1, 12, 1, 12, 1, 12, 1, 12, 1, 13, 1, 13, 1, 13, 1, 13, 1, 13, 1, 13, 1, 13, 1, 13, 1, 13,
    1, 14, 1, 14, 1, 14, 1, 15, 1, 15, 1, 15, 1, 15, 1, 16, 1, 16, 1, 16, 1, 16, 1, 16, 1, 16, 1, 16, 1, 16, 1, 17, 1,
    17, 1, 17, 1, 17, 1, 17, 1, 18, 1, 18, 1, 18, 1, 18, 1, 18, 1, 19, 1, 19, 1, 19, 1, 19, 1, 19, 1, 19, 1, 20, 1, 20,
    1, 21, 1, 21, 3, 21, 291, 8, 21, 1, 22, 1, 22, 3, 22, 295, 8, 22, 1, 23, 1, 23, 3, 23, 299, 8, 23, 1, 24, 1, 24, 1,
    25, 1, 25, 3, 25, 305, 8, 25, 1, 25, 1, 25, 1, 25, 3, 25, 310, 8, 25, 1, 26, 1, 26, 3, 26, 314, 8, 26, 1, 26, 3, 26,
    317, 8, 26, 1, 27, 1, 27, 1, 28, 1, 28, 1, 29, 4, 29, 324, 8, 29, 11, 29, 12, 29, 325, 1, 30, 1, 30, 3, 30, 330, 8,
    30, 1, 31, 4, 31, 333, 8, 31, 11, 31, 12, 31, 334, 1, 32, 1, 32, 1, 32, 1, 32, 1, 33, 1, 33, 3, 33, 343, 8, 33, 1,
    33, 3, 33, 346, 8, 33, 1, 34, 1, 34, 1, 35, 4, 35, 351, 8, 35, 11, 35, 12, 35, 352, 1, 36, 1, 36, 3, 36, 357, 8, 36,
    1, 37, 1, 37, 3, 37, 361, 8, 37, 1, 38, 1, 38, 1, 38, 1, 38, 3, 38, 367, 8, 38, 1, 38, 3, 38, 370, 8, 38, 1, 38, 1,
    38, 1, 38, 3, 38, 375, 8, 38, 1, 38, 3, 38, 378, 8, 38, 1, 38, 1, 38, 1, 38, 3, 38, 383, 8, 38, 1, 38, 1, 38, 1, 38,
    3, 38, 388, 8, 38, 1, 39, 1, 39, 1, 39, 1, 40, 1, 40, 1, 41, 3, 41, 396, 8, 41, 1, 41, 1, 41, 1, 42, 1, 42, 1, 43,
    1, 43, 1, 44, 1, 44, 1, 44, 3, 44, 407, 8, 44, 1, 45, 1, 45, 3, 45, 411, 8, 45, 1, 45, 1, 45, 1, 45, 3, 45, 416, 8,
    45, 1, 45, 1, 45, 3, 45, 420, 8, 45, 1, 46, 1, 46, 1, 46, 1, 47, 1, 47, 1, 48, 1, 48, 3, 48, 429, 8, 48, 1, 48, 1,
    48, 1, 49, 4, 49, 434, 8, 49, 11, 49, 12, 49, 435, 1, 50, 1, 50, 3, 50, 440, 8, 50, 1, 51, 1, 51, 1, 51, 3, 51, 445,
    8, 51, 1, 52, 1, 52, 1, 53, 1, 53, 1, 53, 1, 53, 1, 53, 1, 53, 1, 53, 1, 53, 1, 53, 1, 53, 1, 53, 1, 53, 1, 53, 1,
    53, 1, 53, 1, 53, 3, 53, 465, 8, 53, 1, 54, 1, 54, 1, 55, 1, 55, 1, 56, 1, 56, 1, 57, 1, 57, 1, 58, 1, 58, 1, 59, 1,
    59, 1, 60, 1, 60, 1, 61, 1, 61, 1, 61, 1, 62, 1, 62, 1, 63, 1, 63, 1, 64, 1, 64, 1, 65, 1, 65, 1, 66, 1, 66, 1, 66,
    1, 67, 1, 67, 1, 67, 1, 68, 1, 68, 1, 68, 1, 69, 1, 69, 1, 70, 1, 70, 1, 70, 1, 71, 1, 71, 1, 71, 1, 72, 1, 72, 1,
    73, 1, 73, 1, 74, 1, 74, 1, 75, 1, 75, 1, 76, 1, 76, 1, 77, 1, 77, 1, 77, 1, 77, 1, 78, 1, 78, 1, 79, 1, 79, 5, 79,
    527, 8, 79, 10, 79, 12, 79, 530, 9, 79, 1, 80, 3, 80, 533, 8, 80, 1, 81, 3, 81, 536, 8, 81, 1, 82, 4, 82, 539, 8,
    82, 11, 82, 12, 82, 540, 1, 82, 1, 82, 1, 83, 1, 83, 1, 83, 1, 83, 5, 83, 549, 8, 83, 10, 83, 12, 83, 552, 9, 83, 1,
    83, 1, 83, 1, 83, 1, 83, 1, 83, 1, 84, 1, 84, 1, 84, 1, 84, 5, 84, 563, 8, 84, 10, 84, 12, 84, 566, 9, 84, 1, 84, 1,
    84, 1, 85, 1, 85, 1, 550, 0, 86, 1, 1, 3, 2, 5, 3, 7, 4, 9, 5, 11, 6, 13, 7, 15, 8, 17, 9, 19, 10, 21, 11, 23, 12,
    25, 13, 27, 14, 29, 15, 31, 16, 33, 17, 35, 18, 37, 19, 39, 20, 41, 21, 43, 22, 45, 0, 47, 0, 49, 0, 51, 0, 53, 0,
    55, 0, 57, 0, 59, 0, 61, 0, 63, 0, 65, 0, 67, 0, 69, 0, 71, 0, 73, 0, 75, 23, 77, 0, 79, 0, 81, 0, 83, 0, 85, 0, 87,
    0, 89, 0, 91, 0, 93, 0, 95, 0, 97, 24, 99, 0, 101, 0, 103, 0, 105, 0, 107, 0, 109, 25, 111, 26, 113, 27, 115, 28,
    117, 29, 119, 30, 121, 31, 123, 32, 125, 33, 127, 34, 129, 35, 131, 36, 133, 37, 135, 38, 137, 39, 139, 40, 141, 41,
    143, 42, 145, 43, 147, 44, 149, 45, 151, 46, 153, 47, 155, 48, 157, 49, 159, 50, 161, 0, 163, 0, 165, 51, 167, 52,
    169, 53, 171, 54, 1, 0, 17, 2, 0, 76, 76, 108, 108, 1, 0, 48, 57, 1, 0, 49, 57, 2, 0, 88, 88, 120, 120, 3, 0, 48,
    57, 65, 70, 97, 102, 2, 0, 69, 69, 101, 101, 2, 0, 43, 43, 45, 45, 4, 0, 68, 68, 70, 70, 100, 100, 102, 102, 2, 0,
    80, 80, 112, 112, 2, 0, 34, 34, 92, 92, 1, 0, 117, 117, 1, 0, 48, 51, 16, 0, 63, 63, 65, 90, 95, 95, 97, 122, 192,
    214, 216, 246, 248, 767, 880, 893, 895, 8191, 8204, 8205, 8304, 8591, 11264, 12271, 12289, 55295, 63744, 64975,
    65008, 65533, 65536, 983039, 18, 0, 48, 57, 63, 63, 65, 90, 95, 95, 97, 122, 183, 183, 192, 214, 216, 246, 248, 893,
    895, 8191, 8204, 8205, 8255, 8256, 8304, 8591, 11264, 12271, 12289, 55295, 63744, 64975, 65008, 65533, 65536,
    983039, 4, 0, 9, 10, 12, 13, 32, 32, 160, 160, 2, 0, 10, 10, 13, 13, 3, 0, 9, 10, 12, 13, 32, 32, 576, 0, 1, 1, 0,
    0, 0, 0, 3, 1, 0, 0, 0, 0, 5, 1, 0, 0, 0, 0, 7, 1, 0, 0, 0, 0, 9, 1, 0, 0, 0, 0, 11, 1, 0, 0, 0, 0, 13, 1, 0, 0, 0,
    0, 15, 1, 0, 0, 0, 0, 17, 1, 0, 0, 0, 0, 19, 1, 0, 0, 0, 0, 21, 1, 0, 0, 0, 0, 23, 1, 0, 0, 0, 0, 25, 1, 0, 0, 0, 0,
    27, 1, 0, 0, 0, 0, 29, 1, 0, 0, 0, 0, 31, 1, 0, 0, 0, 0, 33, 1, 0, 0, 0, 0, 35, 1, 0, 0, 0, 0, 37, 1, 0, 0, 0, 0,
    39, 1, 0, 0, 0, 0, 41, 1, 0, 0, 0, 0, 43, 1, 0, 0, 0, 0, 75, 1, 0, 0, 0, 0, 97, 1, 0, 0, 0, 0, 109, 1, 0, 0, 0, 0,
    111, 1, 0, 0, 0, 0, 113, 1, 0, 0, 0, 0, 115, 1, 0, 0, 0, 0, 117, 1, 0, 0, 0, 0, 119, 1, 0, 0, 0, 0, 121, 1, 0, 0, 0,
    0, 123, 1, 0, 0, 0, 0, 125, 1, 0, 0, 0, 0, 127, 1, 0, 0, 0, 0, 129, 1, 0, 0, 0, 0, 131, 1, 0, 0, 0, 0, 133, 1, 0, 0,
    0, 0, 135, 1, 0, 0, 0, 0, 137, 1, 0, 0, 0, 0, 139, 1, 0, 0, 0, 0, 141, 1, 0, 0, 0, 0, 143, 1, 0, 0, 0, 0, 145, 1, 0,
    0, 0, 0, 147, 1, 0, 0, 0, 0, 149, 1, 0, 0, 0, 0, 151, 1, 0, 0, 0, 0, 153, 1, 0, 0, 0, 0, 155, 1, 0, 0, 0, 0, 157, 1,
    0, 0, 0, 0, 159, 1, 0, 0, 0, 0, 165, 1, 0, 0, 0, 0, 167, 1, 0, 0, 0, 0, 169, 1, 0, 0, 0, 0, 171, 1, 0, 0, 0, 1, 175,
    1, 0, 0, 0, 3, 177, 1, 0, 0, 0, 5, 181, 1, 0, 0, 0, 7, 188, 1, 0, 0, 0, 9, 191, 1, 0, 0, 0, 11, 194, 1, 0, 0, 0, 13,
    199, 1, 0, 0, 0, 15, 204, 1, 0, 0, 0, 17, 209, 1, 0, 0, 0, 19, 215, 1, 0, 0, 0, 21, 225, 1, 0, 0, 0, 23, 234, 1, 0,
    0, 0, 25, 237, 1, 0, 0, 0, 27, 246, 1, 0, 0, 0, 29, 255, 1, 0, 0, 0, 31, 258, 1, 0, 0, 0, 33, 262, 1, 0, 0, 0, 35,
    270, 1, 0, 0, 0, 37, 275, 1, 0, 0, 0, 39, 280, 1, 0, 0, 0, 41, 286, 1, 0, 0, 0, 43, 290, 1, 0, 0, 0, 45, 292, 1, 0,
    0, 0, 47, 296, 1, 0, 0, 0, 49, 300, 1, 0, 0, 0, 51, 302, 1, 0, 0, 0, 53, 311, 1, 0, 0, 0, 55, 318, 1, 0, 0, 0, 57,
    320, 1, 0, 0, 0, 59, 323, 1, 0, 0, 0, 61, 329, 1, 0, 0, 0, 63, 332, 1, 0, 0, 0, 65, 336, 1, 0, 0, 0, 67, 340, 1, 0,
    0, 0, 69, 347, 1, 0, 0, 0, 71, 350, 1, 0, 0, 0, 73, 356, 1, 0, 0, 0, 75, 360, 1, 0, 0, 0, 77, 387, 1, 0, 0, 0, 79,
    389, 1, 0, 0, 0, 81, 392, 1, 0, 0, 0, 83, 395, 1, 0, 0, 0, 85, 399, 1, 0, 0, 0, 87, 401, 1, 0, 0, 0, 89, 403, 1, 0,
    0, 0, 91, 419, 1, 0, 0, 0, 93, 421, 1, 0, 0, 0, 95, 424, 1, 0, 0, 0, 97, 426, 1, 0, 0, 0, 99, 433, 1, 0, 0, 0, 101,
    439, 1, 0, 0, 0, 103, 444, 1, 0, 0, 0, 105, 446, 1, 0, 0, 0, 107, 464, 1, 0, 0, 0, 109, 466, 1, 0, 0, 0, 111, 468,
    1, 0, 0, 0, 113, 470, 1, 0, 0, 0, 115, 472, 1, 0, 0, 0, 117, 474, 1, 0, 0, 0, 119, 476, 1, 0, 0, 0, 121, 478, 1, 0,
    0, 0, 123, 480, 1, 0, 0, 0, 125, 483, 1, 0, 0, 0, 127, 485, 1, 0, 0, 0, 129, 487, 1, 0, 0, 0, 131, 489, 1, 0, 0, 0,
    133, 491, 1, 0, 0, 0, 135, 494, 1, 0, 0, 0, 137, 497, 1, 0, 0, 0, 139, 500, 1, 0, 0, 0, 141, 502, 1, 0, 0, 0, 143,
    505, 1, 0, 0, 0, 145, 508, 1, 0, 0, 0, 147, 510, 1, 0, 0, 0, 149, 512, 1, 0, 0, 0, 151, 514, 1, 0, 0, 0, 153, 516,
    1, 0, 0, 0, 155, 518, 1, 0, 0, 0, 157, 522, 1, 0, 0, 0, 159, 524, 1, 0, 0, 0, 161, 532, 1, 0, 0, 0, 163, 535, 1, 0,
    0, 0, 165, 538, 1, 0, 0, 0, 167, 544, 1, 0, 0, 0, 169, 558, 1, 0, 0, 0, 171, 569, 1, 0, 0, 0, 173, 176, 3, 37, 18,
    0, 174, 176, 3, 39, 19, 0, 175, 173, 1, 0, 0, 0, 175, 174, 1, 0, 0, 0, 176, 2, 1, 0, 0, 0, 177, 178, 5, 102, 0, 0,
    178, 179, 5, 111, 0, 0, 179, 180, 5, 114, 0, 0, 180, 4, 1, 0, 0, 0, 181, 182, 5, 114, 0, 0, 182, 183, 5, 101, 0, 0,
    183, 184, 5, 116, 0, 0, 184, 185, 5, 117, 0, 0, 185, 186, 5, 114, 0, 0, 186, 187, 5, 110, 0, 0, 187, 6, 1, 0, 0, 0,
    188, 189, 5, 105, 0, 0, 189, 190, 5, 110, 0, 0, 190, 8, 1, 0, 0, 0, 191, 192, 5, 105, 0, 0, 192, 193, 5, 102, 0, 0,
    193, 10, 1, 0, 0, 0, 194, 195, 5, 116, 0, 0, 195, 196, 5, 104, 0, 0, 196, 197, 5, 101, 0, 0, 197, 198, 5, 110, 0, 0,
    198, 12, 1, 0, 0, 0, 199, 200, 5, 101, 0, 0, 200, 201, 5, 108, 0, 0, 201, 202, 5, 115, 0, 0, 202, 203, 5, 101, 0, 0,
    203, 14, 1, 0, 0, 0, 204, 205, 5, 115, 0, 0, 205, 206, 5, 111, 0, 0, 206, 207, 5, 109, 0, 0, 207, 208, 5, 101, 0, 0,
    208, 16, 1, 0, 0, 0, 209, 210, 5, 101, 0, 0, 210, 211, 5, 118, 0, 0, 211, 212, 5, 101, 0, 0, 212, 213, 5, 114, 0, 0,
    213, 214, 5, 121, 0, 0, 214, 18, 1, 0, 0, 0, 215, 216, 5, 115, 0, 0, 216, 217, 5, 97, 0, 0, 217, 218, 5, 116, 0, 0,
    218, 219, 5, 105, 0, 0, 219, 220, 5, 115, 0, 0, 220, 221, 5, 102, 0, 0, 221, 222, 5, 105, 0, 0, 222, 223, 5, 101, 0,
    0, 223, 224, 5, 115, 0, 0, 224, 20, 1, 0, 0, 0, 225, 226, 5, 105, 0, 0, 226, 227, 5, 110, 0, 0, 227, 228, 5, 115, 0,
    0, 228, 229, 5, 116, 0, 0, 229, 230, 5, 97, 0, 0, 230, 231, 5, 110, 0, 0, 231, 232, 5, 99, 0, 0, 232, 233, 5, 101,
    0, 0, 233, 22, 1, 0, 0, 0, 234, 235, 5, 111, 0, 0, 235, 236, 5, 102, 0, 0, 236, 24, 1, 0, 0, 0, 237, 238, 5, 102, 0,
    0, 238, 239, 5, 117, 0, 0, 239, 240, 5, 110, 0, 0, 240, 241, 5, 99, 0, 0, 241, 242, 5, 116, 0, 0, 242, 243, 5, 105,
    0, 0, 243, 244, 5, 111, 0, 0, 244, 245, 5, 110, 0, 0, 245, 26, 1, 0, 0, 0, 246, 247, 5, 101, 0, 0, 247, 248, 5, 120,
    0, 0, 248, 249, 5, 116, 0, 0, 249, 250, 5, 101, 0, 0, 250, 251, 5, 114, 0, 0, 251, 252, 5, 110, 0, 0, 252, 253, 5,
    97, 0, 0, 253, 254, 5, 108, 0, 0, 254, 28, 1, 0, 0, 0, 255, 256, 5, 111, 0, 0, 256, 257, 5, 114, 0, 0, 257, 30, 1,
    0, 0, 0, 258, 259, 5, 97, 0, 0, 259, 260, 5, 110, 0, 0, 260, 261, 5, 100, 0, 0, 261, 32, 1, 0, 0, 0, 262, 263, 5,
    98, 0, 0, 263, 264, 5, 101, 0, 0, 264, 265, 5, 116, 0, 0, 265, 266, 5, 119, 0, 0, 266, 267, 5, 101, 0, 0, 267, 268,
    5, 101, 0, 0, 268, 269, 5, 110, 0, 0, 269, 34, 1, 0, 0, 0, 270, 271, 5, 110, 0, 0, 271, 272, 5, 117, 0, 0, 272, 273,
    5, 108, 0, 0, 273, 274, 5, 108, 0, 0, 274, 36, 1, 0, 0, 0, 275, 276, 5, 116, 0, 0, 276, 277, 5, 114, 0, 0, 277, 278,
    5, 117, 0, 0, 278, 279, 5, 101, 0, 0, 279, 38, 1, 0, 0, 0, 280, 281, 5, 102, 0, 0, 281, 282, 5, 97, 0, 0, 282, 283,
    5, 108, 0, 0, 283, 284, 5, 115, 0, 0, 284, 285, 5, 101, 0, 0, 285, 40, 1, 0, 0, 0, 286, 287, 5, 39, 0, 0, 287, 42,
    1, 0, 0, 0, 288, 291, 3, 45, 22, 0, 289, 291, 3, 47, 23, 0, 290, 288, 1, 0, 0, 0, 290, 289, 1, 0, 0, 0, 291, 44, 1,
    0, 0, 0, 292, 294, 3, 51, 25, 0, 293, 295, 3, 49, 24, 0, 294, 293, 1, 0, 0, 0, 294, 295, 1, 0, 0, 0, 295, 46, 1, 0,
    0, 0, 296, 298, 3, 65, 32, 0, 297, 299, 3, 49, 24, 0, 298, 297, 1, 0, 0, 0, 298, 299, 1, 0, 0, 0, 299, 48, 1, 0, 0,
    0, 300, 301, 7, 0, 0, 0, 301, 50, 1, 0, 0, 0, 302, 309, 3, 55, 27, 0, 303, 305, 3, 53, 26, 0, 304, 303, 1, 0, 0, 0,
    304, 305, 1, 0, 0, 0, 305, 310, 1, 0, 0, 0, 306, 307, 3, 63, 31, 0, 307, 308, 3, 53, 26, 0, 308, 310, 1, 0, 0, 0,
    309, 304, 1, 0, 0, 0, 309, 306, 1, 0, 0, 0, 310, 52, 1, 0, 0, 0, 311, 316, 3, 55, 27, 0, 312, 314, 3, 59, 29, 0,
    313, 312, 1, 0, 0, 0, 313, 314, 1, 0, 0, 0, 314, 315, 1, 0, 0, 0, 315, 317, 3, 55, 27, 0, 316, 313, 1, 0, 0, 0, 316,
    317, 1, 0, 0, 0, 317, 54, 1, 0, 0, 0, 318, 319, 7, 1, 0, 0, 319, 56, 1, 0, 0, 0, 320, 321, 7, 2, 0, 0, 321, 58, 1,
    0, 0, 0, 322, 324, 3, 61, 30, 0, 323, 322, 1, 0, 0, 0, 324, 325, 1, 0, 0, 0, 325, 323, 1, 0, 0, 0, 325, 326, 1, 0,
    0, 0, 326, 60, 1, 0, 0, 0, 327, 330, 3, 55, 27, 0, 328, 330, 5, 95, 0, 0, 329, 327, 1, 0, 0, 0, 329, 328, 1, 0, 0,
    0, 330, 62, 1, 0, 0, 0, 331, 333, 5, 95, 0, 0, 332, 331, 1, 0, 0, 0, 333, 334, 1, 0, 0, 0, 334, 332, 1, 0, 0, 0,
    334, 335, 1, 0, 0, 0, 335, 64, 1, 0, 0, 0, 336, 337, 5, 48, 0, 0, 337, 338, 7, 3, 0, 0, 338, 339, 3, 67, 33, 0, 339,
    66, 1, 0, 0, 0, 340, 345, 3, 69, 34, 0, 341, 343, 3, 71, 35, 0, 342, 341, 1, 0, 0, 0, 342, 343, 1, 0, 0, 0, 343,
    344, 1, 0, 0, 0, 344, 346, 3, 69, 34, 0, 345, 342, 1, 0, 0, 0, 345, 346, 1, 0, 0, 0, 346, 68, 1, 0, 0, 0, 347, 348,
    7, 4, 0, 0, 348, 70, 1, 0, 0, 0, 349, 351, 3, 73, 36, 0, 350, 349, 1, 0, 0, 0, 351, 352, 1, 0, 0, 0, 352, 350, 1, 0,
    0, 0, 352, 353, 1, 0, 0, 0, 353, 72, 1, 0, 0, 0, 354, 357, 3, 69, 34, 0, 355, 357, 5, 95, 0, 0, 356, 354, 1, 0, 0,
    0, 356, 355, 1, 0, 0, 0, 357, 74, 1, 0, 0, 0, 358, 361, 3, 77, 38, 0, 359, 361, 3, 89, 44, 0, 360, 358, 1, 0, 0, 0,
    360, 359, 1, 0, 0, 0, 361, 76, 1, 0, 0, 0, 362, 363, 3, 53, 26, 0, 363, 364, 5, 46, 0, 0, 364, 366, 3, 53, 26, 0,
    365, 367, 3, 79, 39, 0, 366, 365, 1, 0, 0, 0, 366, 367, 1, 0, 0, 0, 367, 369, 1, 0, 0, 0, 368, 370, 3, 87, 43, 0,
    369, 368, 1, 0, 0, 0, 369, 370, 1, 0, 0, 0, 370, 388, 1, 0, 0, 0, 371, 372, 5, 46, 0, 0, 372, 374, 3, 53, 26, 0,
    373, 375, 3, 79, 39, 0, 374, 373, 1, 0, 0, 0, 374, 375, 1, 0, 0, 0, 375, 377, 1, 0, 0, 0, 376, 378, 3, 87, 43, 0,
    377, 376, 1, 0, 0, 0, 377, 378, 1, 0, 0, 0, 378, 388, 1, 0, 0, 0, 379, 380, 3, 53, 26, 0, 380, 382, 3, 79, 39, 0,
    381, 383, 3, 87, 43, 0, 382, 381, 1, 0, 0, 0, 382, 383, 1, 0, 0, 0, 383, 388, 1, 0, 0, 0, 384, 385, 3, 53, 26, 0,
    385, 386, 3, 87, 43, 0, 386, 388, 1, 0, 0, 0, 387, 362, 1, 0, 0, 0, 387, 371, 1, 0, 0, 0, 387, 379, 1, 0, 0, 0, 387,
    384, 1, 0, 0, 0, 388, 78, 1, 0, 0, 0, 389, 390, 3, 81, 40, 0, 390, 391, 3, 83, 41, 0, 391, 80, 1, 0, 0, 0, 392, 393,
    7, 5, 0, 0, 393, 82, 1, 0, 0, 0, 394, 396, 3, 85, 42, 0, 395, 394, 1, 0, 0, 0, 395, 396, 1, 0, 0, 0, 396, 397, 1, 0,
    0, 0, 397, 398, 3, 53, 26, 0, 398, 84, 1, 0, 0, 0, 399, 400, 7, 6, 0, 0, 400, 86, 1, 0, 0, 0, 401, 402, 7, 7, 0, 0,
    402, 88, 1, 0, 0, 0, 403, 404, 3, 91, 45, 0, 404, 406, 3, 93, 46, 0, 405, 407, 3, 87, 43, 0, 406, 405, 1, 0, 0, 0,
    406, 407, 1, 0, 0, 0, 407, 90, 1, 0, 0, 0, 408, 410, 3, 65, 32, 0, 409, 411, 5, 46, 0, 0, 410, 409, 1, 0, 0, 0, 410,
    411, 1, 0, 0, 0, 411, 420, 1, 0, 0, 0, 412, 413, 5, 48, 0, 0, 413, 415, 7, 3, 0, 0, 414, 416, 3, 67, 33, 0, 415,
    414, 1, 0, 0, 0, 415, 416, 1, 0, 0, 0, 416, 417, 1, 0, 0, 0, 417, 418, 5, 46, 0, 0, 418, 420, 3, 67, 33, 0, 419,
    408, 1, 0, 0, 0, 419, 412, 1, 0, 0, 0, 420, 92, 1, 0, 0, 0, 421, 422, 3, 95, 47, 0, 422, 423, 3, 83, 41, 0, 423, 94,
    1, 0, 0, 0, 424, 425, 7, 8, 0, 0, 425, 96, 1, 0, 0, 0, 426, 428, 5, 34, 0, 0, 427, 429, 3, 99, 49, 0, 428, 427, 1,
    0, 0, 0, 428, 429, 1, 0, 0, 0, 429, 430, 1, 0, 0, 0, 430, 431, 5, 34, 0, 0, 431, 98, 1, 0, 0, 0, 432, 434, 3, 101,
    50, 0, 433, 432, 1, 0, 0, 0, 434, 435, 1, 0, 0, 0, 435, 433, 1, 0, 0, 0, 435, 436, 1, 0, 0, 0, 436, 100, 1, 0, 0, 0,
    437, 440, 8, 9, 0, 0, 438, 440, 3, 103, 51, 0, 439, 437, 1, 0, 0, 0, 439, 438, 1, 0, 0, 0, 440, 102, 1, 0, 0, 0,
    441, 442, 5, 92, 0, 0, 442, 445, 8, 10, 0, 0, 443, 445, 3, 107, 53, 0, 444, 441, 1, 0, 0, 0, 444, 443, 1, 0, 0, 0,
    445, 104, 1, 0, 0, 0, 446, 447, 7, 11, 0, 0, 447, 106, 1, 0, 0, 0, 448, 449, 5, 92, 0, 0, 449, 450, 5, 85, 0, 0,
    450, 451, 3, 69, 34, 0, 451, 452, 3, 69, 34, 0, 452, 453, 3, 69, 34, 0, 453, 454, 3, 69, 34, 0, 454, 455, 3, 69, 34,
    0, 455, 456, 3, 69, 34, 0, 456, 465, 1, 0, 0, 0, 457, 458, 5, 92, 0, 0, 458, 459, 5, 117, 0, 0, 459, 460, 3, 69, 34,
    0, 460, 461, 3, 69, 34, 0, 461, 462, 3, 69, 34, 0, 462, 463, 3, 69, 34, 0, 463, 465, 1, 0, 0, 0, 464, 448, 1, 0, 0,
    0, 464, 457, 1, 0, 0, 0, 465, 108, 1, 0, 0, 0, 466, 467, 5, 40, 0, 0, 467, 110, 1, 0, 0, 0, 468, 469, 5, 41, 0, 0,
    469, 112, 1, 0, 0, 0, 470, 471, 5, 123, 0, 0, 471, 114, 1, 0, 0, 0, 472, 473, 5, 125, 0, 0, 473, 116, 1, 0, 0, 0,
    474, 475, 5, 91, 0, 0, 475, 118, 1, 0, 0, 0, 476, 477, 5, 93, 0, 0, 477, 120, 1, 0, 0, 0, 478, 479, 5, 44, 0, 0,
    479, 122, 1, 0, 0, 0, 480, 481, 5, 46, 0, 0, 481, 482, 5, 46, 0, 0, 482, 124, 1, 0, 0, 0, 483, 484, 5, 46, 0, 0,
    484, 126, 1, 0, 0, 0, 485, 486, 5, 61, 0, 0, 486, 128, 1, 0, 0, 0, 487, 488, 5, 62, 0, 0, 488, 130, 1, 0, 0, 0, 489,
    490, 5, 60, 0, 0, 490, 132, 1, 0, 0, 0, 491, 492, 5, 60, 0, 0, 492, 493, 5, 61, 0, 0, 493, 134, 1, 0, 0, 0, 494,
    495, 5, 62, 0, 0, 495, 496, 5, 61, 0, 0, 496, 136, 1, 0, 0, 0, 497, 498, 5, 33, 0, 0, 498, 499, 5, 61, 0, 0, 499,
    138, 1, 0, 0, 0, 500, 501, 5, 58, 0, 0, 501, 140, 1, 0, 0, 0, 502, 503, 5, 45, 0, 0, 503, 504, 5, 62, 0, 0, 504,
    142, 1, 0, 0, 0, 505, 506, 5, 42, 0, 0, 506, 507, 5, 42, 0, 0, 507, 144, 1, 0, 0, 0, 508, 509, 5, 43, 0, 0, 509,
    146, 1, 0, 0, 0, 510, 511, 5, 45, 0, 0, 511, 148, 1, 0, 0, 0, 512, 513, 5, 42, 0, 0, 513, 150, 1, 0, 0, 0, 514, 515,
    5, 47, 0, 0, 515, 152, 1, 0, 0, 0, 516, 517, 5, 33, 0, 0, 517, 154, 1, 0, 0, 0, 518, 519, 5, 110, 0, 0, 519, 520, 5,
    111, 0, 0, 520, 521, 5, 116, 0, 0, 521, 156, 1, 0, 0, 0, 522, 523, 5, 64, 0, 0, 523, 158, 1, 0, 0, 0, 524, 528, 3,
    161, 80, 0, 525, 527, 3, 163, 81, 0, 526, 525, 1, 0, 0, 0, 527, 530, 1, 0, 0, 0, 528, 526, 1, 0, 0, 0, 528, 529, 1,
    0, 0, 0, 529, 160, 1, 0, 0, 0, 530, 528, 1, 0, 0, 0, 531, 533, 7, 12, 0, 0, 532, 531, 1, 0, 0, 0, 533, 162, 1, 0, 0,
    0, 534, 536, 7, 13, 0, 0, 535, 534, 1, 0, 0, 0, 536, 164, 1, 0, 0, 0, 537, 539, 7, 14, 0, 0, 538, 537, 1, 0, 0, 0,
    539, 540, 1, 0, 0, 0, 540, 538, 1, 0, 0, 0, 540, 541, 1, 0, 0, 0, 541, 542, 1, 0, 0, 0, 542, 543, 6, 82, 0, 0, 543,
    166, 1, 0, 0, 0, 544, 545, 5, 47, 0, 0, 545, 546, 5, 42, 0, 0, 546, 550, 1, 0, 0, 0, 547, 549, 9, 0, 0, 0, 548, 547,
    1, 0, 0, 0, 549, 552, 1, 0, 0, 0, 550, 551, 1, 0, 0, 0, 550, 548, 1, 0, 0, 0, 551, 553, 1, 0, 0, 0, 552, 550, 1, 0,
    0, 0, 553, 554, 5, 42, 0, 0, 554, 555, 5, 47, 0, 0, 555, 556, 1, 0, 0, 0, 556, 557, 6, 83, 0, 0, 557, 168, 1, 0, 0,
    0, 558, 559, 5, 47, 0, 0, 559, 560, 5, 47, 0, 0, 560, 564, 1, 0, 0, 0, 561, 563, 8, 15, 0, 0, 562, 561, 1, 0, 0, 0,
    563, 566, 1, 0, 0, 0, 564, 562, 1, 0, 0, 0, 564, 565, 1, 0, 0, 0, 565, 567, 1, 0, 0, 0, 566, 564, 1, 0, 0, 0, 567,
    568, 6, 84, 0, 0, 568, 170, 1, 0, 0, 0, 569, 570, 8, 16, 0, 0, 570, 172, 1, 0, 0, 0, 39, 0, 175, 290, 294, 298, 304,
    309, 313, 316, 325, 329, 334, 342, 345, 352, 356, 360, 366, 369, 374, 377, 382, 387, 395, 406, 410, 415, 419, 428,
    435, 439, 444, 464, 528, 532, 535, 540, 550, 564, 1, 6, 0, 0,
  ];

  private static __ATN: ATN;
  public static get _ATN(): ATN {
    if (!FEEL_1_1Lexer.__ATN) {
      FEEL_1_1Lexer.__ATN = new ATNDeserializer().deserialize(FEEL_1_1Lexer._serializedATN);
    }

    return FEEL_1_1Lexer.__ATN;
  }

  static DecisionsToDFA = FEEL_1_1Lexer._ATN.decisionToState.map(
    (ds: DecisionState, index: number) => new DFA(ds, index)
  );
}
