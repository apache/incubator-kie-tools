/*
 * Licensed to the Apache Software Foundation (ASF) under one
 * or more contributor license agreements.  See the NOTICE file
 * distributed with this work for additional information
 * regarding copyright ownership.  The ASF licenses this file
 * to you under the Apache License, Version 2.0 (the
 * "License"); you may not use this file except in compliance
 * with the License.  You may obtain a copy of the License at
 *
 *  http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing,
 * software distributed under the License is distributed on an
 * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
 * KIND, either express or implied.  See the License for the
 * specific language governing permissions and limitations
 * under the License.
 */

import * as React from "react";
import CodeEditorTextField from "../src/CodeEditorTextField";
import { fireEvent, render, screen } from "@testing-library/react";
// import { usingUniformsContext } from "./test-utils";
import { Language } from "@patternfly/react-code-editor/dist/js/components/CodeEditor";

const jsonMock = JSON.stringify({ first_name: "John", last_name: "Doe" });

// test("<CodeEditorTextField> - renders an editor", () => {
//   render(
//     usingUniformsContext(<CodeEditorTextField name="x" language={Language.json} />, {
//       x: { type: String, uniforms: { language: "json" } },
//     })
//   );
//
//   expect(screen.getByTestId("wrapper-field")).toBeInTheDocument();
// });
//
// test("<CodeEditorTextField> - renders an editor with correct disabled state", () => {
//   render(
//     usingUniformsContext(<CodeEditorTextField name="x" disabled language={Language.json} />, {
//       x: { type: String, uniforms: { language: "json" } },
//     })
//   );
//
//   expect(screen.getByTestId("wrapper-field")).toBeInTheDocument();
//   expect(screen.getByTestId("code-editor-textarea").getAttribute("readOnly")).not.toBe(null);
// });
//
// test("<CodeEditorTextField> - renders an editor with correct name", () => {
//   render(
//     usingUniformsContext(<CodeEditorTextField name="x" disabled language={Language.json} />, {
//       x: { type: String, uniforms: { language: "json" } },
//     })
//   );
//
//   expect(screen.getByTestId("wrapper-field")).toBeInTheDocument();
//   expect(screen.getByTestId("code-editor-hidden-field").getAttribute("name")).toBe("x");
// });
//
// test("<CodeEditorTextField> - renders an editor with correct value (default)", () => {
//   render(
//     usingUniformsContext(<CodeEditorTextField name="x" language={Language.json} />, {
//       x: { type: String, uniforms: { language: "json" } },
//     })
//   );
//
//   expect(screen.getByTestId("wrapper-field")).toBeInTheDocument();
//   const editor = screen.getByTestId("code-editor-textarea") as HTMLTextAreaElement;
//   expect(editor.value).toBe("");
//   expect(screen.getByTestId("code-editor-hidden-field").getAttribute("value")).toBe("");
// });
//
// test("<CodeEditorTextField> - renders an editor with correct value (model)", () => {
//   render(
//     usingUniformsContext(
//       <CodeEditorTextField name="x" language={Language.json} />,
//       { x: { type: String, uniforms: { language: "json" } } },
//       { model: { x: jsonMock } }
//     )
//   );
//
//   expect(screen.getByTestId("wrapper-field")).toBeInTheDocument();
//   expect(screen.getByText(jsonMock)).toBeInTheDocument();
//   expect(screen.getByTestId("code-editor-hidden-field").getAttribute("value")).toBe(jsonMock);
// });
//
// test("<CodeEditorTextField> - renders an editor with correct value (specified)", () => {
//   render(
//     usingUniformsContext(<CodeEditorTextField name="x" language={Language.json} value="y" />, {
//       x: { type: String, uniforms: { language: "json" } },
//     })
//   );
//
//   expect(screen.getByTestId("wrapper-field")).toBeInTheDocument();
//   expect(screen.getByText("y")).toBeInTheDocument();
//   expect(screen.getByTestId("code-editor-hidden-field").getAttribute("value")).toBe("y");
// });
//
// test("<CodeEditorTextField> - renders an editor which correctly reacts on change", () => {
//   const onChange = jest.fn();
//
//   render(
//     usingUniformsContext(
//       <CodeEditorTextField name="x" language={Language.json} />,
//       { x: { type: String, uniforms: { language: "json" } } },
//       { onChange }
//     )
//   );
//
//   expect(screen.getByTestId("wrapper-field")).toBeInTheDocument();
//   const editor = screen.getByTestId("code-editor-textarea");
//   fireEvent.change(editor, { target: { value: "y" } });
//   expect(onChange).toHaveBeenLastCalledWith("x", "y");
//   expect(screen.getByTestId("code-editor-hidden-field").getAttribute("value")).toBe("y");
// });
//
// test("<CodeEditorTextField> - renders an editor which correctly reacts on change (empty)", () => {
//   const onChange = jest.fn();
//
//   render(
//     usingUniformsContext(
//       <CodeEditorTextField name="x" language={Language.json} />,
//       { x: { type: String, uniforms: { language: "json" } } },
//       { onChange }
//     )
//   );
//
//   expect(screen.getByTestId("wrapper-field")).toBeInTheDocument();
//   const editor = screen.getByTestId("code-editor-textarea");
//   fireEvent.change(editor, { target: { value: "" } });
//   expect(onChange).not.toHaveBeenCalled();
// });
//
// test("<CodeEditorTextField> - renders an editor which correctly reacts on change (same value)", () => {
//   const onChange = jest.fn();
//
//   render(
//     usingUniformsContext(
//       <CodeEditorTextField name="x" language={Language.json} />,
//       { x: { type: String, uniforms: { language: "json" } } },
//       { model: { x: "y" }, onChange }
//     )
//   );
//
//   expect(screen.getByTestId("wrapper-field")).toBeInTheDocument();
//   const editor = screen.getByTestId("code-editor-textarea");
//   fireEvent.change(editor, { target: { value: "y" } });
//   expect(screen.getByText("y")).toBeInTheDocument();
//   expect(onChange).not.toHaveBeenCalled();
// });
//
// test("<CodeEditorTextField> - renders a label", () => {
//   render(
//     usingUniformsContext(<CodeEditorTextField name="x" label="y" language={Language.json} />, {
//       x: { type: String, uniforms: { language: "json" } },
//     })
//   );
//
//   expect(screen.getByTestId("wrapper-field")).toBeInTheDocument();
//   expect(screen.getByText("y")).toBeInTheDocument();
// });
//
// test("<CodeEditorTextField> - renders an editor with correct height (default)", () => {
//   render(
//     usingUniformsContext(<CodeEditorTextField name="x" language={Language.json} />, {
//       x: { type: String, uniforms: { language: "json" } },
//     })
//   );
//
//   expect(screen.getByTestId("wrapper-field")).toBeInTheDocument();
//   expect(screen.getByTestId("code-editor-textarea").style.height).toBe("200px");
// });
//
// test("<CodeEditorTextField> - renders an editor with correct height (specified)", () => {
//   render(
//     usingUniformsContext(<CodeEditorTextField name="x" height="300px" language={Language.json} />, {
//       x: { type: String, uniforms: { language: "json" } },
//     })
//   );
//
//   expect(screen.getByTestId("wrapper-field")).toBeInTheDocument();
//   expect(screen.getByTestId("code-editor-textarea").style.height).toBe("300px");
// });
//
// test("<CodeEditorTextField> - renders an editor with correct language (default)", () => {
//   render(
//     usingUniformsContext(<CodeEditorTextField name="x" />, { x: { type: String, uniforms: { language: "json" } } })
//   );
//
//   expect(screen.getByTestId("wrapper-field")).toBeInTheDocument();
//   expect(screen.getByTestId("code-editor-textarea").getAttribute("data-language")).toBe("json");
// });
//
// test("<CodeEditorTextField> - renders an editor with correct language (specified)", () => {
//   render(
//     usingUniformsContext(<CodeEditorTextField name="x" language={Language.graphql} />, {
//       x: { type: String, uniforms: { language: "json" } },
//     })
//   );
//
//   expect(screen.getByTestId("wrapper-field")).toBeInTheDocument();
//   expect(screen.getByTestId("code-editor-textarea").getAttribute("data-language")).toBe("graphql");
// });
