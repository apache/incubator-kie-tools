!(function (a) {
  var b = a.dom,
    c = "wysihtml-command-dialog-opened",
    d = "input, select, textarea",
    e = "[data-wysihtml-dialog-field]",
    f = "data-wysihtml-dialog-field";
  a.toolbar.Dialog = a.lang.Dispatcher.extend({
    constructor: function (a, b) {
      (this.link = a), (this.container = b);
    },
    _observe: function () {
      if (!this._observed) {
        var d = this,
          e = function (a) {
            var b = d._serialize();
            d.fire("save", b), d.hide(), a.preventDefault(), a.stopPropagation();
          };
        b.observe(d.link, "click", function () {
          b.hasClass(d.link, c) &&
            setTimeout(function () {
              d.hide();
            }, 0);
        }),
          b.observe(this.container, "keydown", function (b) {
            var c = b.keyCode;
            c === a.ENTER_KEY && e(b), c === a.ESCAPE_KEY && d.cancel();
          }),
          b.delegate(this.container, "[data-wysihtml-dialog-action=save]", "click", e),
          b.delegate(this.container, "[data-wysihtml-dialog-action=cancel]", "click", function (a) {
            d.cancel(), a.preventDefault(), a.stopPropagation();
          }),
          (this._observed = !0);
      }
    },
    _serialize: function () {
      for (var a = {}, b = this.container.querySelectorAll(e), c = b.length, d = 0; c > d; d++)
        a[b[d].getAttribute(f)] = b[d].value;
      return a;
    },
    _interpolate: function (a) {
      for (
        var b, c, d, g = document.querySelector(":focus"), h = this.container.querySelectorAll(e), i = h.length, j = 0;
        i > j;
        j++
      )
        (b = h[j]),
          b !== g &&
            ((a && "hidden" === b.type) ||
              ((c = b.getAttribute(f)),
              (d =
                this.elementToChange && "boolean" != typeof this.elementToChange
                  ? this.elementToChange.getAttribute(c) || ""
                  : b.defaultValue),
              (b.value = d)));
    },
    update: function (a) {
      (this.elementToChange = a ? a : this.elementToChange), this._interpolate();
    },
    show: function (a) {
      var e = this.container.querySelector(d);
      if (
        (this._observe(),
        this.update(a),
        b.addClass(this.link, c),
        (this.container.style.display = ""),
        (this.isOpen = !0),
        this.fire("show"),
        e && !a)
      )
        try {
          e.focus();
        } catch (f) {}
    },
    _hide: function (a) {
      (this.elementToChange = null),
        b.removeClass(this.link, c),
        (this.container.style.display = "none"),
        (this.isOpen = !1);
    },
    hide: function () {
      this._hide(), this.fire("hide");
    },
    cancel: function () {
      this._hide(), this.fire("cancel");
    },
  });
})(wysihtml),
  (function (a) {
    var b = (a.dom, "[data-wysihtml-dialog-field]"),
      c = "data-wysihtml-dialog-field";
    a.toolbar.Dialog_bgColorStyle = a.toolbar.Dialog.extend({
      multiselect: !0,
      _serialize: function () {
        for (var a = {}, d = this.container.querySelectorAll(b), e = d.length, f = 0; e > f; f++)
          a[d[f].getAttribute(c)] = d[f].value;
        return a;
      },
      _interpolate: function (d) {
        for (
          var e,
            f = document.querySelector(":focus"),
            g = this.container.querySelectorAll(b),
            h = g.length,
            i = 0,
            j = this.elementToChange
              ? a.lang.object(this.elementToChange).isArray()
                ? this.elementToChange[0]
                : this.elementToChange
              : null,
            k = j ? j.getAttribute("style") : null,
            l = k ? a.quirks.styleParser.parseColor(k, "background-color") : null;
          h > i;
          i++
        )
          (e = g[i]),
            e !== f &&
              ((d && "hidden" === e.type) ||
                ("color" === e.getAttribute(c) &&
                  (l
                    ? l[3] && 1 != l[3]
                      ? (e.value = "rgba(" + l[0] + "," + l[1] + "," + l[2] + "," + l[3] + ");")
                      : (e.value = "rgb(" + l[0] + "," + l[1] + "," + l[2] + ");")
                    : (e.value = "rgb(0,0,0);"))));
      },
    });
  })(wysihtml),
  (function (a) {
    a.toolbar.Dialog_createTable = a.toolbar.Dialog.extend({
      show: function (a) {
        this.base(a);
      },
    });
  })(wysihtml),
  (function (a) {
    a.dom;
    a.toolbar.Dialog_fontSizeStyle = a.toolbar.Dialog.extend({
      multiselect: !0,
      _serialize: function () {
        return { size: this.container.querySelector('[data-wysihtml-dialog-field="size"]').value };
      },
      _interpolate: function (b) {
        var c = document.querySelector(":focus"),
          d = this.container.querySelector("[data-wysihtml-dialog-field='size']"),
          e = this.elementToChange
            ? a.lang.object(this.elementToChange).isArray()
              ? this.elementToChange[0]
              : this.elementToChange
            : null,
          f = e ? e.getAttribute("style") : null,
          g = f ? a.quirks.styleParser.parseFontSize(f) : null;
        d && d !== c && g && !/^\s*$/.test(g) && (d.value = g);
      },
    });
  })(wysihtml),
  (function (a) {
    var b = "[data-wysihtml-dialog-field]",
      c = "data-wysihtml-dialog-field";
    a.toolbar.Dialog_foreColorStyle = a.toolbar.Dialog.extend({
      multiselect: !0,
      _serialize: function () {
        for (var a = {}, d = this.container.querySelectorAll(b), e = d.length, f = 0; e > f; f++)
          a[d[f].getAttribute(c)] = d[f].value;
        return a;
      },
      _interpolate: function (d) {
        for (
          var e,
            f,
            g = a.quirks.styleParser,
            h = document.querySelector(":focus"),
            i = this.container.querySelectorAll(b),
            j = i.length,
            k = 0,
            l = this.elementToChange
              ? a.lang.object(this.elementToChange).isArray()
                ? this.elementToChange[0]
                : this.elementToChange
              : null,
            m = l ? l.getAttribute("style") : null,
            n = m ? g.parseColor(m, "color") : null;
          j > k;
          k++
        )
          (e = i[k]),
            e !== h &&
              ((d && "hidden" === e.type) ||
                ("color" === e.getAttribute(c) &&
                  ((f = (e.dataset.colormode || "rgb").toLowerCase()),
                  (f = "hex" === f ? "hash" : f),
                  n ? (e.value = g.unparseColor(n, f)) : (e.value = g.unparseColor([0, 0, 0], f)))));
      },
    });
  })(wysihtml),
  (function (a) {
    var b = a.dom,
      c = { position: "relative" },
      d = { left: 0, margin: 0, opacity: 0, overflow: "hidden", padding: 0, position: "absolute", top: 0, zIndex: 1 },
      e = {
        cursor: "inherit",
        fontSize: "50px",
        height: "50px",
        marginTop: "-25px",
        outline: 0,
        padding: 0,
        position: "absolute",
        right: "-4px",
        top: "50%",
      },
      f = { "x-webkit-speech": "", speech: "" };
    a.toolbar.Speech = function (g, h) {
      var i = document.createElement("input");
      if (!a.browser.supportsSpeechApiOn(i)) return void (h.style.display = "none");
      var j = g.editor.textarea.element.getAttribute("lang");
      j && (f.lang = j);
      var k = document.createElement("div");
      a.lang.object(d).merge({ width: h.offsetWidth + "px", height: h.offsetHeight + "px" }),
        b.insert(i).into(k),
        b.insert(k).into(h),
        b.setStyles(e).on(i),
        b.setAttributes(f).on(i),
        b.setStyles(d).on(k),
        b.setStyles(c).on(h);
      var l = "onwebkitspeechchange" in i ? "webkitspeechchange" : "speechchange";
      b.observe(i, l, function () {
        g.execCommand("insertText", i.value), (i.value = "");
      }),
        b.observe(i, "click", function (a) {
          b.hasClass(h, "wysihtml-command-disabled") && a.preventDefault(), a.stopPropagation();
        });
    };
  })(wysihtml),
  (function (a) {
    function b(b, c) {
      var d = b.commands.state(c.name, c.value);
      return !c.dialog.multiselect && a.lang.object(d).isArray() && (d = 1 === d.length ? d[0] : !0), d;
    }
    var c = "wysihtml-command-disabled",
      d = "wysihtml-commands-disabled",
      e = "wysihtml-command-active",
      f = "wysihtml-action-active",
      g = a.dom;
    (a.toolbar.Toolbar = Base.extend({
      constructor: function (b, g, h) {
        (this.editor = b),
          (this.container = "string" == typeof g ? document.getElementById(g) : g),
          (this.composer = b.composer),
          this._getLinks("command"),
          this._getLinks("action"),
          this._observe(),
          h && this.show(),
          null != b.config.classNameCommandDisabled && (c = b.config.classNameCommandDisabled),
          null != b.config.classNameCommandsDisabled && (d = b.config.classNameCommandsDisabled),
          null != b.config.classNameCommandActive && (e = b.config.classNameCommandActive),
          null != b.config.classNameActionActive && (f = b.config.classNameActionActive);
        for (
          var i = this.container.querySelectorAll("[data-wysihtml-command=insertSpeech]"), j = i.length, k = 0;
          j > k;
          k++
        )
          new a.toolbar.Speech(this, i[k]);
      },
      _getLinks: function (b) {
        for (
          var c,
            d,
            e,
            f,
            g,
            h,
            i = (this[b + "Links"] = a.lang.array(this.container.querySelectorAll("[data-wysihtml-" + b + "]")).get()),
            j = i.length,
            k = 0,
            l = (this[b + "Mapping"] = {});
          j > k;
          k++
        )
          (c = i[k]),
            (e = c.getAttribute("data-wysihtml-" + b)),
            (f = c.getAttribute("data-wysihtml-" + b + "-value")),
            (h = c.getAttribute("data-wysihtml-" + b + "-blank-value")),
            (d = this.container.querySelector("[data-wysihtml-" + b + "-group='" + e + "']")),
            (g = this._getDialog(c, e)),
            (l[e + ":" + f] = { link: c, group: d, name: e, value: f, tracksBlankValue: h, dialog: g, state: !1 });
      },
      _getDialog: function (b, c) {
        var d,
          e,
          f = this,
          g = this.container.querySelector("[data-wysihtml-dialog='" + c + "']");
        return (
          g &&
            ((d = a.toolbar["Dialog_" + c] ? new a.toolbar["Dialog_" + c](b, g) : new a.toolbar.Dialog(b, g)),
            d.on("show", function () {
              (e = f.composer.selection.getBookmark()),
                f.editor.fire("show:dialog", { command: c, dialogContainer: g, commandLink: b });
            }),
            d.on("save", function (a) {
              e && f.composer.selection.setBookmark(e),
                f._execCommand(c, a),
                f.editor.fire("save:dialog", { command: c, dialogContainer: g, commandLink: b }),
                f._hideAllDialogs(),
                f._preventInstantFocus(),
                (e = void 0);
            }),
            d.on("cancel", function () {
              e && f.composer.selection.setBookmark(e),
                f.editor.fire("cancel:dialog", { command: c, dialogContainer: g, commandLink: b }),
                (e = void 0),
                f._preventInstantFocus();
            }),
            d.on("hide", function () {
              f.editor.fire("hide:dialog", { command: c, dialogContainer: g, commandLink: b }), (e = void 0);
            })),
          d
        );
      },
      execCommand: function (a, b) {
        this.commandsDisabled || this._execCommand(a, b);
      },
      _execCommand: function (a, b) {
        this.editor.focus(!1), this.composer.commands.exec(a, b), this._updateLinkStates();
      },
      execAction: function (a) {
        var b = this.editor;
        "change_view" === a &&
          (b.currentView === b.textarea || "source" === b.currentView
            ? b.fire("change_view", "composer")
            : b.fire("change_view", "textarea")),
          "showSource" == a && b.fire("showSource");
      },
      _observe: function () {
        for (
          var c = this,
            e = this.editor,
            f = this.container,
            h = this.commandLinks.concat(this.actionLinks),
            i = h.length,
            j = 0;
          i > j;
          j++
        )
          "A" === h[j].nodeName
            ? g.setAttributes({ href: "javascript:;", unselectable: "on" }).on(h[j])
            : g.setAttributes({ unselectable: "on" }).on(h[j]);
        g.delegate(f, "[data-wysihtml-command], [data-wysihtml-action]", "mousedown", function (a) {
          a.preventDefault();
        }),
          g.delegate(f, "[data-wysihtml-command]", "click", function (a) {
            var d,
              e = this,
              f = e.getAttribute("data-wysihtml-command"),
              g = e.getAttribute("data-wysihtml-command-value"),
              h = c.commandMapping[f + ":" + g];
            g || !h.dialog ? c.execCommand(f, g) : ((d = b(c.composer, h)), h.dialog.show(d)), a.preventDefault();
          }),
          g.delegate(f, "[data-wysihtml-action]", "click", function (a) {
            var b = this.getAttribute("data-wysihtml-action");
            c.execAction(b), a.preventDefault();
          }),
          e.on("interaction:composer", function (a) {
            c.preventFocus || c._updateLinkStates();
          }),
          (this._ownerDocumentClick = function (b) {
            a.dom.contains(c.container, b.target) ||
              a.dom.contains(c.composer.element, b.target) ||
              (c._updateLinkStates(), c._preventInstantFocus());
          }),
          this.container.ownerDocument.addEventListener("click", this._ownerDocumentClick, !1),
          this.editor.on("destroy:composer", this.destroy.bind(this)),
          this.editor.config.handleTables &&
            (e.on("tableselect:composer", function () {
              c.container.querySelectorAll('[data-wysihtml-hiddentools="table"]')[0].style.display = "";
            }),
            e.on("tableunselect:composer", function () {
              c.container.querySelectorAll('[data-wysihtml-hiddentools="table"]')[0].style.display = "none";
            })),
          e.on("change_view", function (a) {
            setTimeout(function () {
              (c.commandsDisabled = "composer" !== a),
                c._updateLinkStates(),
                c.commandsDisabled ? g.addClass(f, d) : g.removeClass(f, d);
            }, 0);
          });
      },
      destroy: function () {
        this.container.ownerDocument.removeEventListener("click", this._ownerDocumentClick, !1);
      },
      _hideAllDialogs: function () {
        var a = this.commandMapping;
        for (var b in a) a[b].dialog && a[b].dialog.hide();
      },
      _preventInstantFocus: function () {
        (this.preventFocus = !0),
          setTimeout(
            function () {
              this.preventFocus = !1;
            }.bind(this),
            0
          );
      },
      _updateLinkStates: function () {
        var a,
          d,
          h,
          i,
          j,
          k = this.commandMapping,
          l = this.composer,
          m = this.actionMapping;
        for (a in k)
          (i = k[a]),
            this.commandsDisabled
              ? ((d = !1), g.removeClass(i.link, e), i.group && g.removeClass(i.group, e), i.dialog && i.dialog.hide())
              : ((d = this.composer.commands.state(i.name, i.value)),
                g.removeClass(i.link, c),
                i.group && g.removeClass(i.group, c)),
            (i.state !== d || i.tracksBlankValue) &&
              ((i.state = d),
              d
                ? i.tracksBlankValue
                  ? g.removeClass(i.link, e)
                  : (g.addClass(i.link, e),
                    i.group && g.addClass(i.group, e),
                    !i.dialog ||
                      ("undefined" != typeof i.value && null !== i.value) ||
                      (d && "object" == typeof d
                        ? ((d = b(l, i)),
                          (i.state = d),
                          (j = i.dialog.container.dataset ? i.dialog.container.dataset.showdialogonselection : !1),
                          l.config.showToolbarDialogsOnSelection || j ? i.dialog.show(d) : i.dialog.update(d))
                        : i.dialog.hide()))
                : i.tracksBlankValue
                ? g.addClass(i.link, e)
                : (g.removeClass(i.link, e),
                  i.group && g.removeClass(i.group, e),
                  i.dialog && !i.value && i.dialog.hide()));
        for (a in m)
          (h = m[a]),
            "change_view" === h.name &&
              ((h.state = this.editor.currentView === this.editor.textarea || "source" === this.editor.currentView),
              h.state ? g.addClass(h.link, f) : g.removeClass(h.link, f));
      },
      show: function () {
        this.container.style.display = "";
      },
      hide: function () {
        this.container.style.display = "none";
      },
    })),
      (a.Editor.prototype.defaults.toolbar = void 0),
      (a.Editor.prototype.defaults.showToolbarAfterInit = !0),
      (a.Editor.prototype.defaults.showToolbarDialogsOnSelection = !0),
      a.extendEditor(function (b) {
        b.config.toolbar &&
          ((b.toolbar = new a.toolbar.Toolbar(b, b.config.toolbar, b.config.showToolbarAfterInit)),
          b.on("destroy:composer", function () {
            b && b.toolbar && b.toolbar.destroy();
          }));
      });
  })(wysihtml);
//# sourceMappingURL=wysihtml.toolbar.min.map
