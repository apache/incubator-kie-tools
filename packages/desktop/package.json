{
  "name": "@kogito-tooling/desktop",
  "version": "0.0.0",
  "private": true,
  "description": "",
  "license": "Apache-2.0",
  "main": "./dist/index.js",
  "types": "./dist/index.d.ts",
  "repository": {
    "type": "git",
    "url": "https://github.com/kiegroup/kogito-tooling.git"
  },
  "dependencies": {
    "@kie-tooling-core/patternfly-base": "0.0.0",
    "@kogito-tooling/build-env": "0.0.0",
    "@kogito-tooling/external-assets-base": "0.0.0",
    "@kogito-tooling/i18n-common-dictionary": "0.0.0",
    "@kogito-tooling/kie-bc-editors": "0.0.0",
    "electron": "^12.0.11",
    "react-router": "^5.2.0",
    "react-router-dom": "^5.2.0"
  },
  "devDependencies": {
    "@kogito-tooling/build-env": "0.0.0"
  },
  "scripts": {
    "start": "electron dist --disable-gpu",
    "rebuild": "electron-rebuild -f -w sqlite3",
    "lint": "yarn run run-script-if --bool \"$(build-env global.build.lint)\" --then \"yarn eslint ./src --ext .ts,.tsx\"",
    "test": "yarn run run-script-if --bool \"$(build-env global.build.test)\" --then \"jest --silent --verbose\"",
    "test:clearCache": "jest --clearCache",
    "init": "yarn -f",
    "build:dev": "rimraf dist && webpack --env dev",
    "clean:prod": "rimraf out && mkdir out",
    "compile:prod": "yarn lint && yarn test && rimraf dist && webpack",
    "package:prod:linux": "cross-var \"electron-packager . \\\"Business Modeler Preview\\\" --out=out --platform=linux --arch=x64 --overwrite --icon=./build/icon.icns --ignore=\\\"^/node_modules|^/out|^/src|^/static|^/README|^/LICENSE|^/tsconfig.json|^/webpack.config.js|^/yarn-error.log\\\" && cp README out/Business\\ Modeler\\ Preview-linux-x64/ && (cd out && tar -pcvzf Business\\ Modeler\\ Preview-linux-x64.tar.gz Business\\ Modeler\\ Preview-linux-x64/)\"",
    "package:prod:darwin": "cross-var \"electron-packager . \\\"Business Modeler Preview\\\" --out=out --platform=darwin --arch=x64 --overwrite --icon=./build/icon.icns --ignore=\\\"^/node_modules|^/out|^/src|^/static|^/README|^/LICENSE|^/tsconfig.json|^/webpack.config.js|^/yarn-error.log\\\" && cp README out/Business\\ Modeler\\ Preview-darwin-x64/ && (cd out && zip -qry \\\"Business Modeler Preview-darwin-x64.zip\\\" \\\"Business Modeler Preview-darwin-x64\\\")\"",
    "package:prod:win32": "cross-var \"electron-packager . \\\"Business Modeler Preview\\\" --out=out --platform=win32 --arch=x64 --overwrite --icon=./build/icon.ico --ignore=\\\"/node_modules\\\" --ignore=\\\"/out\\\" --ignore=\\\"/src\\\" --ignore=\\\"/static\\\" --ignore=\\\"/README\\\" --ignore=\\\"/LICENSE\\\" --ignore=\\\"/tsconfig.json\\\" --ignore=\\\"/webpack.config.js\\\" --ignore=\\\"/yarn-error.log\\\" && copy README \\\"out\\Business Modeler Preview-win32-x64/\\\"\"",
    "package:prod": "run-script-os",
    "build:prod:linux": "yarn run clean:prod && yarn run compile:prod && yarn run package:prod:linux",
    "build:prod:darwin": "yarn run clean:prod && yarn run compile:prod && yarn run package:prod:darwin",
    "build:prod:win32": "yarn run clean:prod && yarn run compile:prod && yarn run package:prod:win32",
    "build:prod:all": "yarn run clean:prod && yarn run compile:prod && yarn run package:prod:linux && yarn run package:prod:darwin && yarn run package:prod:win32",
    "build:prod": "run-script-os && yarn test:it",
    "test:it:linux:darwin": "yarn run run-script-if --bool \"$(build-env global.build.testIT)\" --then \"yarn rimraf ./dist-it-tests\" \"jest --config it-tests/jest.config.json --runInBand --forceExit --verbose\"",
    "test:it:win32": "echo \"Not supported\"",
    "test:it": "run-script-os"
  },
  "babel": {
    "presets": [
      [
        "@babel/env",
        {
          "targets": {
            "node": "current"
          }
        }
      ],
      "@babel/react"
    ]
  },
  "files": [
    "**/*"
  ]
}
