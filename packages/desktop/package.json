{
  "private": true,
  "name": "@kie-tools/desktop",
  "version": "0.0.0",
  "description": "",
  "license": "Apache-2.0",
  "homepage": "https://github.com/kiegroup/kie-tools",
  "repository": {
    "type": "git",
    "url": "https://github.com/kiegroup/kie-tools.git"
  },
  "bugs": {
    "url": "https://github.com/kiegroup/kie-tools/issues"
  },
  "types": "./dist/index.d.ts",
  "main": "dist/index.js",
  "files": [
    "**/*"
  ],
  "scripts": {
    "build:dev": "rimraf dist && webpack --env dev",
    "build:prod": "run-script-os && pnpm test:it",
    "build:prod:all": "pnpm clean:prod && pnpm compile:prod && pnpm package:prod:linux && pnpm package:prod:darwin && pnpm package:prod:win32",
    "build:prod:darwin": "pnpm clean:prod && pnpm compile:prod && pnpm package:prod:darwin",
    "build:prod:linux": "pnpm clean:prod && pnpm compile:prod && pnpm package:prod:linux",
    "build:prod:win32": "pnpm clean:prod && pnpm compile:prod && pnpm package:prod:win32",
    "clean:prod": "rimraf out && mkdir out",
    "compile:prod": "pnpm lint && pnpm test && rimraf dist && webpack",
    "init": "pnpm -f",
    "lint": "run-script-if --bool \"$(build-env linters.run)\" --then \"pnpm eslint ./src --ext .ts,.tsx\"",
    "package:prod": "run-script-os",
    "package:prod:darwin": "cross-var \"electron-packager . \\\"Business Modeler Preview\\\" --out=out --platform=darwin --arch=x64 --overwrite --icon=./build/icon.icns --ignore=\\\"^/node_modules|^/out|^/src|^/static|^/README|^/LICENSE|^/tsconfig.json|^/webpack.config.js|^/yarn-error.log\\\" && cp README out/Business\\ Modeler\\ Preview-darwin-x64/ && (cd out && zip -qry \\\"Business Modeler Preview-darwin-x64.zip\\\" \\\"Business Modeler Preview-darwin-x64\\\")\"",
    "package:prod:linux": "cross-var \"electron-packager . \\\"Business Modeler Preview\\\" --out=out --platform=linux --arch=x64 --overwrite --icon=./build/icon.icns --ignore=\\\"^/node_modules|^/out|^/src|^/static|^/README|^/LICENSE|^/tsconfig.json|^/webpack.config.js|^/yarn-error.log\\\" && cp README out/Business\\ Modeler\\ Preview-linux-x64/ && (cd out && tar -pcvzf Business\\ Modeler\\ Preview-linux-x64.tar.gz Business\\ Modeler\\ Preview-linux-x64/)\"",
    "package:prod:win32": "cross-var \"electron-packager . \\\"Business Modeler Preview\\\" --out=out --platform=win32 --arch=x64 --overwrite --icon=./build/icon.ico --ignore=\\\"/node_modules\\\" --ignore=\\\"/out\\\" --ignore=\\\"/src\\\" --ignore=\\\"/static\\\" --ignore=\\\"/README\\\" --ignore=\\\"/LICENSE\\\" --ignore=\\\"/tsconfig.json\\\" --ignore=\\\"/webpack.config.js\\\" --ignore=\\\"/yarn-error.log\\\" && copy README \\\"out\\Business Modeler Preview-win32-x64/\\\"\"",
    "rebuild": "electron-rebuild -f -w sqlite3",
    "start": "electron dist --disable-gpu",
    "test": "run-script-if --ignore-errors \"$(build-env tests.ignoreFailures)\" --bool \"$(build-env tests.run)\" --then \"jest --silent --verbose\"",
    "test:it": "run-script-os",
    "test:it:linux:darwin": "run-script-if --ignore-errors \"$(build-env integrationTests.ignoreFailures)\" --bool \"$(build-env integrationTests.run)\" --then \"pnpm rimraf ./dist-it-tests\" \"jest --config it-tests/jest.config.json --runInBand --forceExit --verbose\"",
    "test:it:win32": "echo \"Not supported\""
  },
  "dependencies": {
    "@kie-tools-core/editor": "workspace:*",
    "@kie-tools-core/i18n": "workspace:*",
    "@kie-tools-core/monaco-editor": "workspace:*",
    "@kie-tools-core/patternfly-base": "workspace:*",
    "@kie-tools/i18n-common-dictionary": "workspace:*",
    "@kie-tools/kie-bc-editors": "workspace:*",
    "@patternfly/react-core": "^4.157.3",
    "@patternfly/react-icons": "^4.11.17",
    "electron": "^12.0.11",
    "react": "^17.0.2",
    "react-dom": "^17.0.2",
    "react-router": "^5.2.1",
    "react-router-dom": "^5.2.1"
  },
  "devDependencies": {
    "@kie-tools-core/webpack-base": "workspace:*",
    "@kie-tools/stunner-editors": "workspace:*",
    "cross-var": "^1.1.0",
    "electron-packager": "^15.2.0",
    "electron-rebuild": "^2.3.5",
    "jest-junit": "^14.0.0",
    "kie-tools-root": "workspace:*",
    "spectron": "^14.0.0"
  },
  "babel": {
    "presets": [
      [
        "@babel/env",
        {
          "targets": {
            "node": "current"
          }
        }
      ],
      "@babel/react"
    ]
  }
}