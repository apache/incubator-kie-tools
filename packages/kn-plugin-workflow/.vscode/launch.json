{
  // Use IntelliSense to learn about possible attributes.
  // Hover to view descriptions of existing attributes.
  // For more information, visit: https://go.microsoft.com/fwlink/?linkid=830387
  "version": "0.2.0",
  "configurations": [
    {
      "name": "Launch create/version",
      "type": "go",
      "request": "launch",
      "mode": "exec",
      "preLaunchTask": "build",
      "postDebugTask": "clean",
      "program": "${workspaceRoot}/${input:bin}",
      "args": ["${input:command}", "${input:command-args-create-version}"]
    },
    {
      "name": "Launch run",
      "type": "go",
      "request": "launch",
      "mode": "exec",
      "preLaunchTask": "build and create",
      "postDebugTask": "clean",
      "program": "${workspaceRoot}/${input:bin}",
      "cwd": "${workspaceFolder}/debug",
      "args": ["run", "${input:command-args-run}"]
    },
    {
      "name": "Launch deploy",
      "type": "go",
      "request": "launch",
      "mode": "exec",
      "preLaunchTask": "build and create",
      "postDebugTask": "clean",
      "program": "${workspaceRoot}/${input:bin}",
      "cwd": "${workspaceFolder}/debug",
      "args": [
        "deploy",
        "${input:command-args-deploy-ns}",
        "${input:command-args-deploy-supportFiles}",
        "${input:command-args-deploy-manifest}"
      ]
    },
    {
      "name": "Launch undeploy",
      "type": "go",
      "request": "launch",
      "mode": "exec",
      "preLaunchTask": "build and create",
      "postDebugTask": "clean",
      "program": "${workspaceRoot}/${input:bin}",
      "cwd": "${workspaceFolder}/debug",
      "args": ["undeploy", "${input:command-args-deploy-ns}", "${input:command-args-deploy-manifest}"]
    },
    {
      "name": "Launch quarkus create",
      "type": "go",
      "request": "launch",
      "mode": "exec",
      "preLaunchTask": "build",
      "postDebugTask": "clean",
      "program": "${workspaceRoot}/${input:bin}",
      "args": [
        "quarkus",
        "create",
        "--name=debug",
        "${input:command-args-quarkus-extensions}",
        "${input:command-args-quarkus-pgi}",
        "${input:command-args-quarkus-version}"
      ]
    },
    {
      "name": "Launch quarkus convert",
      "type": "go",
      "request": "launch",
      "mode": "exec",
      "preLaunchTask": "build and create",
      "postDebugTask": "clean",
      "cwd": "${workspaceFolder}/debug",
      "program": "${workspaceRoot}/${input:bin}",
      "args": [
        "quarkus",
        "convert",
        "${input:command-args-quarkus-extensions}",
        "${input:command-args-quarkus-pgi}",
        "${input:command-args-quarkus-version}"
      ]
    },
    {
      "name": "Launch quarkus deploy",
      "type": "go",
      "request": "launch",
      "mode": "exec",
      "preLaunchTask": "build and quarkus create",
      "postDebugTask": "clean",
      "cwd": "${workspaceFolder}/debug",
      "program": "${workspaceRoot}/${input:bin}",
      "args": ["quarkus", "deploy", "${input:command-args-quarkus-deploy-path}"]
    },
    {
      "name": "Launch quarkus build",
      "type": "go",
      "request": "launch",
      "mode": "exec",
      "preLaunchTask": "build and quarkus create",
      "postDebugTask": "clean",
      "cwd": "${workspaceFolder}/debug",
      "program": "${workspaceRoot}/${input:bin}",
      "args": [
        "quarkus",
        "build",
        "${input:command-args-quarkus-image}",
        "${input:command-args-quarkus-image-registry}",
        "${input:command-args-quarkus-image-repository}",
        "${input:command-args-quarkus-image-name}",
        "${input:command-args-quarkus-image-tag}",
        "${input:command-args-quarkus-jib}",
        "${input:command-args-quarkus-jib-podman}",
        "${input:command-args-quarkus-push}",
        "${input:command-args-quarkus-test}"
      ]
    }
  ],
  "inputs": [
    {
      "id": "bin",
      "type": "pickString",
      "default": "dist/kn-workflow-linux-amd64",
      "description": "The binary",
      "options": [
        "dist/kn-workflow-linux-amd64",
        "dist/kn-workflow-darwin-amd64",
        "dist/kn-workflow-darwin-arm64",
        "dist/kn-workflow-windows-amd64.exe"
      ]
    },
    {
      "id": "command",
      "type": "pickString",
      "default": "version",
      "description": "The command",
      "options": ["create", "version"]
    },
    {
      "id": "command-args-create-version",
      "type": "pickString",
      "default": "",
      "description": "The --name flag is used to specify a name for the project.",
      "options": ["", "--name=debug"]
    },
    {
      "id": "command-args-run",
      "type": "promptString",
      "default": "--port=8080",
      "description": "The --port is used to specify the port to run the project."
    },
    {
      "id": "command-args-deploy-ns",
      "type": "promptString",
      "default": "--namespace=default",
      "description": "The --namespace is used to deploy the project to the said namespace."
    },
    {
      "id": "command-args-deploy-supportFiles",
      "type": "promptString",
      "default": "--supportFilesFolder=${workspaceRoot}/debug/specs",
      "description": "The --supportFilesFolder is used to specify a path for the support files for deployment."
    },
    {
      "id": "command-args-deploy-manifest",
      "type": "promptString",
      "default": "",
      "description": "The --manifestPath is used to specify a path for the mainfest files for deployment."
    },
    {
      "id": "command-args-quarkus-extensions",
      "type": "promptString",
      "default": "",
      "description": "On Quarkus projects, setup project custom Maven extensions, separated with a comma. Usage --extension=${extensions}."
    },
    {
      "id": "command-args-quarkus-pgi",
      "type": "promptString",
      "default": "",
      "description": "The quarkus platform group id. Empty value defaults to io.quarkus.platform. Usage --quarkus-platform-group-id=io.quarkus.platform."
    },
    {
      "id": "command-args-quarkus-version",
      "type": "promptString",
      "default": "",
      "description": "The quarkus version. Usage --quarkus-version=${version}"
    },
    {
      "id": "command-args-quarkus-deploy-path",
      "type": "promptString",
      "default": "",
      "description": "Path to knative deployment files. Usage --path=${path_to_k8_files}"
    },
    {
      "id": "command-args-quarkus-image",
      "type": "promptString",
      "default": "",
      "description": "Full image name in the form of [registry]/[repository]/[name]:[tag]. Usage --image=${image_name}"
    },
    {
      "id": "command-args-quarkus-image-registry",
      "type": "promptString",
      "default": "",
      "description": "Image registry, ex: quay.io, if the --image flag is in use this option overrides image [registry]. Usage --image-registry=${image_registry_name}"
    },
    {
      "id": "command-args-quarkus-image-repository",
      "type": "promptString",
      "default": "",
      "description": "Image repository, ex: registry-user or registry-project, if the --image flag is in use, this option overrides image [repository]. Usage --image-repository=${image_repo_name}"
    },
    {
      "id": "command-args-quarkus-image-name",
      "type": "promptString",
      "default": "",
      "description": "Image name, ex: new-project, if the --image flag is in use, this option overrides the image [name]. Usage --image-name=${image_name}"
    },
    {
      "id": "command-args-quarkus-image-tag",
      "type": "promptString",
      "default": "",
      "description": "Image tag, ex: 1.0, if the --image flag is in use, this option overrides the image [tag]. Usage --image-tag=${image_tag_name}"
    },
    {
      "id": "command-args-quarkus-jib",
      "type": "promptString",
      "default": "",
      "description": "Use Jib extension to generate the image (Docker is still required to save the generated image if push is not used). Usage --jib=true or --jib=false"
    },
    {
      "id": "command-args-quarkus-jib-podman",
      "type": "promptString",
      "default": "",
      "description": "Use Jib extension to generate the image and save it in podman (can't use --push). Usage --jib-podman=true or --jib-podman=false"
    },
    {
      "id": "command-args-quarkus-push",
      "type": "promptString",
      "default": "",
      "description": "Attempt to push the genereated image after being successfully built. Usage --push=true or --push=false"
    },
    {
      "id": "command-args-quarkus-test",
      "type": "promptString",
      "default": "",
      "description": "Run the project tests. Usage --test=true or --test=false."
    }
  ]
}
