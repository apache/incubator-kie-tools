// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`TaskDetailsPage tests Empty state 1`] = `
<TaskDetailsPage
  history={
    Object {
      "action": "POP",
      "block": [Function],
      "createHref": [Function],
      "go": [Function],
      "goBack": [Function],
      "goForward": [Function],
      "length": 1,
      "listen": [Function],
      "location": Object {
        "hash": "",
        "pathname": "/",
        "search": "",
        "state": undefined,
      },
      "push": [MockFunction],
      "replace": [Function],
    }
  }
  location={
    Object {
      "hash": "",
      "pathname": "/",
      "search": "",
      "state": undefined,
    }
  }
  match={
    Object {
      "isExact": false,
      "params": Object {
        "taskId": "45a73767-5da3-49bf-9c40-d533c3e77ef3",
      },
      "path": "",
      "url": "",
    }
  }
>
  <PageSection
    data-ouia-component-id="empty"
    data-ouia-component-type="task-details-page-section"
    data-ouia-safe={true}
  >
    <section
      className="pf-c-page__main-section"
      data-ouia-component-id="empty"
      data-ouia-component-type="task-details-page-section"
      data-ouia-safe={true}
    >
      <Grid
        className="kogito-task-console__full-size"
        hasGutter={true}
        md={1}
      >
        <div
          className="pf-l-grid pf-m-all-1-col-on-md pf-m-gutter kogito-task-console__full-size"
        >
          <GridItem
            className="kogito-task-console__full-size"
            span={12}
          >
            <div
              className="pf-l-grid__item pf-m-12-col kogito-task-console__full-size"
            >
              <Card
                className="kogito-task-console__full-size"
              >
                <article
                  className="pf-c-card kogito-task-console__full-size"
                  data-ouia-component-id="OUIA-Generated-Card-1"
                  data-ouia-component-type="PF4/Card"
                  data-ouia-safe={true}
                  id=""
                >
                  <KogitoEmptyState
                    body="Cannot find task with id '45a73767-5da3-49bf-9c40-d533c3e77ef3'"
                    title="Cannot find task"
                    type={3}
                  >
                    <MockedComponent />
                  </KogitoEmptyState>
                </article>
              </Card>
            </div>
          </GridItem>
        </div>
      </Grid>
    </section>
  </PageSection>
</TaskDetailsPage>
`;

exports[`TaskDetailsPage tests Error notification 1`] = `
<TaskDetailsPage
  history={
    Object {
      "action": "POP",
      "block": [Function],
      "createHref": [Function],
      "go": [Function],
      "goBack": [Function],
      "goForward": [Function],
      "length": 1,
      "listen": [Function],
      "location": Object {
        "hash": "",
        "pathname": "/",
        "search": "",
        "state": undefined,
      },
      "push": [MockFunction],
      "replace": [Function],
    }
  }
  location={
    Object {
      "hash": "",
      "pathname": "/",
      "search": "",
      "state": undefined,
    }
  }
  match={
    Object {
      "isExact": false,
      "params": Object {
        "taskId": "45a73767-5da3-49bf-9c40-d533c3e77ef3",
      },
      "path": "",
      "url": "",
    }
  }
>
  <PageSection
    data-ouia-component-id="header"
    data-ouia-component-type="task-details-page-section"
    data-ouia-safe={true}
    variant="light"
  >
    <section
      className="pf-c-page__main-section pf-m-light"
      data-ouia-component-id="header"
      data-ouia-component-type="task-details-page-section"
      data-ouia-safe={true}
    >
      <Breadcrumb>
        <nav
          aria-label="Breadcrumb"
          className="pf-c-breadcrumb"
          data-ouia-component-id="OUIA-Generated-Breadcrumb-4"
          data-ouia-component-type="PF4/Breadcrumb"
          data-ouia-safe={true}
        >
          <ol
            className="pf-c-breadcrumb__list"
          >
            <BreadcrumbItem
              key=".0"
              showDivider={false}
            >
              <li
                className="pf-c-breadcrumb__item"
              >
                <Link
                  onClick={[Function]}
                  to="/"
                >
                  <LinkAnchor
                    href="/"
                    navigate={[Function]}
                    onClick={[Function]}
                  >
                    <a
                      href="/"
                      onClick={[Function]}
                    >
                      Task Inbox
                    </a>
                  </LinkAnchor>
                </Link>
              </li>
            </BreadcrumbItem>
            <BreadcrumbItem
              key=".1"
              showDivider={true}
            >
              <li
                className="pf-c-breadcrumb__item"
              >
                <span
                  className="pf-c-breadcrumb__item-divider"
                >
                  <AngleRightIcon
                    color="currentColor"
                    noVerticalAlign={false}
                    size="sm"
                  >
                    <svg
                      aria-hidden={true}
                      aria-labelledby={null}
                      fill="currentColor"
                      height="1em"
                      role="img"
                      style={
                        Object {
                          "verticalAlign": "-0.125em",
                        }
                      }
                      viewBox="0 0 256 512"
                      width="1em"
                    >
                      <path
                        d="M224.3 273l-136 136c-9.4 9.4-24.6 9.4-33.9 0l-22.6-22.6c-9.4-9.4-9.4-24.6 0-33.9l96.4-96.4-96.4-96.4c-9.4-9.4-9.4-24.6 0-33.9L54.3 103c9.4-9.4 24.6-9.4 33.9 0l136 136c9.5 9.4 9.5 24.6.1 34z"
                      />
                    </svg>
                  </AngleRightIcon>
                </span>
                Apply for visa
              </li>
            </BreadcrumbItem>
          </ol>
        </nav>
      </Breadcrumb>
      <Flex
        justifyContent={
          Object {
            "default": "justifyContentSpaceBetween",
          }
        }
      >
        <div
          className="pf-l-flex pf-m-justify-content-space-between"
        >
          <FlexItem>
            <div
              className=""
            >
              <PageTitle
                extra={
                  <TaskState
                    task={
                      Object {
                        "actualOwner": null,
                        "adminGroups": Array [],
                        "adminUsers": Array [],
                        "completed": null,
                        "description": null,
                        "endpoint": "http://localhost:8080/travels/9ae7ce3b-d49c-4f35-b843-8ac3d22fa427/VisaApplication/45a73767-5da3-49bf-9c40-d533c3e77ef3",
                        "excludedUsers": Array [],
                        "id": "45a73767-5da3-49bf-9c40-d533c3e77ef3",
                        "inputs": "{\\"Skippable\\":\\"true\\",\\"trip\\":{\\"city\\":\\"Boston\\",\\"country\\":\\"US\\",\\"begin\\":\\"2020-02-19T23:00:00.000+01:00\\",\\"end\\":\\"2020-02-26T23:00:00.000+01:00\\",\\"visaRequired\\":true},\\"TaskName\\":\\"VisaApplication\\",\\"NodeName\\":\\"Apply for visa\\",\\"traveller\\":{\\"firstName\\":\\"Rachel\\",\\"lastName\\":\\"White\\",\\"email\\":\\"rwhite@gorle.com\\",\\"nationality\\":\\"Polish\\",\\"address\\":{\\"street\\":\\"Cabalone\\",\\"city\\":\\"Zerf\\",\\"zipCode\\":\\"765756\\",\\"country\\":\\"Poland\\"}},\\"Priority\\":\\"1\\"}",
                        "lastUpdate": 2020-02-19T11:11:56.282Z,
                        "name": "VisaApplication",
                        "outputs": "{}",
                        "potentialGroups": Array [],
                        "potentialUsers": Array [],
                        "priority": "1",
                        "processId": "travels",
                        "processInstanceId": "9ae7ce3b-d49c-4f35-b843-8ac3d22fa427",
                        "referenceName": "Apply for visa",
                        "rootProcessId": null,
                        "rootProcessInstanceId": null,
                        "started": 2020-02-19T11:11:56.282Z,
                        "state": "Ready",
                      }
                    }
                    variant="label"
                  />
                }
                title="Apply for visa"
              >
                <MockedComponent />
              </PageTitle>
            </div>
          </FlexItem>
          <FlexItem>
            <div
              className=""
            >
              <Button
                id="view-details"
                onClick={[Function]}
                variant="secondary"
              >
                <ButtonBase
                  id="view-details"
                  innerRef={null}
                  onClick={[Function]}
                  variant="secondary"
                >
                  <button
                    aria-disabled={false}
                    aria-label={null}
                    className="pf-c-button pf-m-secondary"
                    data-ouia-component-id="OUIA-Generated-Button-secondary-4"
                    data-ouia-component-type="PF4/Button"
                    data-ouia-safe={true}
                    disabled={false}
                    id="view-details"
                    onClick={[Function]}
                    role={null}
                    type="button"
                  >
                    View details
                  </button>
                </ButtonBase>
              </Button>
            </div>
          </FlexItem>
        </div>
      </Flex>
      <div
        className="kogito-task-console__task-details-page"
      >
        <MockedFormNotification
          notification={
            Object {
              "close": [Function],
              "customAction": Object {
                "label": "Go to Task Inbox",
                "onClick": [Function],
              },
              "details": "Extra info!",
              "message": "Task 'Apply for visa' couldn't transition to phase 'complete'.",
              "type": "error",
            }
          }
        />
      </div>
    </section>
  </PageSection>
  <PageSection
    data-ouia-component-id="content"
    data-ouia-component-type="task-details-page-section"
    data-ouia-safe={true}
  >
    <section
      className="pf-c-page__main-section"
      data-ouia-component-id="content"
      data-ouia-component-type="task-details-page-section"
      data-ouia-safe={true}
    >
      <Drawer
        isExpanded={false}
      >
        <div
          className="pf-c-drawer"
        >
          <DrawerContent
            panelContent={
              <DrawerPanelContent
                className="kogito-task-console__full-size"
              >
                <DrawerHead>
                  <span
                    tabIndex={-1}
                  >
                    <Title
                      headingLevel="h3"
                      size="xl"
                    >
                      Details
                    </Title>
                  </span>
                  <DrawerActions>
                    <DrawerCloseButton
                      onClick={[Function]}
                    />
                  </DrawerActions>
                </DrawerHead>
                <DrawerPanelBody>
                  <EmbeddedTaskDetails
                    targetOrigin="http://localhost"
                    userTask={
                      Object {
                        "actualOwner": null,
                        "adminGroups": Array [],
                        "adminUsers": Array [],
                        "completed": null,
                        "description": null,
                        "endpoint": "http://localhost:8080/travels/9ae7ce3b-d49c-4f35-b843-8ac3d22fa427/VisaApplication/45a73767-5da3-49bf-9c40-d533c3e77ef3",
                        "excludedUsers": Array [],
                        "id": "45a73767-5da3-49bf-9c40-d533c3e77ef3",
                        "inputs": "{\\"Skippable\\":\\"true\\",\\"trip\\":{\\"city\\":\\"Boston\\",\\"country\\":\\"US\\",\\"begin\\":\\"2020-02-19T23:00:00.000+01:00\\",\\"end\\":\\"2020-02-26T23:00:00.000+01:00\\",\\"visaRequired\\":true},\\"TaskName\\":\\"VisaApplication\\",\\"NodeName\\":\\"Apply for visa\\",\\"traveller\\":{\\"firstName\\":\\"Rachel\\",\\"lastName\\":\\"White\\",\\"email\\":\\"rwhite@gorle.com\\",\\"nationality\\":\\"Polish\\",\\"address\\":{\\"street\\":\\"Cabalone\\",\\"city\\":\\"Zerf\\",\\"zipCode\\":\\"765756\\",\\"country\\":\\"Poland\\"}},\\"Priority\\":\\"1\\"}",
                        "lastUpdate": 2020-02-19T11:11:56.282Z,
                        "name": "VisaApplication",
                        "outputs": "{}",
                        "potentialGroups": Array [],
                        "potentialUsers": Array [],
                        "priority": "1",
                        "processId": "travels",
                        "processInstanceId": "9ae7ce3b-d49c-4f35-b843-8ac3d22fa427",
                        "referenceName": "Apply for visa",
                        "rootProcessId": null,
                        "rootProcessInstanceId": null,
                        "started": 2020-02-19T11:11:56.282Z,
                        "state": "Ready",
                      }
                    }
                  />
                </DrawerPanelBody>
              </DrawerPanelContent>
            }
          >
            <DrawerMain>
              <div
                className="pf-c-drawer__main"
              >
                <div
                  className="pf-c-drawer__content"
                >
                  <DrawerContentBody>
                    <div
                      className="pf-c-drawer__body"
                    >
                      <Grid
                        className="kogito-task-console__full-size"
                        hasGutter={true}
                        md={1}
                      >
                        <div
                          className="pf-l-grid pf-m-all-1-col-on-md pf-m-gutter kogito-task-console__full-size"
                        >
                          <GridItem
                            className="kogito-task-console__full-size"
                            span={12}
                          >
                            <div
                              className="pf-l-grid__item pf-m-12-col kogito-task-console__full-size"
                            >
                              <Card
                                className="kogito-task-console__full-size"
                              >
                                <article
                                  className="pf-c-card kogito-task-console__full-size"
                                  data-ouia-component-id="OUIA-Generated-Card-10"
                                  data-ouia-component-type="PF4/Card"
                                  data-ouia-safe={true}
                                  id=""
                                >
                                  <CardBody
                                    className="pf-u-h-100"
                                  >
                                    <div
                                      className="pf-c-card__body pf-u-h-100"
                                    >
                                      <MockedTaskFormContainer
                                        onSubmitError={[Function]}
                                        onSubmitSuccess={[Function]}
                                        userTask={
                                          Object {
                                            "actualOwner": null,
                                            "adminGroups": Array [],
                                            "adminUsers": Array [],
                                            "completed": null,
                                            "description": null,
                                            "endpoint": "http://localhost:8080/travels/9ae7ce3b-d49c-4f35-b843-8ac3d22fa427/VisaApplication/45a73767-5da3-49bf-9c40-d533c3e77ef3",
                                            "excludedUsers": Array [],
                                            "id": "45a73767-5da3-49bf-9c40-d533c3e77ef3",
                                            "inputs": "{\\"Skippable\\":\\"true\\",\\"trip\\":{\\"city\\":\\"Boston\\",\\"country\\":\\"US\\",\\"begin\\":\\"2020-02-19T23:00:00.000+01:00\\",\\"end\\":\\"2020-02-26T23:00:00.000+01:00\\",\\"visaRequired\\":true},\\"TaskName\\":\\"VisaApplication\\",\\"NodeName\\":\\"Apply for visa\\",\\"traveller\\":{\\"firstName\\":\\"Rachel\\",\\"lastName\\":\\"White\\",\\"email\\":\\"rwhite@gorle.com\\",\\"nationality\\":\\"Polish\\",\\"address\\":{\\"street\\":\\"Cabalone\\",\\"city\\":\\"Zerf\\",\\"zipCode\\":\\"765756\\",\\"country\\":\\"Poland\\"}},\\"Priority\\":\\"1\\"}",
                                            "lastUpdate": 2020-02-19T11:11:56.282Z,
                                            "name": "VisaApplication",
                                            "outputs": "{}",
                                            "potentialGroups": Array [],
                                            "potentialUsers": Array [],
                                            "priority": "1",
                                            "processId": "travels",
                                            "processInstanceId": "9ae7ce3b-d49c-4f35-b843-8ac3d22fa427",
                                            "referenceName": "Apply for visa",
                                            "rootProcessId": null,
                                            "rootProcessInstanceId": null,
                                            "started": 2020-02-19T11:11:56.282Z,
                                            "state": "Ready",
                                          }
                                        }
                                      />
                                    </div>
                                  </CardBody>
                                </article>
                              </Card>
                            </div>
                          </GridItem>
                        </div>
                      </Grid>
                    </div>
                  </DrawerContentBody>
                </div>
                <DrawerPanelContent
                  className="kogito-task-console__full-size"
                >
                  <GenerateId
                    prefix="pf-drawer-panel-"
                  >
                    <div
                      className="pf-c-drawer__panel kogito-task-console__full-size"
                      hidden={true}
                      id="pf-drawer-panel-3"
                      onTransitionEnd={[Function]}
                    />
                  </GenerateId>
                </DrawerPanelContent>
              </div>
            </DrawerMain>
          </DrawerContent>
        </div>
      </Drawer>
    </section>
  </PageSection>
</TaskDetailsPage>
`;

exports[`TaskDetailsPage tests Error notification 2`] = `
<TaskDetailsPage
  history={
    Object {
      "action": "POP",
      "block": [Function],
      "createHref": [Function],
      "go": [Function],
      "goBack": [Function],
      "goForward": [Function],
      "length": 1,
      "listen": [Function],
      "location": Object {
        "hash": "",
        "pathname": "/",
        "search": "",
        "state": undefined,
      },
      "push": [MockFunction],
      "replace": [Function],
    }
  }
  location={
    Object {
      "hash": "",
      "pathname": "/",
      "search": "",
      "state": undefined,
    }
  }
  match={
    Object {
      "isExact": false,
      "params": Object {
        "taskId": "45a73767-5da3-49bf-9c40-d533c3e77ef3",
      },
      "path": "",
      "url": "",
    }
  }
>
  <PageSection
    data-ouia-component-id="header"
    data-ouia-component-type="task-details-page-section"
    data-ouia-safe={true}
    variant="light"
  >
    <section
      className="pf-c-page__main-section pf-m-light"
      data-ouia-component-id="header"
      data-ouia-component-type="task-details-page-section"
      data-ouia-safe={true}
    >
      <Breadcrumb>
        <nav
          aria-label="Breadcrumb"
          className="pf-c-breadcrumb"
          data-ouia-component-id="OUIA-Generated-Breadcrumb-4"
          data-ouia-component-type="PF4/Breadcrumb"
          data-ouia-safe={true}
        >
          <ol
            className="pf-c-breadcrumb__list"
          >
            <BreadcrumbItem
              key=".0"
              showDivider={false}
            >
              <li
                className="pf-c-breadcrumb__item"
              >
                <Link
                  onClick={[Function]}
                  to="/"
                >
                  <LinkAnchor
                    href="/"
                    navigate={[Function]}
                    onClick={[Function]}
                  >
                    <a
                      href="/"
                      onClick={[Function]}
                    >
                      Task Inbox
                    </a>
                  </LinkAnchor>
                </Link>
              </li>
            </BreadcrumbItem>
            <BreadcrumbItem
              key=".1"
              showDivider={true}
            >
              <li
                className="pf-c-breadcrumb__item"
              >
                <span
                  className="pf-c-breadcrumb__item-divider"
                >
                  <AngleRightIcon
                    color="currentColor"
                    noVerticalAlign={false}
                    size="sm"
                  >
                    <svg
                      aria-hidden={true}
                      aria-labelledby={null}
                      fill="currentColor"
                      height="1em"
                      role="img"
                      style={
                        Object {
                          "verticalAlign": "-0.125em",
                        }
                      }
                      viewBox="0 0 256 512"
                      width="1em"
                    >
                      <path
                        d="M224.3 273l-136 136c-9.4 9.4-24.6 9.4-33.9 0l-22.6-22.6c-9.4-9.4-9.4-24.6 0-33.9l96.4-96.4-96.4-96.4c-9.4-9.4-9.4-24.6 0-33.9L54.3 103c9.4-9.4 24.6-9.4 33.9 0l136 136c9.5 9.4 9.5 24.6.1 34z"
                      />
                    </svg>
                  </AngleRightIcon>
                </span>
                Apply for visa
              </li>
            </BreadcrumbItem>
          </ol>
        </nav>
      </Breadcrumb>
      <Flex
        justifyContent={
          Object {
            "default": "justifyContentSpaceBetween",
          }
        }
      >
        <div
          className="pf-l-flex pf-m-justify-content-space-between"
        >
          <FlexItem>
            <div
              className=""
            >
              <PageTitle
                extra={
                  <TaskState
                    task={
                      Object {
                        "actualOwner": null,
                        "adminGroups": Array [],
                        "adminUsers": Array [],
                        "completed": null,
                        "description": null,
                        "endpoint": "http://localhost:8080/travels/9ae7ce3b-d49c-4f35-b843-8ac3d22fa427/VisaApplication/45a73767-5da3-49bf-9c40-d533c3e77ef3",
                        "excludedUsers": Array [],
                        "id": "45a73767-5da3-49bf-9c40-d533c3e77ef3",
                        "inputs": "{\\"Skippable\\":\\"true\\",\\"trip\\":{\\"city\\":\\"Boston\\",\\"country\\":\\"US\\",\\"begin\\":\\"2020-02-19T23:00:00.000+01:00\\",\\"end\\":\\"2020-02-26T23:00:00.000+01:00\\",\\"visaRequired\\":true},\\"TaskName\\":\\"VisaApplication\\",\\"NodeName\\":\\"Apply for visa\\",\\"traveller\\":{\\"firstName\\":\\"Rachel\\",\\"lastName\\":\\"White\\",\\"email\\":\\"rwhite@gorle.com\\",\\"nationality\\":\\"Polish\\",\\"address\\":{\\"street\\":\\"Cabalone\\",\\"city\\":\\"Zerf\\",\\"zipCode\\":\\"765756\\",\\"country\\":\\"Poland\\"}},\\"Priority\\":\\"1\\"}",
                        "lastUpdate": 2020-02-19T11:11:56.282Z,
                        "name": "VisaApplication",
                        "outputs": "{}",
                        "potentialGroups": Array [],
                        "potentialUsers": Array [],
                        "priority": "1",
                        "processId": "travels",
                        "processInstanceId": "9ae7ce3b-d49c-4f35-b843-8ac3d22fa427",
                        "referenceName": "Apply for visa",
                        "rootProcessId": null,
                        "rootProcessInstanceId": null,
                        "started": 2020-02-19T11:11:56.282Z,
                        "state": "Ready",
                      }
                    }
                    variant="label"
                  />
                }
                title="Apply for visa"
              >
                <MockedComponent />
              </PageTitle>
            </div>
          </FlexItem>
          <FlexItem>
            <div
              className=""
            >
              <Button
                id="view-details"
                onClick={[Function]}
                variant="secondary"
              >
                <ButtonBase
                  id="view-details"
                  innerRef={null}
                  onClick={[Function]}
                  variant="secondary"
                >
                  <button
                    aria-disabled={false}
                    aria-label={null}
                    className="pf-c-button pf-m-secondary"
                    data-ouia-component-id="OUIA-Generated-Button-secondary-4"
                    data-ouia-component-type="PF4/Button"
                    data-ouia-safe={true}
                    disabled={false}
                    id="view-details"
                    onClick={[Function]}
                    role={null}
                    type="button"
                  >
                    View details
                  </button>
                </ButtonBase>
              </Button>
            </div>
          </FlexItem>
        </div>
      </Flex>
    </section>
  </PageSection>
  <PageSection
    data-ouia-component-id="content"
    data-ouia-component-type="task-details-page-section"
    data-ouia-safe={true}
  >
    <section
      className="pf-c-page__main-section"
      data-ouia-component-id="content"
      data-ouia-component-type="task-details-page-section"
      data-ouia-safe={true}
    >
      <Drawer
        isExpanded={false}
      >
        <div
          className="pf-c-drawer"
        >
          <DrawerContent
            panelContent={
              <DrawerPanelContent
                className="kogito-task-console__full-size"
              >
                <DrawerHead>
                  <span
                    tabIndex={-1}
                  >
                    <Title
                      headingLevel="h3"
                      size="xl"
                    >
                      Details
                    </Title>
                  </span>
                  <DrawerActions>
                    <DrawerCloseButton
                      onClick={[Function]}
                    />
                  </DrawerActions>
                </DrawerHead>
                <DrawerPanelBody>
                  <EmbeddedTaskDetails
                    targetOrigin="http://localhost"
                    userTask={
                      Object {
                        "actualOwner": null,
                        "adminGroups": Array [],
                        "adminUsers": Array [],
                        "completed": null,
                        "description": null,
                        "endpoint": "http://localhost:8080/travels/9ae7ce3b-d49c-4f35-b843-8ac3d22fa427/VisaApplication/45a73767-5da3-49bf-9c40-d533c3e77ef3",
                        "excludedUsers": Array [],
                        "id": "45a73767-5da3-49bf-9c40-d533c3e77ef3",
                        "inputs": "{\\"Skippable\\":\\"true\\",\\"trip\\":{\\"city\\":\\"Boston\\",\\"country\\":\\"US\\",\\"begin\\":\\"2020-02-19T23:00:00.000+01:00\\",\\"end\\":\\"2020-02-26T23:00:00.000+01:00\\",\\"visaRequired\\":true},\\"TaskName\\":\\"VisaApplication\\",\\"NodeName\\":\\"Apply for visa\\",\\"traveller\\":{\\"firstName\\":\\"Rachel\\",\\"lastName\\":\\"White\\",\\"email\\":\\"rwhite@gorle.com\\",\\"nationality\\":\\"Polish\\",\\"address\\":{\\"street\\":\\"Cabalone\\",\\"city\\":\\"Zerf\\",\\"zipCode\\":\\"765756\\",\\"country\\":\\"Poland\\"}},\\"Priority\\":\\"1\\"}",
                        "lastUpdate": 2020-02-19T11:11:56.282Z,
                        "name": "VisaApplication",
                        "outputs": "{}",
                        "potentialGroups": Array [],
                        "potentialUsers": Array [],
                        "priority": "1",
                        "processId": "travels",
                        "processInstanceId": "9ae7ce3b-d49c-4f35-b843-8ac3d22fa427",
                        "referenceName": "Apply for visa",
                        "rootProcessId": null,
                        "rootProcessInstanceId": null,
                        "started": 2020-02-19T11:11:56.282Z,
                        "state": "Ready",
                      }
                    }
                  />
                </DrawerPanelBody>
              </DrawerPanelContent>
            }
          >
            <DrawerMain>
              <div
                className="pf-c-drawer__main"
              >
                <div
                  className="pf-c-drawer__content"
                >
                  <DrawerContentBody>
                    <div
                      className="pf-c-drawer__body"
                    >
                      <Grid
                        className="kogito-task-console__full-size"
                        hasGutter={true}
                        md={1}
                      >
                        <div
                          className="pf-l-grid pf-m-all-1-col-on-md pf-m-gutter kogito-task-console__full-size"
                        >
                          <GridItem
                            className="kogito-task-console__full-size"
                            span={12}
                          >
                            <div
                              className="pf-l-grid__item pf-m-12-col kogito-task-console__full-size"
                            >
                              <Card
                                className="kogito-task-console__full-size"
                              >
                                <article
                                  className="pf-c-card kogito-task-console__full-size"
                                  data-ouia-component-id="OUIA-Generated-Card-10"
                                  data-ouia-component-type="PF4/Card"
                                  data-ouia-safe={true}
                                  id=""
                                >
                                  <CardBody
                                    className="pf-u-h-100"
                                  >
                                    <div
                                      className="pf-c-card__body pf-u-h-100"
                                    >
                                      <MockedTaskFormContainer
                                        onSubmitError={[Function]}
                                        onSubmitSuccess={[Function]}
                                        userTask={
                                          Object {
                                            "actualOwner": null,
                                            "adminGroups": Array [],
                                            "adminUsers": Array [],
                                            "completed": null,
                                            "description": null,
                                            "endpoint": "http://localhost:8080/travels/9ae7ce3b-d49c-4f35-b843-8ac3d22fa427/VisaApplication/45a73767-5da3-49bf-9c40-d533c3e77ef3",
                                            "excludedUsers": Array [],
                                            "id": "45a73767-5da3-49bf-9c40-d533c3e77ef3",
                                            "inputs": "{\\"Skippable\\":\\"true\\",\\"trip\\":{\\"city\\":\\"Boston\\",\\"country\\":\\"US\\",\\"begin\\":\\"2020-02-19T23:00:00.000+01:00\\",\\"end\\":\\"2020-02-26T23:00:00.000+01:00\\",\\"visaRequired\\":true},\\"TaskName\\":\\"VisaApplication\\",\\"NodeName\\":\\"Apply for visa\\",\\"traveller\\":{\\"firstName\\":\\"Rachel\\",\\"lastName\\":\\"White\\",\\"email\\":\\"rwhite@gorle.com\\",\\"nationality\\":\\"Polish\\",\\"address\\":{\\"street\\":\\"Cabalone\\",\\"city\\":\\"Zerf\\",\\"zipCode\\":\\"765756\\",\\"country\\":\\"Poland\\"}},\\"Priority\\":\\"1\\"}",
                                            "lastUpdate": 2020-02-19T11:11:56.282Z,
                                            "name": "VisaApplication",
                                            "outputs": "{}",
                                            "potentialGroups": Array [],
                                            "potentialUsers": Array [],
                                            "priority": "1",
                                            "processId": "travels",
                                            "processInstanceId": "9ae7ce3b-d49c-4f35-b843-8ac3d22fa427",
                                            "referenceName": "Apply for visa",
                                            "rootProcessId": null,
                                            "rootProcessInstanceId": null,
                                            "started": 2020-02-19T11:11:56.282Z,
                                            "state": "Ready",
                                          }
                                        }
                                      />
                                    </div>
                                  </CardBody>
                                </article>
                              </Card>
                            </div>
                          </GridItem>
                        </div>
                      </Grid>
                    </div>
                  </DrawerContentBody>
                </div>
                <DrawerPanelContent
                  className="kogito-task-console__full-size"
                >
                  <GenerateId
                    prefix="pf-drawer-panel-"
                  >
                    <div
                      className="pf-c-drawer__panel kogito-task-console__full-size"
                      hidden={true}
                      id="pf-drawer-panel-3"
                      onTransitionEnd={[Function]}
                    />
                  </GenerateId>
                </DrawerPanelContent>
              </div>
            </DrawerMain>
          </DrawerContent>
        </div>
      </Drawer>
    </section>
  </PageSection>
</TaskDetailsPage>
`;

exports[`TaskDetailsPage tests Error state 1`] = `
<TaskDetailsPage
  history={
    Object {
      "action": "POP",
      "block": [Function],
      "createHref": [Function],
      "go": [Function],
      "goBack": [Function],
      "goForward": [Function],
      "length": 1,
      "listen": [Function],
      "location": Object {
        "hash": "",
        "pathname": "/",
        "search": "",
        "state": undefined,
      },
      "push": [MockFunction],
      "replace": [Function],
    }
  }
  location={
    Object {
      "hash": "",
      "pathname": "/",
      "search": "",
      "state": undefined,
    }
  }
  match={
    Object {
      "isExact": false,
      "params": Object {
        "taskId": "45a73767-5da3-49bf-9c40-d533c3e77ef3",
      },
      "path": "",
      "url": "",
    }
  }
>
  <PageSection
    data-ouia-component-id="error"
    data-ouia-component-type="task-details-page-section"
    data-ouia-safe={true}
  >
    <section
      className="pf-c-page__main-section"
      data-ouia-component-id="error"
      data-ouia-component-type="task-details-page-section"
      data-ouia-safe={true}
    >
      <Grid
        className="kogito-task-console__full-size"
        hasGutter={true}
        md={1}
      >
        <div
          className="pf-l-grid pf-m-all-1-col-on-md pf-m-gutter kogito-task-console__full-size"
        >
          <GridItem
            className="kogito-task-console__full-size"
            span={12}
          >
            <div
              className="pf-l-grid__item pf-m-12-col kogito-task-console__full-size"
            >
              <Card
                className="kogito-task-console__full-size"
              >
                <article
                  className="pf-c-card kogito-task-console__full-size"
                  data-ouia-component-id="OUIA-Generated-Card-2"
                  data-ouia-component-type="PF4/Card"
                  data-ouia-safe={true}
                  id=""
                >
                  <ServerErrors
                    error={[Error: Error: Something went wrong on server!]}
                    variant="large"
                  >
                    <MockedComponent />
                  </ServerErrors>
                </article>
              </Card>
            </div>
          </GridItem>
        </div>
      </Grid>
    </section>
  </PageSection>
</TaskDetailsPage>
`;

exports[`TaskDetailsPage tests Normal State 1`] = `
<TaskDetailsPage
  history={
    Object {
      "action": "POP",
      "block": [Function],
      "createHref": [Function],
      "go": [Function],
      "goBack": [Function],
      "goForward": [Function],
      "length": 1,
      "listen": [Function],
      "location": Object {
        "hash": "",
        "pathname": "/",
        "search": "",
        "state": undefined,
      },
      "push": [MockFunction],
      "replace": [Function],
    }
  }
  location={
    Object {
      "hash": "",
      "pathname": "/",
      "search": "",
      "state": undefined,
    }
  }
  match={
    Object {
      "isExact": false,
      "params": Object {
        "taskId": "45a73767-5da3-49bf-9c40-d533c3e77ef3",
      },
      "path": "",
      "url": "",
    }
  }
>
  <PageSection
    data-ouia-component-id="header"
    data-ouia-component-type="task-details-page-section"
    data-ouia-safe={true}
    variant="light"
  >
    <section
      className="pf-c-page__main-section pf-m-light"
      data-ouia-component-id="header"
      data-ouia-component-type="task-details-page-section"
      data-ouia-safe={true}
    >
      <Breadcrumb>
        <nav
          aria-label="Breadcrumb"
          className="pf-c-breadcrumb"
          data-ouia-component-id="OUIA-Generated-Breadcrumb-1"
          data-ouia-component-type="PF4/Breadcrumb"
          data-ouia-safe={true}
        >
          <ol
            className="pf-c-breadcrumb__list"
          >
            <BreadcrumbItem
              key=".0"
              showDivider={false}
            >
              <li
                className="pf-c-breadcrumb__item"
              >
                <Link
                  onClick={[Function]}
                  to="/"
                >
                  <LinkAnchor
                    href="/"
                    navigate={[Function]}
                    onClick={[Function]}
                  >
                    <a
                      href="/"
                      onClick={[Function]}
                    >
                      Task Inbox
                    </a>
                  </LinkAnchor>
                </Link>
              </li>
            </BreadcrumbItem>
            <BreadcrumbItem
              key=".1"
              showDivider={true}
            >
              <li
                className="pf-c-breadcrumb__item"
              >
                <span
                  className="pf-c-breadcrumb__item-divider"
                >
                  <AngleRightIcon
                    color="currentColor"
                    noVerticalAlign={false}
                    size="sm"
                  >
                    <svg
                      aria-hidden={true}
                      aria-labelledby={null}
                      fill="currentColor"
                      height="1em"
                      role="img"
                      style={
                        Object {
                          "verticalAlign": "-0.125em",
                        }
                      }
                      viewBox="0 0 256 512"
                      width="1em"
                    >
                      <path
                        d="M224.3 273l-136 136c-9.4 9.4-24.6 9.4-33.9 0l-22.6-22.6c-9.4-9.4-9.4-24.6 0-33.9l96.4-96.4-96.4-96.4c-9.4-9.4-9.4-24.6 0-33.9L54.3 103c9.4-9.4 24.6-9.4 33.9 0l136 136c9.5 9.4 9.5 24.6.1 34z"
                      />
                    </svg>
                  </AngleRightIcon>
                </span>
                Apply for visa
              </li>
            </BreadcrumbItem>
          </ol>
        </nav>
      </Breadcrumb>
      <Flex
        justifyContent={
          Object {
            "default": "justifyContentSpaceBetween",
          }
        }
      >
        <div
          className="pf-l-flex pf-m-justify-content-space-between"
        >
          <FlexItem>
            <div
              className=""
            >
              <PageTitle
                extra={
                  <TaskState
                    task={
                      Object {
                        "actualOwner": null,
                        "adminGroups": Array [],
                        "adminUsers": Array [],
                        "completed": null,
                        "description": null,
                        "endpoint": "http://localhost:8080/travels/9ae7ce3b-d49c-4f35-b843-8ac3d22fa427/VisaApplication/45a73767-5da3-49bf-9c40-d533c3e77ef3",
                        "excludedUsers": Array [],
                        "id": "45a73767-5da3-49bf-9c40-d533c3e77ef3",
                        "inputs": "{\\"Skippable\\":\\"true\\",\\"trip\\":{\\"city\\":\\"Boston\\",\\"country\\":\\"US\\",\\"begin\\":\\"2020-02-19T23:00:00.000+01:00\\",\\"end\\":\\"2020-02-26T23:00:00.000+01:00\\",\\"visaRequired\\":true},\\"TaskName\\":\\"VisaApplication\\",\\"NodeName\\":\\"Apply for visa\\",\\"traveller\\":{\\"firstName\\":\\"Rachel\\",\\"lastName\\":\\"White\\",\\"email\\":\\"rwhite@gorle.com\\",\\"nationality\\":\\"Polish\\",\\"address\\":{\\"street\\":\\"Cabalone\\",\\"city\\":\\"Zerf\\",\\"zipCode\\":\\"765756\\",\\"country\\":\\"Poland\\"}},\\"Priority\\":\\"1\\"}",
                        "lastUpdate": 2020-02-19T11:11:56.282Z,
                        "name": "VisaApplication",
                        "outputs": "{}",
                        "potentialGroups": Array [],
                        "potentialUsers": Array [],
                        "priority": "1",
                        "processId": "travels",
                        "processInstanceId": "9ae7ce3b-d49c-4f35-b843-8ac3d22fa427",
                        "referenceName": "Apply for visa",
                        "rootProcessId": null,
                        "rootProcessInstanceId": null,
                        "started": 2020-02-19T11:11:56.282Z,
                        "state": "Ready",
                      }
                    }
                    variant="label"
                  />
                }
                title="Apply for visa"
              >
                <MockedComponent />
              </PageTitle>
            </div>
          </FlexItem>
          <FlexItem>
            <div
              className=""
            >
              <Button
                id="view-details"
                onClick={[Function]}
                variant="secondary"
              >
                <ButtonBase
                  id="view-details"
                  innerRef={null}
                  onClick={[Function]}
                  variant="secondary"
                >
                  <button
                    aria-disabled={false}
                    aria-label={null}
                    className="pf-c-button pf-m-secondary"
                    data-ouia-component-id="OUIA-Generated-Button-secondary-1"
                    data-ouia-component-type="PF4/Button"
                    data-ouia-safe={true}
                    disabled={false}
                    id="view-details"
                    onClick={[Function]}
                    role={null}
                    type="button"
                  >
                    View details
                  </button>
                </ButtonBase>
              </Button>
            </div>
          </FlexItem>
        </div>
      </Flex>
    </section>
  </PageSection>
  <PageSection
    data-ouia-component-id="content"
    data-ouia-component-type="task-details-page-section"
    data-ouia-safe={true}
  >
    <section
      className="pf-c-page__main-section"
      data-ouia-component-id="content"
      data-ouia-component-type="task-details-page-section"
      data-ouia-safe={true}
    >
      <Drawer
        isExpanded={false}
      >
        <div
          className="pf-c-drawer"
        >
          <DrawerContent
            panelContent={
              <DrawerPanelContent
                className="kogito-task-console__full-size"
              >
                <DrawerHead>
                  <span
                    tabIndex={-1}
                  >
                    <Title
                      headingLevel="h3"
                      size="xl"
                    >
                      Details
                    </Title>
                  </span>
                  <DrawerActions>
                    <DrawerCloseButton
                      onClick={[Function]}
                    />
                  </DrawerActions>
                </DrawerHead>
                <DrawerPanelBody>
                  <EmbeddedTaskDetails
                    targetOrigin="http://localhost"
                    userTask={
                      Object {
                        "actualOwner": null,
                        "adminGroups": Array [],
                        "adminUsers": Array [],
                        "completed": null,
                        "description": null,
                        "endpoint": "http://localhost:8080/travels/9ae7ce3b-d49c-4f35-b843-8ac3d22fa427/VisaApplication/45a73767-5da3-49bf-9c40-d533c3e77ef3",
                        "excludedUsers": Array [],
                        "id": "45a73767-5da3-49bf-9c40-d533c3e77ef3",
                        "inputs": "{\\"Skippable\\":\\"true\\",\\"trip\\":{\\"city\\":\\"Boston\\",\\"country\\":\\"US\\",\\"begin\\":\\"2020-02-19T23:00:00.000+01:00\\",\\"end\\":\\"2020-02-26T23:00:00.000+01:00\\",\\"visaRequired\\":true},\\"TaskName\\":\\"VisaApplication\\",\\"NodeName\\":\\"Apply for visa\\",\\"traveller\\":{\\"firstName\\":\\"Rachel\\",\\"lastName\\":\\"White\\",\\"email\\":\\"rwhite@gorle.com\\",\\"nationality\\":\\"Polish\\",\\"address\\":{\\"street\\":\\"Cabalone\\",\\"city\\":\\"Zerf\\",\\"zipCode\\":\\"765756\\",\\"country\\":\\"Poland\\"}},\\"Priority\\":\\"1\\"}",
                        "lastUpdate": 2020-02-19T11:11:56.282Z,
                        "name": "VisaApplication",
                        "outputs": "{}",
                        "potentialGroups": Array [],
                        "potentialUsers": Array [],
                        "priority": "1",
                        "processId": "travels",
                        "processInstanceId": "9ae7ce3b-d49c-4f35-b843-8ac3d22fa427",
                        "referenceName": "Apply for visa",
                        "rootProcessId": null,
                        "rootProcessInstanceId": null,
                        "started": 2020-02-19T11:11:56.282Z,
                        "state": "Ready",
                      }
                    }
                  />
                </DrawerPanelBody>
              </DrawerPanelContent>
            }
          >
            <DrawerMain>
              <div
                className="pf-c-drawer__main"
              >
                <div
                  className="pf-c-drawer__content"
                >
                  <DrawerContentBody>
                    <div
                      className="pf-c-drawer__body"
                    >
                      <Grid
                        className="kogito-task-console__full-size"
                        hasGutter={true}
                        md={1}
                      >
                        <div
                          className="pf-l-grid pf-m-all-1-col-on-md pf-m-gutter kogito-task-console__full-size"
                        >
                          <GridItem
                            className="kogito-task-console__full-size"
                            span={12}
                          >
                            <div
                              className="pf-l-grid__item pf-m-12-col kogito-task-console__full-size"
                            >
                              <Card
                                className="kogito-task-console__full-size"
                              >
                                <article
                                  className="pf-c-card kogito-task-console__full-size"
                                  data-ouia-component-id="OUIA-Generated-Card-4"
                                  data-ouia-component-type="PF4/Card"
                                  data-ouia-safe={true}
                                  id=""
                                >
                                  <CardBody
                                    className="pf-u-h-100"
                                  >
                                    <div
                                      className="pf-c-card__body pf-u-h-100"
                                    >
                                      <MockedTaskFormContainer
                                        onSubmitError={[Function]}
                                        onSubmitSuccess={[Function]}
                                        userTask={
                                          Object {
                                            "actualOwner": null,
                                            "adminGroups": Array [],
                                            "adminUsers": Array [],
                                            "completed": null,
                                            "description": null,
                                            "endpoint": "http://localhost:8080/travels/9ae7ce3b-d49c-4f35-b843-8ac3d22fa427/VisaApplication/45a73767-5da3-49bf-9c40-d533c3e77ef3",
                                            "excludedUsers": Array [],
                                            "id": "45a73767-5da3-49bf-9c40-d533c3e77ef3",
                                            "inputs": "{\\"Skippable\\":\\"true\\",\\"trip\\":{\\"city\\":\\"Boston\\",\\"country\\":\\"US\\",\\"begin\\":\\"2020-02-19T23:00:00.000+01:00\\",\\"end\\":\\"2020-02-26T23:00:00.000+01:00\\",\\"visaRequired\\":true},\\"TaskName\\":\\"VisaApplication\\",\\"NodeName\\":\\"Apply for visa\\",\\"traveller\\":{\\"firstName\\":\\"Rachel\\",\\"lastName\\":\\"White\\",\\"email\\":\\"rwhite@gorle.com\\",\\"nationality\\":\\"Polish\\",\\"address\\":{\\"street\\":\\"Cabalone\\",\\"city\\":\\"Zerf\\",\\"zipCode\\":\\"765756\\",\\"country\\":\\"Poland\\"}},\\"Priority\\":\\"1\\"}",
                                            "lastUpdate": 2020-02-19T11:11:56.282Z,
                                            "name": "VisaApplication",
                                            "outputs": "{}",
                                            "potentialGroups": Array [],
                                            "potentialUsers": Array [],
                                            "priority": "1",
                                            "processId": "travels",
                                            "processInstanceId": "9ae7ce3b-d49c-4f35-b843-8ac3d22fa427",
                                            "referenceName": "Apply for visa",
                                            "rootProcessId": null,
                                            "rootProcessInstanceId": null,
                                            "started": 2020-02-19T11:11:56.282Z,
                                            "state": "Ready",
                                          }
                                        }
                                      />
                                    </div>
                                  </CardBody>
                                </article>
                              </Card>
                            </div>
                          </GridItem>
                        </div>
                      </Grid>
                    </div>
                  </DrawerContentBody>
                </div>
                <DrawerPanelContent
                  className="kogito-task-console__full-size"
                >
                  <GenerateId
                    prefix="pf-drawer-panel-"
                  >
                    <div
                      className="pf-c-drawer__panel kogito-task-console__full-size"
                      hidden={true}
                      id="pf-drawer-panel-0"
                      onTransitionEnd={[Function]}
                    />
                  </GenerateId>
                </DrawerPanelContent>
              </div>
            </DrawerMain>
          </DrawerContent>
        </div>
      </Drawer>
    </section>
  </PageSection>
</TaskDetailsPage>
`;

exports[`TaskDetailsPage tests Success notification 1`] = `
<TaskDetailsPage
  history={
    Object {
      "action": "POP",
      "block": [Function],
      "createHref": [Function],
      "go": [Function],
      "goBack": [Function],
      "goForward": [Function],
      "length": 1,
      "listen": [Function],
      "location": Object {
        "hash": "",
        "pathname": "/",
        "search": "",
        "state": undefined,
      },
      "push": [MockFunction],
      "replace": [Function],
    }
  }
  location={
    Object {
      "hash": "",
      "pathname": "/",
      "search": "",
      "state": undefined,
    }
  }
  match={
    Object {
      "isExact": false,
      "params": Object {
        "taskId": "45a73767-5da3-49bf-9c40-d533c3e77ef3",
      },
      "path": "",
      "url": "",
    }
  }
>
  <PageSection
    data-ouia-component-id="header"
    data-ouia-component-type="task-details-page-section"
    data-ouia-safe={true}
    variant="light"
  >
    <section
      className="pf-c-page__main-section pf-m-light"
      data-ouia-component-id="header"
      data-ouia-component-type="task-details-page-section"
      data-ouia-safe={true}
    >
      <Breadcrumb>
        <nav
          aria-label="Breadcrumb"
          className="pf-c-breadcrumb"
          data-ouia-component-id="OUIA-Generated-Breadcrumb-2"
          data-ouia-component-type="PF4/Breadcrumb"
          data-ouia-safe={true}
        >
          <ol
            className="pf-c-breadcrumb__list"
          >
            <BreadcrumbItem
              key=".0"
              showDivider={false}
            >
              <li
                className="pf-c-breadcrumb__item"
              >
                <Link
                  onClick={[Function]}
                  to="/"
                >
                  <LinkAnchor
                    href="/"
                    navigate={[Function]}
                    onClick={[Function]}
                  >
                    <a
                      href="/"
                      onClick={[Function]}
                    >
                      Task Inbox
                    </a>
                  </LinkAnchor>
                </Link>
              </li>
            </BreadcrumbItem>
            <BreadcrumbItem
              key=".1"
              showDivider={true}
            >
              <li
                className="pf-c-breadcrumb__item"
              >
                <span
                  className="pf-c-breadcrumb__item-divider"
                >
                  <AngleRightIcon
                    color="currentColor"
                    noVerticalAlign={false}
                    size="sm"
                  >
                    <svg
                      aria-hidden={true}
                      aria-labelledby={null}
                      fill="currentColor"
                      height="1em"
                      role="img"
                      style={
                        Object {
                          "verticalAlign": "-0.125em",
                        }
                      }
                      viewBox="0 0 256 512"
                      width="1em"
                    >
                      <path
                        d="M224.3 273l-136 136c-9.4 9.4-24.6 9.4-33.9 0l-22.6-22.6c-9.4-9.4-9.4-24.6 0-33.9l96.4-96.4-96.4-96.4c-9.4-9.4-9.4-24.6 0-33.9L54.3 103c9.4-9.4 24.6-9.4 33.9 0l136 136c9.5 9.4 9.5 24.6.1 34z"
                      />
                    </svg>
                  </AngleRightIcon>
                </span>
                Apply for visa
              </li>
            </BreadcrumbItem>
          </ol>
        </nav>
      </Breadcrumb>
      <Flex
        justifyContent={
          Object {
            "default": "justifyContentSpaceBetween",
          }
        }
      >
        <div
          className="pf-l-flex pf-m-justify-content-space-between"
        >
          <FlexItem>
            <div
              className=""
            >
              <PageTitle
                extra={
                  <TaskState
                    task={
                      Object {
                        "actualOwner": null,
                        "adminGroups": Array [],
                        "adminUsers": Array [],
                        "completed": null,
                        "description": null,
                        "endpoint": "http://localhost:8080/travels/9ae7ce3b-d49c-4f35-b843-8ac3d22fa427/VisaApplication/45a73767-5da3-49bf-9c40-d533c3e77ef3",
                        "excludedUsers": Array [],
                        "id": "45a73767-5da3-49bf-9c40-d533c3e77ef3",
                        "inputs": "{\\"Skippable\\":\\"true\\",\\"trip\\":{\\"city\\":\\"Boston\\",\\"country\\":\\"US\\",\\"begin\\":\\"2020-02-19T23:00:00.000+01:00\\",\\"end\\":\\"2020-02-26T23:00:00.000+01:00\\",\\"visaRequired\\":true},\\"TaskName\\":\\"VisaApplication\\",\\"NodeName\\":\\"Apply for visa\\",\\"traveller\\":{\\"firstName\\":\\"Rachel\\",\\"lastName\\":\\"White\\",\\"email\\":\\"rwhite@gorle.com\\",\\"nationality\\":\\"Polish\\",\\"address\\":{\\"street\\":\\"Cabalone\\",\\"city\\":\\"Zerf\\",\\"zipCode\\":\\"765756\\",\\"country\\":\\"Poland\\"}},\\"Priority\\":\\"1\\"}",
                        "lastUpdate": 2020-02-19T11:11:56.282Z,
                        "name": "VisaApplication",
                        "outputs": "{}",
                        "potentialGroups": Array [],
                        "potentialUsers": Array [],
                        "priority": "1",
                        "processId": "travels",
                        "processInstanceId": "9ae7ce3b-d49c-4f35-b843-8ac3d22fa427",
                        "referenceName": "Apply for visa",
                        "rootProcessId": null,
                        "rootProcessInstanceId": null,
                        "started": 2020-02-19T11:11:56.282Z,
                        "state": "Ready",
                      }
                    }
                    variant="label"
                  />
                }
                title="Apply for visa"
              >
                <MockedComponent />
              </PageTitle>
            </div>
          </FlexItem>
          <FlexItem>
            <div
              className=""
            >
              <Button
                id="view-details"
                onClick={[Function]}
                variant="secondary"
              >
                <ButtonBase
                  id="view-details"
                  innerRef={null}
                  onClick={[Function]}
                  variant="secondary"
                >
                  <button
                    aria-disabled={false}
                    aria-label={null}
                    className="pf-c-button pf-m-secondary"
                    data-ouia-component-id="OUIA-Generated-Button-secondary-2"
                    data-ouia-component-type="PF4/Button"
                    data-ouia-safe={true}
                    disabled={false}
                    id="view-details"
                    onClick={[Function]}
                    role={null}
                    type="button"
                  >
                    View details
                  </button>
                </ButtonBase>
              </Button>
            </div>
          </FlexItem>
        </div>
      </Flex>
      <div
        className="kogito-task-console__task-details-page"
      >
        <MockedFormNotification
          notification={
            Object {
              "close": [Function],
              "customAction": Object {
                "label": "Go to Task Inbox",
                "onClick": [Function],
              },
              "details": undefined,
              "message": "Task 'Apply for visa' successfully transitioned to phase 'complete'.",
              "type": "success",
            }
          }
        />
      </div>
    </section>
  </PageSection>
  <PageSection
    data-ouia-component-id="content"
    data-ouia-component-type="task-details-page-section"
    data-ouia-safe={true}
  >
    <section
      className="pf-c-page__main-section"
      data-ouia-component-id="content"
      data-ouia-component-type="task-details-page-section"
      data-ouia-safe={true}
    >
      <Drawer
        isExpanded={false}
      >
        <div
          className="pf-c-drawer"
        >
          <DrawerContent
            panelContent={
              <DrawerPanelContent
                className="kogito-task-console__full-size"
              >
                <DrawerHead>
                  <span
                    tabIndex={-1}
                  >
                    <Title
                      headingLevel="h3"
                      size="xl"
                    >
                      Details
                    </Title>
                  </span>
                  <DrawerActions>
                    <DrawerCloseButton
                      onClick={[Function]}
                    />
                  </DrawerActions>
                </DrawerHead>
                <DrawerPanelBody>
                  <EmbeddedTaskDetails
                    targetOrigin="http://localhost"
                    userTask={
                      Object {
                        "actualOwner": null,
                        "adminGroups": Array [],
                        "adminUsers": Array [],
                        "completed": null,
                        "description": null,
                        "endpoint": "http://localhost:8080/travels/9ae7ce3b-d49c-4f35-b843-8ac3d22fa427/VisaApplication/45a73767-5da3-49bf-9c40-d533c3e77ef3",
                        "excludedUsers": Array [],
                        "id": "45a73767-5da3-49bf-9c40-d533c3e77ef3",
                        "inputs": "{\\"Skippable\\":\\"true\\",\\"trip\\":{\\"city\\":\\"Boston\\",\\"country\\":\\"US\\",\\"begin\\":\\"2020-02-19T23:00:00.000+01:00\\",\\"end\\":\\"2020-02-26T23:00:00.000+01:00\\",\\"visaRequired\\":true},\\"TaskName\\":\\"VisaApplication\\",\\"NodeName\\":\\"Apply for visa\\",\\"traveller\\":{\\"firstName\\":\\"Rachel\\",\\"lastName\\":\\"White\\",\\"email\\":\\"rwhite@gorle.com\\",\\"nationality\\":\\"Polish\\",\\"address\\":{\\"street\\":\\"Cabalone\\",\\"city\\":\\"Zerf\\",\\"zipCode\\":\\"765756\\",\\"country\\":\\"Poland\\"}},\\"Priority\\":\\"1\\"}",
                        "lastUpdate": 2020-02-19T11:11:56.282Z,
                        "name": "VisaApplication",
                        "outputs": "{}",
                        "potentialGroups": Array [],
                        "potentialUsers": Array [],
                        "priority": "1",
                        "processId": "travels",
                        "processInstanceId": "9ae7ce3b-d49c-4f35-b843-8ac3d22fa427",
                        "referenceName": "Apply for visa",
                        "rootProcessId": null,
                        "rootProcessInstanceId": null,
                        "started": 2020-02-19T11:11:56.282Z,
                        "state": "Ready",
                      }
                    }
                  />
                </DrawerPanelBody>
              </DrawerPanelContent>
            }
          >
            <DrawerMain>
              <div
                className="pf-c-drawer__main"
              >
                <div
                  className="pf-c-drawer__content"
                >
                  <DrawerContentBody>
                    <div
                      className="pf-c-drawer__body"
                    >
                      <Grid
                        className="kogito-task-console__full-size"
                        hasGutter={true}
                        md={1}
                      >
                        <div
                          className="pf-l-grid pf-m-all-1-col-on-md pf-m-gutter kogito-task-console__full-size"
                        >
                          <GridItem
                            className="kogito-task-console__full-size"
                            span={12}
                          >
                            <div
                              className="pf-l-grid__item pf-m-12-col kogito-task-console__full-size"
                            >
                              <Card
                                className="kogito-task-console__full-size"
                              >
                                <article
                                  className="pf-c-card kogito-task-console__full-size"
                                  data-ouia-component-id="OUIA-Generated-Card-6"
                                  data-ouia-component-type="PF4/Card"
                                  data-ouia-safe={true}
                                  id=""
                                >
                                  <CardBody
                                    className="pf-u-h-100"
                                  >
                                    <div
                                      className="pf-c-card__body pf-u-h-100"
                                    >
                                      <MockedTaskFormContainer
                                        onSubmitError={[Function]}
                                        onSubmitSuccess={[Function]}
                                        userTask={
                                          Object {
                                            "actualOwner": null,
                                            "adminGroups": Array [],
                                            "adminUsers": Array [],
                                            "completed": null,
                                            "description": null,
                                            "endpoint": "http://localhost:8080/travels/9ae7ce3b-d49c-4f35-b843-8ac3d22fa427/VisaApplication/45a73767-5da3-49bf-9c40-d533c3e77ef3",
                                            "excludedUsers": Array [],
                                            "id": "45a73767-5da3-49bf-9c40-d533c3e77ef3",
                                            "inputs": "{\\"Skippable\\":\\"true\\",\\"trip\\":{\\"city\\":\\"Boston\\",\\"country\\":\\"US\\",\\"begin\\":\\"2020-02-19T23:00:00.000+01:00\\",\\"end\\":\\"2020-02-26T23:00:00.000+01:00\\",\\"visaRequired\\":true},\\"TaskName\\":\\"VisaApplication\\",\\"NodeName\\":\\"Apply for visa\\",\\"traveller\\":{\\"firstName\\":\\"Rachel\\",\\"lastName\\":\\"White\\",\\"email\\":\\"rwhite@gorle.com\\",\\"nationality\\":\\"Polish\\",\\"address\\":{\\"street\\":\\"Cabalone\\",\\"city\\":\\"Zerf\\",\\"zipCode\\":\\"765756\\",\\"country\\":\\"Poland\\"}},\\"Priority\\":\\"1\\"}",
                                            "lastUpdate": 2020-02-19T11:11:56.282Z,
                                            "name": "VisaApplication",
                                            "outputs": "{}",
                                            "potentialGroups": Array [],
                                            "potentialUsers": Array [],
                                            "priority": "1",
                                            "processId": "travels",
                                            "processInstanceId": "9ae7ce3b-d49c-4f35-b843-8ac3d22fa427",
                                            "referenceName": "Apply for visa",
                                            "rootProcessId": null,
                                            "rootProcessInstanceId": null,
                                            "started": 2020-02-19T11:11:56.282Z,
                                            "state": "Ready",
                                          }
                                        }
                                      />
                                    </div>
                                  </CardBody>
                                </article>
                              </Card>
                            </div>
                          </GridItem>
                        </div>
                      </Grid>
                    </div>
                  </DrawerContentBody>
                </div>
                <DrawerPanelContent
                  className="kogito-task-console__full-size"
                >
                  <GenerateId
                    prefix="pf-drawer-panel-"
                  >
                    <div
                      className="pf-c-drawer__panel kogito-task-console__full-size"
                      hidden={true}
                      id="pf-drawer-panel-1"
                      onTransitionEnd={[Function]}
                    />
                  </GenerateId>
                </DrawerPanelContent>
              </div>
            </DrawerMain>
          </DrawerContent>
        </div>
      </Drawer>
    </section>
  </PageSection>
</TaskDetailsPage>
`;

exports[`TaskDetailsPage tests Success notification 2`] = `
<TaskDetailsPage
  history={
    Object {
      "action": "POP",
      "block": [Function],
      "createHref": [Function],
      "go": [Function],
      "goBack": [Function],
      "goForward": [Function],
      "length": 1,
      "listen": [Function],
      "location": Object {
        "hash": "",
        "pathname": "/",
        "search": "",
        "state": undefined,
      },
      "push": [MockFunction],
      "replace": [Function],
    }
  }
  location={
    Object {
      "hash": "",
      "pathname": "/",
      "search": "",
      "state": undefined,
    }
  }
  match={
    Object {
      "isExact": false,
      "params": Object {
        "taskId": "45a73767-5da3-49bf-9c40-d533c3e77ef3",
      },
      "path": "",
      "url": "",
    }
  }
>
  <PageSection
    data-ouia-component-id="header"
    data-ouia-component-type="task-details-page-section"
    data-ouia-safe={true}
    variant="light"
  >
    <section
      className="pf-c-page__main-section pf-m-light"
      data-ouia-component-id="header"
      data-ouia-component-type="task-details-page-section"
      data-ouia-safe={true}
    >
      <Breadcrumb>
        <nav
          aria-label="Breadcrumb"
          className="pf-c-breadcrumb"
          data-ouia-component-id="OUIA-Generated-Breadcrumb-2"
          data-ouia-component-type="PF4/Breadcrumb"
          data-ouia-safe={true}
        >
          <ol
            className="pf-c-breadcrumb__list"
          >
            <BreadcrumbItem
              key=".0"
              showDivider={false}
            >
              <li
                className="pf-c-breadcrumb__item"
              >
                <Link
                  onClick={[Function]}
                  to="/"
                >
                  <LinkAnchor
                    href="/"
                    navigate={[Function]}
                    onClick={[Function]}
                  >
                    <a
                      href="/"
                      onClick={[Function]}
                    >
                      Task Inbox
                    </a>
                  </LinkAnchor>
                </Link>
              </li>
            </BreadcrumbItem>
            <BreadcrumbItem
              key=".1"
              showDivider={true}
            >
              <li
                className="pf-c-breadcrumb__item"
              >
                <span
                  className="pf-c-breadcrumb__item-divider"
                >
                  <AngleRightIcon
                    color="currentColor"
                    noVerticalAlign={false}
                    size="sm"
                  >
                    <svg
                      aria-hidden={true}
                      aria-labelledby={null}
                      fill="currentColor"
                      height="1em"
                      role="img"
                      style={
                        Object {
                          "verticalAlign": "-0.125em",
                        }
                      }
                      viewBox="0 0 256 512"
                      width="1em"
                    >
                      <path
                        d="M224.3 273l-136 136c-9.4 9.4-24.6 9.4-33.9 0l-22.6-22.6c-9.4-9.4-9.4-24.6 0-33.9l96.4-96.4-96.4-96.4c-9.4-9.4-9.4-24.6 0-33.9L54.3 103c9.4-9.4 24.6-9.4 33.9 0l136 136c9.5 9.4 9.5 24.6.1 34z"
                      />
                    </svg>
                  </AngleRightIcon>
                </span>
                Apply for visa
              </li>
            </BreadcrumbItem>
          </ol>
        </nav>
      </Breadcrumb>
      <Flex
        justifyContent={
          Object {
            "default": "justifyContentSpaceBetween",
          }
        }
      >
        <div
          className="pf-l-flex pf-m-justify-content-space-between"
        >
          <FlexItem>
            <div
              className=""
            >
              <PageTitle
                extra={
                  <TaskState
                    task={
                      Object {
                        "actualOwner": null,
                        "adminGroups": Array [],
                        "adminUsers": Array [],
                        "completed": null,
                        "description": null,
                        "endpoint": "http://localhost:8080/travels/9ae7ce3b-d49c-4f35-b843-8ac3d22fa427/VisaApplication/45a73767-5da3-49bf-9c40-d533c3e77ef3",
                        "excludedUsers": Array [],
                        "id": "45a73767-5da3-49bf-9c40-d533c3e77ef3",
                        "inputs": "{\\"Skippable\\":\\"true\\",\\"trip\\":{\\"city\\":\\"Boston\\",\\"country\\":\\"US\\",\\"begin\\":\\"2020-02-19T23:00:00.000+01:00\\",\\"end\\":\\"2020-02-26T23:00:00.000+01:00\\",\\"visaRequired\\":true},\\"TaskName\\":\\"VisaApplication\\",\\"NodeName\\":\\"Apply for visa\\",\\"traveller\\":{\\"firstName\\":\\"Rachel\\",\\"lastName\\":\\"White\\",\\"email\\":\\"rwhite@gorle.com\\",\\"nationality\\":\\"Polish\\",\\"address\\":{\\"street\\":\\"Cabalone\\",\\"city\\":\\"Zerf\\",\\"zipCode\\":\\"765756\\",\\"country\\":\\"Poland\\"}},\\"Priority\\":\\"1\\"}",
                        "lastUpdate": 2020-02-19T11:11:56.282Z,
                        "name": "VisaApplication",
                        "outputs": "{}",
                        "potentialGroups": Array [],
                        "potentialUsers": Array [],
                        "priority": "1",
                        "processId": "travels",
                        "processInstanceId": "9ae7ce3b-d49c-4f35-b843-8ac3d22fa427",
                        "referenceName": "Apply for visa",
                        "rootProcessId": null,
                        "rootProcessInstanceId": null,
                        "started": 2020-02-19T11:11:56.282Z,
                        "state": "Ready",
                      }
                    }
                    variant="label"
                  />
                }
                title="Apply for visa"
              >
                <MockedComponent />
              </PageTitle>
            </div>
          </FlexItem>
          <FlexItem>
            <div
              className=""
            >
              <Button
                id="view-details"
                onClick={[Function]}
                variant="secondary"
              >
                <ButtonBase
                  id="view-details"
                  innerRef={null}
                  onClick={[Function]}
                  variant="secondary"
                >
                  <button
                    aria-disabled={false}
                    aria-label={null}
                    className="pf-c-button pf-m-secondary"
                    data-ouia-component-id="OUIA-Generated-Button-secondary-2"
                    data-ouia-component-type="PF4/Button"
                    data-ouia-safe={true}
                    disabled={false}
                    id="view-details"
                    onClick={[Function]}
                    role={null}
                    type="button"
                  >
                    View details
                  </button>
                </ButtonBase>
              </Button>
            </div>
          </FlexItem>
        </div>
      </Flex>
    </section>
  </PageSection>
  <PageSection
    data-ouia-component-id="content"
    data-ouia-component-type="task-details-page-section"
    data-ouia-safe={true}
  >
    <section
      className="pf-c-page__main-section"
      data-ouia-component-id="content"
      data-ouia-component-type="task-details-page-section"
      data-ouia-safe={true}
    >
      <Drawer
        isExpanded={false}
      >
        <div
          className="pf-c-drawer"
        >
          <DrawerContent
            panelContent={
              <DrawerPanelContent
                className="kogito-task-console__full-size"
              >
                <DrawerHead>
                  <span
                    tabIndex={-1}
                  >
                    <Title
                      headingLevel="h3"
                      size="xl"
                    >
                      Details
                    </Title>
                  </span>
                  <DrawerActions>
                    <DrawerCloseButton
                      onClick={[Function]}
                    />
                  </DrawerActions>
                </DrawerHead>
                <DrawerPanelBody>
                  <EmbeddedTaskDetails
                    targetOrigin="http://localhost"
                    userTask={
                      Object {
                        "actualOwner": null,
                        "adminGroups": Array [],
                        "adminUsers": Array [],
                        "completed": null,
                        "description": null,
                        "endpoint": "http://localhost:8080/travels/9ae7ce3b-d49c-4f35-b843-8ac3d22fa427/VisaApplication/45a73767-5da3-49bf-9c40-d533c3e77ef3",
                        "excludedUsers": Array [],
                        "id": "45a73767-5da3-49bf-9c40-d533c3e77ef3",
                        "inputs": "{\\"Skippable\\":\\"true\\",\\"trip\\":{\\"city\\":\\"Boston\\",\\"country\\":\\"US\\",\\"begin\\":\\"2020-02-19T23:00:00.000+01:00\\",\\"end\\":\\"2020-02-26T23:00:00.000+01:00\\",\\"visaRequired\\":true},\\"TaskName\\":\\"VisaApplication\\",\\"NodeName\\":\\"Apply for visa\\",\\"traveller\\":{\\"firstName\\":\\"Rachel\\",\\"lastName\\":\\"White\\",\\"email\\":\\"rwhite@gorle.com\\",\\"nationality\\":\\"Polish\\",\\"address\\":{\\"street\\":\\"Cabalone\\",\\"city\\":\\"Zerf\\",\\"zipCode\\":\\"765756\\",\\"country\\":\\"Poland\\"}},\\"Priority\\":\\"1\\"}",
                        "lastUpdate": 2020-02-19T11:11:56.282Z,
                        "name": "VisaApplication",
                        "outputs": "{}",
                        "potentialGroups": Array [],
                        "potentialUsers": Array [],
                        "priority": "1",
                        "processId": "travels",
                        "processInstanceId": "9ae7ce3b-d49c-4f35-b843-8ac3d22fa427",
                        "referenceName": "Apply for visa",
                        "rootProcessId": null,
                        "rootProcessInstanceId": null,
                        "started": 2020-02-19T11:11:56.282Z,
                        "state": "Ready",
                      }
                    }
                  />
                </DrawerPanelBody>
              </DrawerPanelContent>
            }
          >
            <DrawerMain>
              <div
                className="pf-c-drawer__main"
              >
                <div
                  className="pf-c-drawer__content"
                >
                  <DrawerContentBody>
                    <div
                      className="pf-c-drawer__body"
                    >
                      <Grid
                        className="kogito-task-console__full-size"
                        hasGutter={true}
                        md={1}
                      >
                        <div
                          className="pf-l-grid pf-m-all-1-col-on-md pf-m-gutter kogito-task-console__full-size"
                        >
                          <GridItem
                            className="kogito-task-console__full-size"
                            span={12}
                          >
                            <div
                              className="pf-l-grid__item pf-m-12-col kogito-task-console__full-size"
                            >
                              <Card
                                className="kogito-task-console__full-size"
                              >
                                <article
                                  className="pf-c-card kogito-task-console__full-size"
                                  data-ouia-component-id="OUIA-Generated-Card-6"
                                  data-ouia-component-type="PF4/Card"
                                  data-ouia-safe={true}
                                  id=""
                                >
                                  <CardBody
                                    className="pf-u-h-100"
                                  >
                                    <div
                                      className="pf-c-card__body pf-u-h-100"
                                    >
                                      <MockedTaskFormContainer
                                        onSubmitError={[Function]}
                                        onSubmitSuccess={[Function]}
                                        userTask={
                                          Object {
                                            "actualOwner": null,
                                            "adminGroups": Array [],
                                            "adminUsers": Array [],
                                            "completed": null,
                                            "description": null,
                                            "endpoint": "http://localhost:8080/travels/9ae7ce3b-d49c-4f35-b843-8ac3d22fa427/VisaApplication/45a73767-5da3-49bf-9c40-d533c3e77ef3",
                                            "excludedUsers": Array [],
                                            "id": "45a73767-5da3-49bf-9c40-d533c3e77ef3",
                                            "inputs": "{\\"Skippable\\":\\"true\\",\\"trip\\":{\\"city\\":\\"Boston\\",\\"country\\":\\"US\\",\\"begin\\":\\"2020-02-19T23:00:00.000+01:00\\",\\"end\\":\\"2020-02-26T23:00:00.000+01:00\\",\\"visaRequired\\":true},\\"TaskName\\":\\"VisaApplication\\",\\"NodeName\\":\\"Apply for visa\\",\\"traveller\\":{\\"firstName\\":\\"Rachel\\",\\"lastName\\":\\"White\\",\\"email\\":\\"rwhite@gorle.com\\",\\"nationality\\":\\"Polish\\",\\"address\\":{\\"street\\":\\"Cabalone\\",\\"city\\":\\"Zerf\\",\\"zipCode\\":\\"765756\\",\\"country\\":\\"Poland\\"}},\\"Priority\\":\\"1\\"}",
                                            "lastUpdate": 2020-02-19T11:11:56.282Z,
                                            "name": "VisaApplication",
                                            "outputs": "{}",
                                            "potentialGroups": Array [],
                                            "potentialUsers": Array [],
                                            "priority": "1",
                                            "processId": "travels",
                                            "processInstanceId": "9ae7ce3b-d49c-4f35-b843-8ac3d22fa427",
                                            "referenceName": "Apply for visa",
                                            "rootProcessId": null,
                                            "rootProcessInstanceId": null,
                                            "started": 2020-02-19T11:11:56.282Z,
                                            "state": "Ready",
                                          }
                                        }
                                      />
                                    </div>
                                  </CardBody>
                                </article>
                              </Card>
                            </div>
                          </GridItem>
                        </div>
                      </Grid>
                    </div>
                  </DrawerContentBody>
                </div>
                <DrawerPanelContent
                  className="kogito-task-console__full-size"
                >
                  <GenerateId
                    prefix="pf-drawer-panel-"
                  >
                    <div
                      className="pf-c-drawer__panel kogito-task-console__full-size"
                      hidden={true}
                      id="pf-drawer-panel-1"
                      onTransitionEnd={[Function]}
                    />
                  </GenerateId>
                </DrawerPanelContent>
              </div>
            </DrawerMain>
          </DrawerContent>
        </div>
      </Drawer>
    </section>
  </PageSection>
</TaskDetailsPage>
`;
