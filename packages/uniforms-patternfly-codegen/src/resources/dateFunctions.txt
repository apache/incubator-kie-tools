const parseDate = (date?: Date): string => {
  if (!date) {
    return '';
  }
  return date.toISOString().slice(0, -14);
};
const onDateChange = (newValue: string, setter: (date: Date) => void, previousValue?: Date) => {
  if (newValue) {
    const newDate = new Date(newValue);
    const time = parseTime(previousValue);
    if (time !== '') {
      newDate.setHours(parseInt(time && time.split(':')[0]));
      newDate.setMinutes(parseInt(time && time.split(':')[1].split(' ')[0]));
    }
    setter(newDate);
  }
};
const parseTime = (date?: Date): string => {
  if (!date) {
    return '';
  }
  let isAm = true;
  let hours = date.getHours();
  if (hours > 12) {
    hours %= 12;
    isAm = false;
  }
  let minutes = date.getMinutes().toString();
  if(minutes.length == 1) {
    minutes = '0' + minutes;
  }
  return `${hours}:${minutes} ${isAm ? 'AM' : 'PM'}`;
};