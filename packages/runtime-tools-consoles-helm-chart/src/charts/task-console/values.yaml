#
# Licensed to the Apache Software Foundation (ASF) under one
# or more contributor license agreements.  See the NOTICE file
# distributed with this work for additional information
# regarding copyright ownership.  The ASF licenses this file
# to you under the Apache License, Version 2.0 (the
# "License"); you may not use this file except in compliance
# with the License.  You may obtain a copy of the License at
#
#   http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing,
# software distributed under the License is distributed on an
# "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
# KIND, either express or implied.  See the License for the
# specific language governing permissions and limitations
# under the License.
#

# Task Console application
# -- Enable or disable Task Console installation
enabled: true

# -- Component name
name: task-console

# -- Overrides the deployed application name
appNameOverride: ""

# -- Overrides the deployed application version
appVersionOverride: ""

# -- Overrides the Task Console states list
appTaskStatesListOverride: ""

# -- Overrides the Task Console active states list
appTaskActiveStatesListOverride: ""

# @ignored
replicaCount: 1

# -- Image source configuration for the Management Console image
image:
  registry: docker.io
  account: apache
  name: incubator-kie-kogito-task-console
  pullPolicy: IfNotPresent
  tag: "main" # AUTO-GENERATED BY install.js. DO NOT CHANGE MANUALLY.

# -- Pull secrets used when pulling Management Console image
imagePullSecrets: []

# -- Overrides charts name
nameOverride: ""
# -- Overrides charts full name
fullnameOverride: ""

# -- Task Console ServiceAccount configuration (https://kubernetes.io/docs/concepts/security/service-accounts/)
serviceAccount:
  create: true
  annotations: {}
  name: ""

# @ignored
podAnnotations: {}

# @ignored
podSecurityContext: {}

# @ignored
securityContext: {}

# -- Task Console Service configuration (https://kubernetes.io/docs/concepts/services-networking/service/)
service:
  type: ClusterIP
  port: 8080
  targetPort: 8080
  nodePort: ""

# -- Task Console Ingress configuration (https://kubernetes.io/docs/concepts/services-networking/ingress/)
ingress:
  enabled: false
  className: "{{ .Values.global.kubernetesIngressClass }}"
  annotations: {}
  hosts:
    - host: task-console.{{ .Values.global.kubernetesClusterDomain }}
      paths:
        - path: /
          pathType: ImplementationSpecific
  tls: []

# -- Task Console OpenShift Route configuration (https://docs.openshift.com/container-platform/4.14/networking/routes/route-configuration.html)
openshiftRoute:
  enabled: false
  annotations: {}
  host: task-console.{{ .Values.global.openshiftRouteDomain }}
  tls:
    termination: edge
    insecureEdgeTerminationPolicy: None

# @ignored
resources: {}

# -- Task Console HorizontalPodAutoscaler configuration (https://kubernetes.io/docs/tasks/run-application/horizontal-pod-autoscale/)
autoscaling:
  enabled: false
  minReplicas: 1
  maxReplicas: 100
  targetCPUUtilizationPercentage: 80

# @ignored
nodeSelector: {}

# @ignored
tolerations: []

# @ignored
affinity: {}
