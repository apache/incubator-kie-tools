// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`<ListField> tests <ListField> - rendering enabled 1`] = `
<div>
  {"ref":[{"id":"friends.$.name","binding":"friends.$.name"},{"id":"friends.$.age","binding":"friends.$.age"},{"id":"friends.$.country","binding":"friends.$.country"},{"id":"friends.$.married","binding":"friends.$.married"},{"id":"friends.$.know.$","binding":"friends.$.know.$"},{"id":"friends.$.areas","binding":"friends.$.areas"},{"id":"friends.$.birthday","binding":"friends.$.birthday"}],"html":"&lt;div class=\\"form-group\\"&gt;\\n    &lt;div class=\\"card mb-3\\"&gt;\\n    &lt;div class=\\"card-body\\"&gt;\\n        &lt;div class=\\"card-title\\"&gt;\\n            &lt;label class=\\"col-form-label\\"&gt;Friends&lt;/label&gt;\\n            &lt;div id=\\"add-item-friends\\" name=\\"Add Item\\" class=\\"badge badge-pill float-right\\" role=\\"button\\" tabindex=\\"0\\" \\n                onclick=\\"onAddListItemFriends('friends')\\"\\n                onkeydown=\\"onAddListItemFriends('friends')\\"&gt;\\n                &lt;i className=\\"octicon octicon-plus\\"&gt;&lt;span&gt;+&lt;/span&gt;&lt;/i&gt;\\n            &lt;/div&gt;\\n        &lt;/div&gt;\\n        &lt;div role=\\"list\\" id=\\"friends\\"&gt;&lt;/div&gt;\\n    &lt;/div&gt;\\n    &lt;/div&gt;\\n&lt;/div&gt;","disabled":false,"globalFunctions":{"code":"function onDelListItemFriends(name, itemIndex) {\\n  const disabled = false\\n  if (!disabled) {\\n    delListItem(name, undefined, itemIndex, onDelListItemFriends)\\n  }\\n}\\nfunction onAddListItemFriends(name) {\\n  const disabled = false\\n  if (!disabled) {\\n    addListItem(name, undefined, undefined, \`&lt;fieldset&gt;\\n    &lt;legend&gt;Friends&lt;/legend&gt;\\n    &lt;div role=\\"group\\"&gt;\\n\\n        &lt;div class=\\"form-group\\"&gt;\\n    &lt;label for=\\"item-\${name}.$.name\\"&gt;Name&lt;/label&gt;\\n    &lt;input type=\\"text\\"\\n    id=\\"\${name}.$.name\\"\\n    name=\\"\${name}.$.name\\"\\n    class=\\"form-control\\"\\n    \\n    \\n    \\n    value=\\"\\"/&gt;\\n&lt;/div&gt;\\n\\n        &lt;div class=\\"form-group\\"&gt;\\n    &lt;label for=\\"item-\${name}.$.age\\"&gt;Age&lt;/label&gt;\\n    &lt;input\\n    type=\\"number\\"\\n    class=\\"form-control\\"\\n    id=\\"\${name}.$.age\\"\\n    name=\\"\${name}.$.age\\"\\n    \\n    \\n    \\n    \\n    \\n    step=\\"0.01\\"\\n    value=\\"\\"/&gt;\\n&lt;/div&gt;\\n\\n        &lt;div class=\\"form-group\\"&gt;\\n    &lt;label for=\\"item-\${name}.$.country\\"&gt;Country&lt;/label&gt;\\n    &lt;select class=\\"form-control\\" id=\\"\${name}.$.country\\" name=\\"\${name}.$.country\\"&gt;\\n\\n\\n    &lt;option value=\\"US\\"&gt;US&lt;/option&gt;\\n\\n    &lt;option value=\\"Brazil\\"&gt;Brazil&lt;/option&gt;\\n\\n&lt;/select&gt;\\n&lt;/div&gt;\\n\\n        &lt;div class=\\"form-check\\"&gt;\\n    &lt;input type=\\"checkbox\\" id=\\"\${name}.$.married\\" name=\\"\${name}.$.married\\" class=\\"form-check-input\\"/&gt;\\n    &lt;label class=\\"form-check-label\\" for=\\"\${name}.$.married\\"&gt;Married&lt;/label&gt;\\n&lt;/div&gt;\\n\\n        &lt;div class=\\"form-group\\"&gt;\\n    &lt;div class=\\"card mb-3\\"&gt;\\n    &lt;div class=\\"card-body\\"&gt;\\n        &lt;div class=\\"card-title\\"&gt;\\n            &lt;label class=\\"col-form-label\\"&gt;Know&lt;/label&gt;\\n            &lt;div id=\\"add-item-\${name}.$.know\\" name=\\"Add Item\\" class=\\"badge badge-pill float-right\\" role=\\"button\\" tabindex=\\"0\\" \\n                onclick=\\"onAddListItemFriends$Know('\${name}.$.know')\\"\\n                onkeydown=\\"onAddListItemFriends$Know('\${name}.$.know')\\"&gt;\\n                &lt;i className=\\"octicon octicon-plus\\"&gt;&lt;span&gt;+&lt;/span&gt;&lt;/i&gt;\\n            &lt;/div&gt;\\n        &lt;/div&gt;\\n        &lt;div role=\\"list\\" id=\\"\${name}.$.know\\"&gt;&lt;/div&gt;\\n    &lt;/div&gt;\\n    &lt;/div&gt;\\n&lt;/div&gt;\\n\\n        &lt;div class=\\"form-group\\"&gt;\\n    &lt;label for=\\"item-\${name}.$.areas\\"&gt;Areas&lt;/label&gt;\\n    &lt;select class=\\"form-control\\" id=\\"\${name}.$.areas\\" name=\\"\${name}.$.areas\\"&gt;\\n\\n\\n    &lt;option value=\\"Developer\\"&gt;Developer&lt;/option&gt;\\n\\n    &lt;option value=\\"HR\\"&gt;HR&lt;/option&gt;\\n\\n    &lt;option value=\\"UX\\"&gt;UX&lt;/option&gt;\\n\\n&lt;/select&gt;\\n&lt;/div&gt;\\n\\n        &lt;div class=\\"form-group\\"&gt;\\n    &lt;label for=\\"item-\${name}.$.birthday\\"&gt;Birthday&lt;/label&gt;\\n    &lt;input\\n      type=\\"datetime-local\\"\\n      id=\\"\${name}.$.birthday\\"\\n      name=\\"\${name}.$.birthday\\"\\n      class=\\"form-control\\"\\n      \\n      \\n      \\n      \\n      \\n      /&gt;\\n&lt;/div&gt;\\n\\n    &lt;/div&gt;\\n&lt;/fieldset&gt;\`, \\"Friends\\")\\n  }\\n}\\n    \\n\\n    \\n\\n    \\n\\n    \\n\\n    \\n        function onDelListItemFriends$Know(name, itemIndex) {\\n  const disabled = false\\n  if (!disabled) {\\n    delListItem(name, undefined, itemIndex, onDelListItemFriends$Know)\\n  }\\n}\\nfunction onAddListItemFriends$Know(name) {\\n  const disabled = false\\n  if (!disabled) {\\n    addListItem(name, undefined, undefined, \`&lt;div class=\\"form-group\\"&gt;\\n    &lt;label for=\\"item-\${name}.$\\"&gt;Know&lt;/label&gt;\\n    &lt;input type=\\"text\\"\\n    id=\\"\${name}.$\\"\\n    name=\\"\${name}.$\\"\\n    class=\\"form-control\\"\\n    \\n    \\n    \\n    value=\\"\\"/&gt;\\n&lt;/div&gt;\`, \\"Friends$Know\\")\\n  }\\n}\\n    \\n\\n    \\n\\n    \\n","requiredCode":["function delListItem(name, minCount, itemIndex, onDelListItem) {\\n  const formData = getFormData();\\n  const value = accessObjectPath(formData, name) ?? [];\\n\\n  if ((minCount ?? 0) &lt;= value.length) {\\n    document.getElementById(\`item-\${name}.\${itemIndex}\`).remove();\\n  }\\n  \\n  // Re-organize list\\n  Array.from(\\n    document.getElementById(name).childNodes ?? []\\n  ).filter(node =&gt; node.nodeType === 1).forEach((element, index) =&gt; {\\n    const delElement = element.getElementById(\`remove-item-\${name}\`);\\n    delElement.onclick = function () { onDelListItem(name, \`\${index}\`) };\\n    delElement.onkeydown = function () { onDelListItem(name, \`\${index}\`) };\\n\\n    const inputOrSelect = element.querySelector(\\"input, select\\")\\n    inputOrSelect.id = \`\${name}.\${index}\`;\\n    inputOrSelect.name = \`\${name}.\${index}\`;\\n\\n    element.id = \`\${name}.\${index}\`;\\n    element.name = \`\${name}.\${index}\`;\\n  });\\n}\\n\\nfunction addListItem(name, defaultValue, maxCount, childrenHtml, functionName) {\\n  const formData = getFormData();\\n  let value = accessObjectPath(formData, name) ?? [];\\n  const itemIndex = value.length;\\n\\n  if (maxCount !== undefined && (maxCount &gt; value.length)) {\\n    value = value.concat([defaultValue]);\\n  } else {\\n    value = value.concat([defaultValue]);\\n  }\\n\\n  const listContainer = document.getElementById(name);\\n\\n  const newItem = document.createElement(\\"div\\");\\n  newItem.class = \\"row\\"\\n  newItem.id = \`item-\${name}.\${itemIndex}\`\\n  newItem.innerHTML = \`\\n  &lt;div class=\\"col-1\\"&gt;\\n    &lt;span id=\\"remove-item-\${name}\\" name=\\"Remove Item\\" class=\\"badge badge-pill\\" role=\\"button\\" tabindex=\\"0\\" onclick=\\"onDelListItem\${functionName}('\${name}', \${itemIndex})\\" onkeydown=\\"onDelListItem\${functionName}('\${name}', \${itemIndex})\\"&gt;\\n      &lt;i className=\\"octicon octicon-dash\\"&gt;&lt;span&gt;-&lt;/span&gt;&lt;/i&gt;\\n    &lt;/span&gt;\\n  &lt;/div&gt;\\n  &lt;div class=\\"col-11\\"&gt;\\n    \${childrenHtml}\\n  &lt;/div&gt;\\n  \`\\n\\n  listContainer.appendChild(newItem);\\n  const newItemElement = document.getElementById(newItem.id);\\n  [...newItemElement.querySelectorAll('input[id*=\\"$\\"], select[id*=\\"$\\"]')].forEach((el) =&gt; {\\n    if (el.id.split(\\".\\").pop() !== \\"$\\") {\\n      el.id = \`\${name}.\${itemIndex}.\${el.id.split(\\".\\").pop()}\`;\\n      el.name = \`\${name}.\${itemIndex}.\${el.id.split(\\".\\").pop()}\`;\\n    } else {\\n      el.id = \`\${name}.\${itemIndex}\`;\\n      el.name = \`\${name}.\${itemIndex}\`;\\n    }\\n  });\\n\\n  const nestedListContainer = newItemElement.querySelector(\\"div[role='list']\\");\\n  if (nestedListContainer) {\\n    const nestedListPathWithIndex = splitLastOccurrence(nestedListContainer.id, \\"$\\")?.[1]?.replace(\\"$\\", \`\${itemIndex}\`);\\n    nestedListContainer.id = nestedListPathWithIndex ? \`\${name}.\${nestedListPathWithIndex}\` : name;\\n    \\n    // Add Item\\n    const addItem = newItemElement.querySelector('[id^=add-item]');\\n    const addItemPathWithIndex = splitLastOccurrence(addItem.id, \\"$\\")?.[1]?.replace(\\"$\\", \`\${itemIndex}\`);\\n    addItem.id = addItemPathWithIndex ? \`add-item-\${name}.\${addItemPathWithIndex}\` : \`add-item-\${name}\`;\\n    const addItemOnClick = addItem.getAttribute('onclick');\\n    if (addItemOnClick) {\\n      addItem.setAttribute('onclick', getFunctionName(addItemOnClick, itemIndex));\\n    }\\n    const addItemOnKeydown = addItem.getAttribute('onkeydown');\\n    if (addItemOnKeydown) {\\n      addItem.setAttribute('onkeydown', getFunctionName(addItemOnKeydown, itemIndex));\\n    }\\n\\n    // Remove Item\\n    const removeItem = newItemElement.querySelector('[id^=remove-item]');\\n    const removeItemPathWithIndex = splitLastOccurrence(addItem.id, \\"$\\")?.[1]?.replace(\\"$\\", \`\${itemIndex}\`);\\n    removeItem.id = removeItemPathWithIndex ? \`remove-item-\${name}.\${removeItemPathWithIndex}\` : \`remove-item-\${name}\`;\\n    const removeItemOnClick = removeItem.getAttribute('onclick');\\n    if (removeItemOnClick) {\\n      removeItem.setAttribute('onclick', getFunctionName(removeItemOnClick, itemIndex));\\n    }\\n    const removeItemOnKeydown = removeItem.getAttribute('onkeydown');\\n    if (removeItemOnKeydown) {\\n      removeItem.setAttribute('onkeydown', getFunctionName(removeItemOnKeydown, itemIndex));\\n    }\\n  }\\n}\\nfunction getFunctionName(functionCall, itemIndex) {\\n  const [call, argument, end] = functionCall.split('\\\\'');\\n  const [argumentName, argumentNameToReplace] = splitLastOccurrence(argument, \\"$\\");\\n  return \`\${call}'\${argumentName}\${argumentNameToReplace?.replace(\\"$\\", \`\${itemIndex}\`) ?? \\"\\"}'\${end}\`\\n}\\nfunction splitLastOccurrence(str, char) {\\n    const lastIndex = str.lastIndexOf(char);\\n    if (lastIndex === -1) {\\n      return [str]\\n    }\\n    return [str.substring(0, lastIndex), str.substring(lastIndex)];\\n}\\nfunction recursiveGetObjectListValues(objectElement) {\\n  const nested = objectElement.querySelector(\\n    \\"div[role='group'], div[role='list']\\"\\n  );\\n  let results = {};\\n  const inputValues = Array.from(objectElement.childNodes)\\n    .filter((child) =&gt; child.nodeType === Node.ELEMENT_NODE)\\n    .reduce((acc, potentialFormGroups) =&gt; {\\n      if (!potentialFormGroups.matches(\\".form-group\\")) {\\n        return acc;\\n      }\\n      const inputOrSelectElement =\\n        potentialFormGroups.querySelector(\\"input, select\\");\\n        if (inputOrSelectElement) {\\n          acc[inputOrSelectElement.id.split(\\".\\").pop()] =\\n            getListValues(inputOrSelectElement);\\n        }\\n      return acc;\\n    }, {});\\n\\n  if (nested && nested.matches('[role=\\"group\\"]')) {\\n    results = { ...results, ...recursiveGetObjectListValues(nested) };\\n  }\\n  if (nested && nested.matches('[role=\\"list\\"]')) {\\n    results[nested.id.split(\\".\\").pop()] = recursiveGetArrayListValues(nested);\\n  }\\n  return { ...inputValues, ...results };\\n}\\n\\nfunction recursiveGetArrayListValues(arrayElement) {\\n  return Array.from(arrayElement.childNodes)\\n    .filter((child) =&gt; child.nodeType === Node.ELEMENT_NODE)\\n    .map((childElement) =&gt; {\\n      const nestedGroup = childElement.querySelector(\\"div[role='group']\\");\\n      if (nestedGroup) {\\n        return recursiveGetObjectListValues(nestedGroup);\\n      }\\n      const nestedList = childElement.querySelector(\\"div[role='list']\\");\\n      if (nestedList) {\\n        const nestedListChilds = [...nestedList.childNodes]\\n          .filter((child) =&gt; child.nodeType === Node.ELEMENT_NODE)\\n          .filter((el) =&gt; el.matches('[role=\\"list\\"]')\\n        );\\n        return Array.from(nestedListChilds).map((list) =&gt;\\n          recursiveGetArrayListValues(list)\\n        );\\n      }\\n      return getListValues(childElement.querySelector(\\"input, select\\"));\\n    });\\n}\\n\\nfunction getListValues(inputOrSelectElement) {\\n  if (!inputOrSelectElement) {\\n    return null;\\n  }\\n\\n  if (inputOrSelectElement.tagName === \\"INPUT\\") {\\n    if (\\n      inputOrSelectElement.type === \\"text\\" ||\\n      inputOrSelectElement.type === \\"number\\"\\n    ) {\\n      return inputOrSelectElement.value;\\n    }\\n    if (inputOrSelectElement.type === \\"checkbox\\") {\\n      return inputOrSelectElement.checked\\n        ? inputOrSelectElement.value || true\\n        : false;\\n    }\\n    if (inputOrSelectElement.type === \\"radio\\") {\\n      return inputOrSelectElement.checked ? inputOrSelectElement.value : null;\\n    }\\n  } else if (inputOrSelectElement.tagName === \\"SELECT\\") {\\n    if (inputOrSelectElement.multiple) {\\n      return Array.from(inputOrSelectElement.selectedOptions).map(\\n        (opt) =&gt; opt.value\\n      );\\n    }\\n    return inputOrSelectElement.value;\\n  }\\n  return null;\\n}\\nfunction recursiveGetListValues(element) {\\n  const group = element.querySelector(\\"div[role='group']\\");\\n  if (group) {\\n    return recursiveGetObjectListValues(group);\\n  }\\n  const list = element.querySelector(\\"div[role='list']\\");\\n  if (list) {\\n    return recursiveGetArrayListValues(list);\\n  }\\n  return getListValues(element);\\n}\\nfunction accessObjectPath(obj, objPath) {\\n  return objPath.split(\\".\\").reduce((acc, pathPiece) =&gt; acc[pathPiece], obj);\\n}"]},"setValueFromModelCode":{"code":"data?.friends?.forEach((value, index) =&gt; {\\n// Add element;\\nonAddListItemFriends(\`friends\`)\\nconst itemIndex__currentItem = \`friends.\${index}\`\\n\\n    \\n        document.getElementById(\`\${itemIndex__currentItem}$.name\`).value = value?.name ?? \\"\\";\\n    \\n\\n    \\n        document.getElementById(\`\${itemIndex__currentItem}$.age\`).value = value?.age ?? \\"\\";\\n    \\n\\n    \\n        \\nsetSelectValue(\`\${itemIndex__currentItem}$.country\`, value?.country);\\n\\n    \\n\\n    \\n        document.getElementById(\`\${itemIndex__currentItem}$.married\`).checked = value?.married ?? \\"\\";\\n    \\n\\n    \\n        value?.know?.forEach((value, index) =&gt; {\\n// Add element;\\nonAddListItemFriends$Know(\`\${itemIndex__currentItem}$.know\`)\\nconst nested__itemIndex__currentItem = \`\${itemIndex__currentItem}$.know.\${index}\`\\ndocument.getElementById(\`\${nested__itemIndex__currentItem}$\`).value = value ?? \\"\\";\\n});\\n    \\n\\n    \\n        \\nsetSelectValue(\`\${itemIndex__currentItem}$.areas\`, value?.areas);\\n\\n    \\n\\n    \\n        document.getElementById(\`\${itemIndex__currentItem}$.birthday\`).value = value?.birthday ? new Date(value?.birthday).toISOString().slice(0, 16) : \\"\\";\\n    \\n\\n});","requiredCode":[]},"writeValueToModelCode":{"code":"\\nformData.friends = Array.from(document.getElementById(\\"friends\\").childNodes).reduce((values, element) =&gt; {\\n  return [...values, recursiveGetListValues(element)];\\n}, []);\\n","requiredCode":[]}}
</div>
`;
