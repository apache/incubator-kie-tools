// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`<ListField> tests <ListField> - rendering enabled 1`] = `
<div>
  {"ref":[{"id":"friends.$.name","binding":"friends.$.name"},{"id":"friends.$.age","binding":"friends.$.age"},{"id":"friends.$.country","binding":"friends.$.country"},{"id":"friends.$.married","binding":"friends.$.married"},{"id":"friends.$.know.$","binding":"friends.$.know.$"},{"id":"friends.$.areas","binding":"friends.$.areas"},{"id":"friends.$.birthday","binding":"friends.$.birthday"}],"html":"&lt;div class=\\"form-group\\"&gt;\\n    &lt;div class=\\"card mb-3\\"&gt;\\n    &lt;div class=\\"card-body\\"&gt;\\n        &lt;div class=\\"card-title\\"&gt;\\n            &lt;label class=\\"col-form-label\\"&gt;Friends&lt;/label&gt;\\n            &lt;div id=\\"add-item-friends\\" name=\\"Add Item\\" class=\\"badge badge-pill float-right\\" role=\\"button\\" tabindex=\\"0\\" \\n                onclick=\\"onAddListItemFriends('friends')\\"\\n                onkeydown=\\"onAddListItemFriends('friends')\\"&gt;\\n                &lt;i className=\\"octicon octicon-plus\\"&gt;&lt;span&gt;+&lt;/span&gt;&lt;/i&gt;\\n            &lt;/div&gt;\\n        &lt;/div&gt;\\n        &lt;div role=\\"list\\" id=\\"friends\\"&gt;&lt;/div&gt;\\n    &lt;/div&gt;\\n    &lt;/div&gt;\\n&lt;/div&gt;","disabled":false,"globalFunctions":{"code":"function onDelListItemFriends(name, itemIndex) {\\n  const disabled = false\\n  if (!disabled) {\\n    delListItem(name, undefined, itemIndex, onDelListItemFriends)\\n  }\\n}\\nfunction onAddListItemFriends(name, initialSetValues) {\\n  const disabled = false\\n  if (!disabled || initialSetValues) {\\n    addListItem(name, undefined, undefined, \`&lt;fieldset&gt;\\n    &lt;legend&gt;Friends&lt;/legend&gt;\\n    &lt;div role=\\"group\\"&gt;\\n\\n        &lt;div class=\\"form-group\\"&gt;\\n    &lt;label for=\\"item-\${name}.$.name\\"&gt;Name&lt;/label&gt;\\n    &lt;input type=\\"text\\"\\n    id=\\"\${name}.$.name\\"\\n    name=\\"\${name}.$.name\\"\\n    class=\\"form-control\\"\\n    \\n    \\n    \\n    value=\\"\\"/&gt;\\n&lt;/div&gt;\\n\\n        &lt;div class=\\"form-group\\"&gt;\\n    &lt;label for=\\"item-\${name}.$.age\\"&gt;Age&lt;/label&gt;\\n    &lt;input\\n    type=\\"number\\"\\n    class=\\"form-control\\"\\n    id=\\"\${name}.$.age\\"\\n    name=\\"\${name}.$.age\\"\\n    \\n    \\n    \\n    \\n    \\n    step=\\"0.01\\"\\n    value=\\"\\"/&gt;\\n&lt;/div&gt;\\n\\n        &lt;div class=\\"form-group\\"&gt;\\n    &lt;label for=\\"item-\${name}.$.country\\"&gt;Country&lt;/label&gt;\\n    &lt;select class=\\"form-control\\" id=\\"\${name}.$.country\\" name=\\"\${name}.$.country\\"&gt;\\n\\n\\n    &lt;option value=\\"US\\"&gt;US&lt;/option&gt;\\n\\n    &lt;option value=\\"Brazil\\"&gt;Brazil&lt;/option&gt;\\n\\n&lt;/select&gt;\\n&lt;/div&gt;\\n\\n        &lt;div class=\\"form-check\\"&gt;\\n    &lt;input type=\\"checkbox\\" id=\\"\${name}.$.married\\" name=\\"\${name}.$.married\\" class=\\"form-check-input\\"/&gt;\\n    &lt;label class=\\"form-check-label\\" for=\\"\${name}.$.married\\"&gt;Married&lt;/label&gt;\\n&lt;/div&gt;\\n\\n        &lt;div class=\\"form-group\\"&gt;\\n    &lt;div class=\\"card mb-3\\"&gt;\\n    &lt;div class=\\"card-body\\"&gt;\\n        &lt;div class=\\"card-title\\"&gt;\\n            &lt;label class=\\"col-form-label\\"&gt;Know&lt;/label&gt;\\n            &lt;div id=\\"add-item-\${name}.$.know\\" name=\\"Add Item\\" class=\\"badge badge-pill float-right\\" role=\\"button\\" tabindex=\\"0\\" \\n                onclick=\\"onAddListItemFriends$Know('\${name}.$.know')\\"\\n                onkeydown=\\"onAddListItemFriends$Know('\${name}.$.know')\\"&gt;\\n                &lt;i className=\\"octicon octicon-plus\\"&gt;&lt;span&gt;+&lt;/span&gt;&lt;/i&gt;\\n            &lt;/div&gt;\\n        &lt;/div&gt;\\n        &lt;div role=\\"list\\" id=\\"\${name}.$.know\\"&gt;&lt;/div&gt;\\n    &lt;/div&gt;\\n    &lt;/div&gt;\\n&lt;/div&gt;\\n\\n        &lt;div class=\\"form-group\\"&gt;\\n    &lt;label for=\\"item-\${name}.$.areas\\"&gt;Areas&lt;/label&gt;\\n    &lt;select class=\\"form-control\\" id=\\"\${name}.$.areas\\" name=\\"\${name}.$.areas\\"&gt;\\n\\n\\n    &lt;option value=\\"Developer\\"&gt;Developer&lt;/option&gt;\\n\\n    &lt;option value=\\"HR\\"&gt;HR&lt;/option&gt;\\n\\n    &lt;option value=\\"UX\\"&gt;UX&lt;/option&gt;\\n\\n&lt;/select&gt;\\n&lt;/div&gt;\\n\\n        &lt;div class=\\"form-group\\"&gt;\\n    &lt;label for=\\"item-\${name}.$.birthday\\"&gt;Birthday&lt;/label&gt;\\n    &lt;input\\n      type=\\"datetime-local\\"\\n      id=\\"\${name}.$.birthday\\"\\n      name=\\"\${name}.$.birthday\\"\\n      class=\\"form-control\\"\\n      \\n      \\n      \\n      \\n      \\n      /&gt;\\n&lt;/div&gt;\\n\\n    &lt;/div&gt;\\n&lt;/fieldset&gt;\`, \\"Friends\\")\\n  }\\n}\\n    \\n\\n    \\n\\n    \\n\\n    \\n\\n    \\n        function onDelListItemFriends$Know(name, itemIndex) {\\n  const disabled = false\\n  if (!disabled) {\\n    delListItem(name, undefined, itemIndex, onDelListItemFriends$Know)\\n  }\\n}\\nfunction onAddListItemFriends$Know(name, initialSetValues) {\\n  const disabled = false\\n  if (!disabled || initialSetValues) {\\n    addListItem(name, undefined, undefined, \`&lt;div class=\\"form-group\\"&gt;\\n    &lt;label for=\\"item-\${name}.$\\"&gt;Know&lt;/label&gt;\\n    &lt;input type=\\"text\\"\\n    id=\\"\${name}.$\\"\\n    name=\\"\${name}.$\\"\\n    class=\\"form-control\\"\\n    \\n    \\n    \\n    value=\\"\\"/&gt;\\n&lt;/div&gt;\`, \\"Friends$Know\\")\\n  }\\n}\\n    \\n\\n    \\n\\n    \\n","requiredCode":["// List Field Helper functions -- START --\\nfunction delListItem(name, minCount, itemIndex, onDelListItem) {\\n  const formData = getFormData();\\n  const value = accessObjectPath(formData, name) ?? [];\\n\\n  if ((minCount ?? 0) &lt;= value.length) {\\n    document.getElementById(\`item-\${name}.\${itemIndex}\`).remove();\\n  }\\n\\n  // Re-organize list\\n  Array.from(document.getElementById(name).childNodes ?? [])\\n    .filter((node) =&gt; node.nodeType === 1)\\n    .forEach((element, index) =&gt; {\\n      const delElement = element.querySelector(\`[id='remove-item-\${name}']\`);\\n      delElement.onclick = function () {\\n        onDelListItem(name, \`\${index}\`);\\n      };\\n      delElement.onkeydown = function () {\\n        onDelListItem(name, \`\${index}\`);\\n      };\\n\\n      const inputOrSelect = element.querySelector(\\"input, select\\");\\n      inputOrSelect.id = \`\${name}.\${index}\`;\\n      inputOrSelect.name = \`\${name}.\${index}\`;\\n\\n      element.id = \`item-\${name}.\${index}\`;\\n    });\\n}\\n\\nfunction addListItem(name, defaultValue, maxCount, childrenHtml, functionName) {\\n  const formData = getFormData();\\n  let value = accessObjectPath(formData, name) ?? [];\\n  const itemIndex = value.length;\\n  if (maxCount !== undefined && maxCount &gt; value.length) {\\n    value = value.concat([defaultValue]);\\n  } else {\\n    value = value.concat([defaultValue]);\\n  }\\n  const listContainer = document.getElementById(name);\\n  const newItem = document.createElement(\\"div\\");\\n  newItem.class = \\"row\\";\\n  newItem.id = \`item-\${name}.\${itemIndex}\`;\\n  newItem.innerHTML = \`\\n&lt;div class=\\"col-1\\"&gt;\\n&lt;span id=\\"remove-item-\${name}\\" name=\\"Remove Item\\" class=\\"badge badge-pill\\" role=\\"button\\" tabindex=\\"0\\" onclick=\\"onDelListItem\${functionName}('\${name}', \${itemIndex})\\" onkeydown=\\"onDelListItem\${functionName}('\${name}', \${itemIndex})\\"&gt;\\n  &lt;i className=\\"octicon octicon-dash\\"&gt;&lt;span&gt;-&lt;/span&gt;&lt;/i&gt;\\n&lt;/span&gt;\\n&lt;/div&gt;\\n&lt;div class=\\"col-11\\"&gt;\\n\${childrenHtml}\\n&lt;/div&gt;\\n\`;\\n  listContainer.appendChild(newItem);\\n  // Replace all \\"$\\" from \`input\` and \`select\` with the \`itemIndex\`\\n  const newItemElement = document.getElementById(newItem.id);\\n  [\\n    ...newItemElement.querySelectorAll('input[id*=\\"$\\"], select[id*=\\"$\\"]'),\\n  ].forEach((el) =&gt; {\\n    if (el.id.split(\\".\\").pop() !== \\"$\\") {\\n      el.id = \`\${name}.\${itemIndex}.\${el.id.split(\\".\\").pop()}\`;\\n      el.name = \`\${name}.\${itemIndex}.\${el.id.split(\\".\\").pop()}\`;\\n    } else {\\n      el.id = \`\${name}.\${itemIndex}\`;\\n      el.name = \`\${name}.\${itemIndex}\`;\\n    }\\n  });\\n  // Get the root element of a nested list\\n  [...newItemElement.querySelectorAll(\\"div[role='list']\\")].forEach(\\n    (nestedListContainer) =&gt; {\\n      if (!nestedListContainer) {\\n        return;\\n      }\\n      // Replace \\"$\\" from the root element if necessary\\n      const nestedListPathWithIndex = splitLastOccurrence(\\n        nestedListContainer.id,\\n        \\"$\\"\\n      )?.[1]?.replace(\\"$\\", \`\${itemIndex}\`);\\n      nestedListContainer.id = nestedListPathWithIndex\\n        ? \`\${name}.\${nestedListPathWithIndex}\`\\n        : name;\\n      // Replace \\"$\\" from all nested Add Item element\\n      [...newItemElement.querySelectorAll(\\"[id^=add-item]\\")].forEach(\\n        (addItem) =&gt; {\\n          const addItemPathWithIndex = splitLastOccurrence(\\n            addItem.id,\\n            \\"$\\"\\n          )?.[1]?.replace(\\"$\\", \`\${itemIndex}\`);\\n          addItem.id = addItemPathWithIndex\\n            ? \`add-item-\${name}.\${addItemPathWithIndex}\`\\n            : \`add-item-\${name}\`;\\n          const addItemOnClick = addItem.getAttribute(\\"onclick\\");\\n          if (addItemOnClick) {\\n            addItem.setAttribute(\\n              \\"onclick\\",\\n              getFunctionName(addItemOnClick, itemIndex)\\n            );\\n          }\\n          const addItemOnKeydown = addItem.getAttribute(\\"onkeydown\\");\\n          if (addItemOnKeydown) {\\n            addItem.setAttribute(\\n              \\"onkeydown\\",\\n              getFunctionName(addItemOnKeydown, itemIndex)\\n            );\\n          }\\n        }\\n      );\\n      // Replace \\"$\\" from the Remove Item element\\n      [...newItemElement.querySelectorAll(\\"[id^=remove-item]\\")].forEach(\\n        (removeItem) =&gt; {\\n          const removeItemPathWithIndex = splitLastOccurrence(\\n            removeItem.id,\\n            \\"$\\"\\n          )?.[1]?.replace(\\"$\\", \`\${itemIndex}\`);\\n          removeItem.id = removeItemPathWithIndex\\n            ? \`remove-item-\${name}.\${removeItemPathWithIndex}\`\\n            : \`remove-item-\${name}\`;\\n          const removeItemOnClick = removeItem.getAttribute(\\"onclick\\");\\n          if (removeItemOnClick) {\\n            removeItem.setAttribute(\\n              \\"onclick\\",\\n              getFunctionName(removeItemOnClick, itemIndex)\\n            );\\n          }\\n          const removeItemOnKeydown = removeItem.getAttribute(\\"onkeydown\\");\\n          if (removeItemOnKeydown) {\\n            removeItem.setAttribute(\\n              \\"onkeydown\\",\\n              getFunctionName(removeItemOnKeydown, itemIndex)\\n            );\\n          }\\n        }\\n      );\\n    }\\n  );\\n}\\nfunction getFunctionName(functionCall, itemIndex) {\\n  const [call, argument, end] = functionCall.split(\\"'\\");\\n  const [argumentName, argumentNameToReplace] = splitLastOccurrence(\\n    argument,\\n    \\"$\\"\\n  );\\n  return \`\${call}'\${argumentName}\${\\n    argumentNameToReplace?.replace(\\"$\\", \`\${itemIndex}\`) ?? \\"\\"\\n  }'\${end}\`;\\n}\\nfunction splitLastOccurrence(str, char) {\\n  const lastIndex = str.lastIndexOf(char);\\n  if (lastIndex === -1) {\\n    return [str];\\n  }\\n  return [str.substring(0, lastIndex), str.substring(lastIndex)];\\n}\\nfunction getListValue(itemListElement) {\\n  function setValue(obj, path, value) {\\n    const keys = path.split(\\".\\");\\n    let current = obj;\\n\\n    for (let i = 0; i &lt; keys.length; i++) {\\n      const key = keys[i];\\n      const isArray = !isNaN(keys[i + 1]);\\n\\n      if (i === keys.length - 1) {\\n        current[key] = value;\\n      } else {\\n        if (!current[key]) {\\n          current[key] = isArray ? [] : {};\\n        }\\n        if (isArray && !Array.isArray(current[key])) {\\n          current[key] = [];\\n        }\\n        current = current[key];\\n      }\\n    }\\n  }\\n\\n  function traverse(element, result, path = \\"\\") {\\n    element.querySelectorAll(\\"input, select\\").forEach((input) =&gt; {\\n      if (input.id) {\\n        setValue(result, input.id, input.value || \\"\\");\\n      }\\n    });\\n  }\\n\\n  const result = {};\\n  traverse(itemListElement, result);\\n  const [_, path] = itemListElement.id.split(\\"item-\\");\\n  return accessObjectPath(result, path);\\n}\\nfunction accessObjectPath(obj, objPath) {\\n  return objPath.split(\\".\\")?.reduce((acc, pathPiece) =&gt; acc?.[pathPiece], obj);\\n}\\n// List Field Helper functions -- END --\\n"]},"setValueFromModelCode":{"code":"data?.friends?.forEach((value, index) =&gt; {\\n// Add element;\\nonAddListItemFriends(\`friends\`, true)\\nconst itemIndex__currentItem = \`friends.\${index}\`\\n\\n    \\n        document.getElementById(\`\${itemIndex__currentItem}.name\`).value = value?.name ?? \\"\\";\\n    \\n\\n    \\n        document.getElementById(\`\${itemIndex__currentItem}.age\`).value = value?.age ?? \\"\\";\\n    \\n\\n    \\n        \\nsetSelectValue(\`\${itemIndex__currentItem}.country\`, value?.country);\\n\\n    \\n\\n    \\n        document.getElementById(\`\${itemIndex__currentItem}.married\`).checked = value?.married ?? \\"\\";\\n    \\n\\n    \\n        value?.know?.forEach((value, index) =&gt; {\\n// Add element;\\nonAddListItemFriends$Know(\`\${itemIndex__currentItem}.know\`, true)\\nconst nested__itemIndex__currentItem = \`\${itemIndex__currentItem}.know.\${index}\`\\ndocument.getElementById(\`\${nested__itemIndex__currentItem}\`).value = value ?? \\"\\";\\n});\\n    \\n\\n    \\n        \\nsetSelectValue(\`\${itemIndex__currentItem}.areas\`, value?.areas);\\n\\n    \\n\\n    \\n        document.getElementById(\`\${itemIndex__currentItem}.birthday\`).value = value?.birthday ? new Date(value?.birthday).toISOString().slice(0, 16) : \\"\\";\\n    \\n\\n});","requiredCode":[]},"writeValueToModelCode":{"code":"formData.friends = Array.from(document.getElementById(\\"friends\\").childNodes).reduce((values, element) =&gt; {\\n  return [...values, getListValue(element)];\\n}, []);","requiredCode":[]}}
</div>
`;
